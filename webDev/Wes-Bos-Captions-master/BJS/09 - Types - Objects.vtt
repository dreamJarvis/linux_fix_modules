WEBVTT

1
00:00:00.733 --> 00:00:03.316
(upbeat music)

2
00:00:05.340 --> 00:00:07.540
<v Instructor>The next type we have is object.</v>

3
00:00:07.540 --> 00:00:08.660
I told you we'd do Booleans

4
00:00:08.660 --> 00:00:11.170
but I'm saving that until we hit equality.

5
00:00:11.170 --> 00:00:12.830
So, objects in JavaScript

6
00:00:12.830 --> 00:00:16.590
are probably the biggest building block,

7
00:00:16.590 --> 00:00:19.730
meaning that everything in JavaScript is an object,

8
00:00:19.730 --> 00:00:20.770
and I know I keep saying that,

9
00:00:20.770 --> 00:00:24.290
I'm gonna tell you what that means in a coming video,

10
00:00:24.290 --> 00:00:28.260
but generally, objects are used for collections of data

11
00:00:28.260 --> 00:00:30.380
or in collections of functionality,

12
00:00:30.380 --> 00:00:34.180
and actually, we get into sort of custom things

13
00:00:34.180 --> 00:00:38.270
like arrays and dates and all kinds of neat things

14
00:00:38.270 --> 00:00:40.580
and they all are built upon JavaScript.

15
00:00:40.580 --> 00:00:43.760
So, we are obviously gonna go much more into objects

16
00:00:43.760 --> 00:00:45.820
throughout this course, we have an entire section on it,

17
00:00:45.820 --> 00:00:48.690
and we will be using them throughout all of our examples.

18
00:00:48.690 --> 00:00:49.690
But for now, we need to know

19
00:00:49.690 --> 00:00:52.970
that when something is an object in JavaScript

20
00:00:52.970 --> 00:00:55.760
is 'cause we want to group things together.

21
00:00:55.760 --> 00:01:00.380
So we've been using name and age and first and last examples

22
00:01:00.380 --> 00:01:03.380
and they have just been random variables that we have.

23
00:01:03.380 --> 00:01:07.500
So, we have, like, const name is equal to wes

24
00:01:07.500 --> 00:01:10.530
and const age is equal to a hundred.

25
00:01:10.530 --> 00:01:12.560
That's not all that great

26
00:01:12.560 --> 00:01:14.760
because they're not associated in any way.

27
00:01:14.760 --> 00:01:18.330
So, what we can do is we can create an object called person

28
00:01:18.330 --> 00:01:20.070
and we put a semicolon at the end of that

29
00:01:20.070 --> 00:01:22.260
because when you want to make an object,

30
00:01:22.260 --> 00:01:23.960
you use a set of curly brackets.

31
00:01:23.960 --> 00:01:25.470
We'll talk about other ways to make an object.

32
00:01:25.470 --> 00:01:27.480
That's by far the most common.

33
00:01:27.480 --> 00:01:29.760
And then inside of that person,

34
00:01:29.760 --> 00:01:32.940
you have what are called properties and values.

35
00:01:32.940 --> 00:01:36.073
So, we can say first: 'wes'

36
00:01:37.510 --> 00:01:39.113
and last: 'boss'

37
00:01:40.940 --> 00:01:44.070
and my we'll put age as 100.

38
00:01:44.070 --> 00:01:47.040
So, what we've done here is we've create an object

39
00:01:47.040 --> 00:01:51.040
which allows us to group together sort of like subvariables.

40
00:01:51.040 --> 00:01:52.300
I'm doing air quotes right now,

41
00:01:52.300 --> 00:01:55.600
you can't see me but, air quotes, subvariables,

42
00:01:55.600 --> 00:01:58.670
meaning that we have the first, the last, and age

43
00:01:58.670 --> 00:02:01.130
all contained within an object

44
00:02:01.130 --> 00:02:04.560
or a collection that is the person.

45
00:02:04.560 --> 00:02:07.160
Now, if we take a look at that person here,

46
00:02:07.160 --> 00:02:09.380
you'll see that it returns to us an object.

47
00:02:09.380 --> 00:02:13.130
We can do typeof person and it gives us an object.

48
00:02:13.130 --> 00:02:14.490
And if you open up that object,

49
00:02:14.490 --> 00:02:18.910
you see we have our properties: age, first, and last.

50
00:02:18.910 --> 00:02:22.660
You might be saying, "That's not the order we put them in,"

51
00:02:22.660 --> 00:02:25.090
we'll go into that, but the short and skinny of it

52
00:02:25.090 --> 00:02:27.220
is that order doesn't matter in an object.

53
00:02:27.220 --> 00:02:28.673
They can be in any order.

54
00:02:30.137 --> 00:02:32.853
If you need order to matter, then you use an array.

55
00:02:35.190 --> 00:02:37.020
And then inside of that, we have our three properties.

56
00:02:37.020 --> 00:02:38.200
To access the properties,

57
00:02:38.200 --> 00:02:39.930
there's a couple different ways we can do it.

58
00:02:39.930 --> 00:02:41.290
I'm gonna show you the easiest

59
00:02:41.290 --> 00:02:43.040
which is person.first, person.last,

60
00:02:45.052 --> 00:02:46.460
and person.age.

61
00:02:46.460 --> 00:02:48.180
So we use the dot notation there.

62
00:02:48.180 --> 00:02:50.360
When we get into the full-blown objects,

63
00:02:50.360 --> 00:02:53.600
I'm going to be detailing a couple other ways to do it,

64
00:02:53.600 --> 00:02:56.220
as well as things like nesting objects

65
00:02:56.220 --> 00:02:58.730
and object versus reference and copying objects

66
00:02:58.730 --> 00:03:01.360
and there's so much that we need to learn about object.

67
00:03:01.360 --> 00:03:02.500
The last thing we need to talk about

68
00:03:02.500 --> 00:03:05.210
is the last type, and that is a symbol.

69
00:03:05.210 --> 00:03:07.570
What we need to know about it right now

70
00:03:07.570 --> 00:03:10.740
is that it is a way to do unique properties

71
00:03:10.740 --> 00:03:13.400
or just unique identifiers in general in JavaScript.

72
00:03:13.400 --> 00:03:16.320
That's all we need to know about it right now.

73
00:03:16.320 --> 00:03:19.440
And anything else I would tell,

74
00:03:19.440 --> 00:03:20.830
it would be a little bit too deep-end

75
00:03:20.830 --> 00:03:23.430
because it's something that is used more

76
00:03:23.430 --> 00:03:26.750
in lower-level libraries and by more advanced users.

77
00:03:26.750 --> 00:03:29.760
I personally don't even use them all that much, or ever,

78
00:03:29.760 --> 00:03:33.020
in my JavaScript, so don't worry about those just yet.

79
00:03:33.020 --> 00:03:35.750
Just know that a symbol is one of the types.

80
00:03:35.750 --> 00:03:38.010
And if you ever have to have a interview question

81
00:03:38.010 --> 00:03:42.930
being popped up, just remember, what was our silly acronym?

82
00:03:42.930 --> 00:03:44.013
SNOBUSN.

83
00:03:45.540 --> 00:03:48.820
So, string, number, object, Boolean,

84
00:03:48.820 --> 00:03:52.410
undefined, symbol,

85
00:03:52.410 --> 00:03:55.210
and null. (chuckles)

86
00:03:55.210 --> 00:03:56.570
That's what they all are

87
00:03:56.570 --> 00:03:59.030
and hopefully you'll nail that interview.

88
00:03:59.030 --> 00:04:01.653
Let's just into the next one which is null and undefined.

