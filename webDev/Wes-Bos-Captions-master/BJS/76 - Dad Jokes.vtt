WEBVTT

1
00:00:00.668 --> 00:00:03.251
(upbeat music)

2
00:00:06.540 --> 00:00:08.030
<v Instructor>Alright folks, we're gonna build</v>

3
00:00:08.030 --> 00:00:10.780
another Ajax example here we're using the icon

4
00:00:10.780 --> 00:00:14.837
has dad joke API to build this or when you click it

5
00:00:14.837 --> 00:00:18.490
now just fetch a random dad joke from the API

6
00:00:18.490 --> 00:00:21.170
and display it we switch out a random amount

7
00:00:21.170 --> 00:00:23.023
of texts in this button here.

8
00:00:23.950 --> 00:00:28.930
So this is a pretty fun one because it's a simple API,

9
00:00:28.930 --> 00:00:31.830
you can get random jokes, you can get a specific joke

10
00:00:31.830 --> 00:00:33.340
and you can also search the jokes

11
00:00:33.340 --> 00:00:35.380
we're gonna be doing the random joke one

12
00:00:35.380 --> 00:00:37.630
but I encourage you to check out the rest

13
00:00:37.630 --> 00:00:39.770
of the API endpoints as well.

14
00:00:39.770 --> 00:00:42.570
you see lift got all the different endpoints right here.

15
00:00:43.470 --> 00:00:46.290
And the other thing about it is that it requires

16
00:00:46.290 --> 00:00:48.490
some custom headers, which is a good thing to learn.

17
00:00:48.490 --> 00:00:50.030
And then finally this, we're gonna build

18
00:00:50.030 --> 00:00:53.220
this cool little thing for the button

19
00:00:53.220 --> 00:00:58.220
so that it doesn't duplicate the same button text twice

20
00:00:58.490 --> 00:01:02.390
in a row 'cause sometimes random is not random enough

21
00:01:02.390 --> 00:01:04.860
you have to tell it give me a random that is not this thing.

22
00:01:04.860 --> 00:01:06.280
So first thing we're gonna do

23
00:01:06.280 --> 00:01:08.900
is we'll open up our index HTML

24
00:01:08.900 --> 00:01:12.200
I'm in 74 Dad jokes will open that up in the browser here.

25
00:01:12.200 --> 00:01:14.040
And you'll see where some basic HTML here

26
00:01:14.040 --> 00:01:17.270
we've got a button that we can click

27
00:01:17.270 --> 00:01:21.280
and we've got a div where we can display our joke.

28
00:01:21.280 --> 00:01:23.800
So let's go ahead and select that button first of all

29
00:01:23.800 --> 00:01:25.370
so get joke button const

30
00:01:25.370 --> 00:01:29.033
joke button is equal to document.querySelector.

31
00:01:30.174 --> 00:01:32.800
Get the get joke and then we'll duplicate that

32
00:01:32.800 --> 00:01:35.640
and make a joke holder and for that

33
00:01:35.640 --> 00:01:38.940
it will be a joke the p inside of the joke div.

34
00:01:38.940 --> 00:01:42.530
So say .joke p okay

35
00:01:42.530 --> 00:01:46.760
so first thing I wanna do is let's build a function

36
00:01:46.760 --> 00:01:48.820
that will just go off and get a joke.

37
00:01:48.820 --> 00:01:51.790
So we're gonna go to the icon has Dad joke.

38
00:01:51.790 --> 00:01:54.270
And we'll go to the bottom here and click on API.

39
00:01:54.270 --> 00:01:56.500
And we'll just kind of read through how it works here.

40
00:01:56.500 --> 00:02:00.940
So it has an API used for fetching random joke

41
00:02:00.940 --> 00:02:02.170
blah, blah, blah authentication

42
00:02:02.170 --> 00:02:04.110
no authentication is required enjoy

43
00:02:04.110 --> 00:02:07.040
great, okay, good API response it.

44
00:02:07.040 --> 00:02:11.150
All API endpoints follow the respective browser URLs.

45
00:02:11.150 --> 00:02:13.300
But we have to adjust the response formatting

46
00:02:13.300 --> 00:02:15.750
to be more suited for an API based on

47
00:02:15.750 --> 00:02:18.750
the provided HTTP except header.

48
00:02:18.750 --> 00:02:23.750
So what that means is that we can get a joke back as HTML,

49
00:02:24.130 --> 00:02:27.223
or as JSON or as plain text.

50
00:02:28.620 --> 00:02:31.540
Now that's interesting because the endpoint

51
00:02:31.540 --> 00:02:34.910
is going to be the same for everybody.

52
00:02:34.910 --> 00:02:38.410
But depending on what we pass,

53
00:02:38.410 --> 00:02:40.460
it will return different values to us.

54
00:02:40.460 --> 00:02:43.190
So let's start with that down here

55
00:02:43.190 --> 00:02:46.683
and we'll make it a sync function called fetch joke.

56
00:02:49.860 --> 00:02:53.470
Set cost responses equal to await fetch

57
00:02:53.470 --> 00:02:56.390
and we are going to fetch the URL

58
00:02:56.390 --> 00:02:58.970
is ICanHaveDadJoke.com

59
00:02:58.970 --> 00:03:01.630
That is the API endpoint in this case

60
00:03:01.630 --> 00:03:03.170
which is kind of interesting

61
00:03:03.170 --> 00:03:05.010
'cause that is also the website

62
00:03:05.010 --> 00:03:07.960
so the server will be able to

63
00:03:07.960 --> 00:03:11.640
or we will tell the server what kind of response we want.

64
00:03:11.640 --> 00:03:14.180
So we have this response we await fetch

65
00:03:14.180 --> 00:03:18.833
and then let's just console log the response.

66
00:03:21.270 --> 00:03:24.730
When we load the page, let's just run fetch joke

67
00:03:24.730 --> 00:03:28.290
just so we can kick this thing off, open up our div tools

68
00:03:31.760 --> 00:03:34.170
and rez is not defined, Oh,

69
00:03:34.170 --> 00:03:35.870
it's 'cause they call it response.

70
00:03:37.330 --> 00:03:40.160
So here we go, here is the response

71
00:03:40.160 --> 00:03:43.330
now we need to be able to turn that

72
00:03:43.330 --> 00:03:45.000
into something that is readable

73
00:03:45.000 --> 00:03:49.390
so we'll say const joke is equal to response.

74
00:03:49.390 --> 00:03:51.400
And normally we say something like dot JSON

75
00:03:51.400 --> 00:03:53.983
Let's try that and see what we get.

76
00:03:56.260 --> 00:03:59.330
Here we go syntax error unexpected token angle bracket.

77
00:03:59.330 --> 00:04:01.400
In at JSON on a position zero,

78
00:04:01.400 --> 00:04:02.960
this is something you hit all the time.

79
00:04:02.960 --> 00:04:05.310
And what this error means

80
00:04:05.310 --> 00:04:09.860
is that you have been returned some HTML likely

81
00:04:09.860 --> 00:04:12.580
'cause it's returned an open angle bracket

82
00:04:12.580 --> 00:04:15.090
and while it's trying to parse that JSON

83
00:04:15.090 --> 00:04:19.470
it's going, whoa, that's not JSON that's it is HTML.

84
00:04:19.470 --> 00:04:21.270
And the way that we can check that is if we go

85
00:04:21.270 --> 00:04:24.830
to the network here and we find the actual

86
00:04:26.330 --> 00:04:29.510
I can has dad joke request and you click through to it

87
00:04:29.510 --> 00:04:34.407
the response you'll see the response is just an HTML

88
00:04:36.320 --> 00:04:37.520
document that came back

89
00:04:37.520 --> 00:04:42.520
so you see how you can use a fetch request to fetch data

90
00:04:42.720 --> 00:04:45.540
from a totally separate website.

91
00:04:45.540 --> 00:04:47.100
Not all websites will like to do this

92
00:04:47.100 --> 00:04:49.076
but because they have a course policy setup

93
00:04:49.076 --> 00:04:50.580
are able to do it.

94
00:04:50.580 --> 00:04:54.520
So it tells us that we need to pass an accept header

95
00:04:54.520 --> 00:04:58.330
that's either text HTML which is what we saw

96
00:04:58.330 --> 00:05:02.637
or JSON or plain text so we need to pass along a header.

97
00:05:02.637 --> 00:05:03.690
What's a header?

98
00:05:03.690 --> 00:05:07.250
Well, a header is some additional information

99
00:05:07.250 --> 00:05:09.810
that comes along with a request.

100
00:05:09.810 --> 00:05:12.560
It's sort of like we're passing query parameters

101
00:05:12.560 --> 00:05:14.700
but headers are their own spot

102
00:05:14.700 --> 00:05:17.870
to pass along information along with it.

103
00:05:17.870 --> 00:05:22.560
So you can see if we click on this request right here

104
00:05:22.560 --> 00:05:27.160
the URL, the method, the status code,

105
00:05:27.160 --> 00:05:30.430
the remote address, and the refer policy,

106
00:05:30.430 --> 00:05:31.890
those are all pieces of information

107
00:05:31.890 --> 00:05:33.900
that the browser will send along

108
00:05:33.900 --> 00:05:35.190
and then when it comes back,

109
00:05:35.190 --> 00:05:37.450
you also get some headers in terms of like,

110
00:05:37.450 --> 00:05:38.630
what data comes back

111
00:05:39.510 --> 00:05:42.280
there's some stuff with like CloudFlare in here

112
00:05:42.280 --> 00:05:45.100
there's usually Google Analytics cookies in there

113
00:05:45.100 --> 00:05:47.230
things like that so what we need to do

114
00:05:47.230 --> 00:05:49.310
is pass along additional information.

115
00:05:49.310 --> 00:05:51.550
And the way that that works with fetch

116
00:05:51.550 --> 00:05:55.600
is that you pass a second object to fetch

117
00:05:55.600 --> 00:05:58.380
and this can take a whole bunch of different arguments

118
00:05:58.380 --> 00:06:01.260
in our case, we just wanna pass a header object.

119
00:06:01.260 --> 00:06:04.240
So it's an object with a headers object inside of it

120
00:06:04.240 --> 00:06:07.580
now it's a two levels deep and then it tells us

121
00:06:07.580 --> 00:06:09.920
that we need the Accept header, okay?

122
00:06:09.920 --> 00:06:11.680
So it's called accept capital A

123
00:06:11.680 --> 00:06:13.540
it's important that we do capital

124
00:06:13.540 --> 00:06:16.520
and then it's expecting one of the

125
00:06:16.520 --> 00:06:21.053
so if I then turn this to application JSON,

126
00:06:24.412 --> 00:06:29.300
then when we refresh, you'll see we've got a promise.

127
00:06:29.300 --> 00:06:34.300
Oh, did we forget, yeah we forget to await response at JSON.

128
00:06:35.400 --> 00:06:38.450
You see that comes back is some data.

129
00:06:38.450 --> 00:06:41.943
Same thing is if I change that to text plane,

130
00:06:47.030 --> 00:06:48.750
let's just gonna overwrite the first one,

131
00:06:48.750 --> 00:06:50.500
okay to have double there.

132
00:06:50.500 --> 00:06:54.000
And we get the same error unexpected token W

133
00:06:54.000 --> 00:06:57.380
at position zero so go to my Network tab

134
00:06:57.380 --> 00:07:01.410
look at the response and the reason is unexpected W

135
00:07:01.410 --> 00:07:03.520
because it returned to us text.

136
00:07:03.520 --> 00:07:06.940
What do you call a droid that takes a long way around RTD?

137
00:07:06.940 --> 00:07:11.940
Oh my gosh RTD okay, so that just shows you

138
00:07:12.580 --> 00:07:16.010
that you can fetch HTML, plain text or JSON.

139
00:07:16.010 --> 00:07:19.470
And why is that, it's that's not just 'cause I changed this.

140
00:07:19.470 --> 00:07:23.100
That's because we are sending this request to the server

141
00:07:23.100 --> 00:07:25.560
and the server offers up those three kinds

142
00:07:25.560 --> 00:07:27.550
not every API will offer that up.

143
00:07:27.550 --> 00:07:29.550
So in our case, we wanna stick with JSON

144
00:07:30.430 --> 00:07:33.370
and it looks like we have the joke there.

145
00:07:33.370 --> 00:07:35.690
And then we let's just simply return

146
00:07:37.310 --> 00:07:39.560
maybe let's call that data.

147
00:07:39.560 --> 00:07:41.970
And then we return the whole data.

148
00:07:41.970 --> 00:07:43.370
The reason why I'm gonna call that data

149
00:07:43.370 --> 00:07:45.890
is 'cause I don't wanna say joke.joke

150
00:07:45.890 --> 00:07:49.263
to get the actual joke property here.

151
00:07:50.410 --> 00:07:53.967
Similarly, you could also just return JSON.response

152
00:07:58.510 --> 00:08:02.740
because this is already on async method,

153
00:08:02.740 --> 00:08:05.300
we will be awaiting the fetch joke either way,

154
00:08:05.300 --> 00:08:08.450
so I prefer to do it like this

155
00:08:08.450 --> 00:08:10.840
just so that if I ever need to like pop pop

156
00:08:10.840 --> 00:08:13.540
a quick console log in there then I'm able to do that.

157
00:08:17.250 --> 00:08:19.450
Alright, next thing I wanna do is,

158
00:08:19.450 --> 00:08:22.150
let's wire up this button so that when someone clicks it,

159
00:08:22.150 --> 00:08:23.930
we will go and fetch a joke.

160
00:08:23.930 --> 00:08:28.900
So make a function called handle click

161
00:08:32.290 --> 00:08:35.920
and we'll of get rid of this fetch joke on run

162
00:08:35.920 --> 00:08:40.920
and then we'll say const joke is equal to await fetch joke.

163
00:08:44.950 --> 00:08:47.220
And now we need to put in async

164
00:08:47.220 --> 00:08:49.160
on this function so we can use that

165
00:08:49.160 --> 00:08:50.960
and the reason why I'm destructuring here

166
00:08:50.960 --> 00:08:53.220
is because we're returning data,

167
00:08:53.220 --> 00:08:56.150
which will have an ID, a joke and a status.

168
00:08:56.150 --> 00:08:59.150
And we only want the joke property there.

169
00:08:59.150 --> 00:09:01.120
You might want some of this other information,

170
00:09:01.120 --> 00:09:03.630
which is why I'm not throwing it out.

171
00:09:03.630 --> 00:09:05.440
But in our case, we just want the joke

172
00:09:05.440 --> 00:09:09.390
so we're destructuring the joke into a variable called joke.

173
00:09:09.390 --> 00:09:12.770
And then let's just console log joke

174
00:09:12.770 --> 00:09:15.300
and then we'll take our joke button

175
00:09:15.300 --> 00:09:18.680
will add an event listener, listen for click,

176
00:09:18.680 --> 00:09:21.393
and when that happens, we'll run the handle, click.

177
00:09:23.470 --> 00:09:28.470
So now when we run it, we get a new joke every single time

178
00:09:31.380 --> 00:09:34.380
that we cook it, good so what we can do here now

179
00:09:35.554 --> 00:09:40.320
is we take our joke holder and we'll set the text content

180
00:09:40.320 --> 00:09:44.370
of that to be joke okay, looking good.

181
00:09:44.370 --> 00:09:47.930
Next up, what I wanna do is I wanna put the button text

182
00:09:47.930 --> 00:09:50.250
to be one of these randomly

183
00:09:50.250 --> 00:09:53.340
so let's make a new function above this

184
00:09:53.340 --> 00:09:56.580
and it's a utility function

185
00:09:56.580 --> 00:10:00.093
so we're just gonna call it random item from array.

186
00:10:02.850 --> 00:10:04.780
And that will take in an array

187
00:10:04.780 --> 00:10:08.590
and it will also take in something that it should not be.

188
00:10:08.590 --> 00:10:11.340
And we'll implement that in just a second

189
00:10:11.340 --> 00:10:15.150
then what we do is we'll say const item is equal to

190
00:10:15.150 --> 00:10:17.410
will take the array that was passed in,

191
00:10:17.410 --> 00:10:21.030
and we'll look up a random.

192
00:10:21.030 --> 00:10:25.110
So if I have an array that is five items long,

193
00:10:25.110 --> 00:10:30.110
I simply just need to run math.random times five.

194
00:10:34.090 --> 00:10:37.603
And then if I use math.floor around that,

195
00:10:40.850 --> 00:10:44.420
that will give me a random index between zero and four,

196
00:10:44.420 --> 00:10:46.840
which is good 'cause array start at zero

197
00:10:46.840 --> 00:10:49.920
so it's already working for us in that regard.

198
00:10:49.920 --> 00:10:52.370
And instead of just hard coding five

199
00:10:52.370 --> 00:10:55.350
will use the length of the button texts are right here

200
00:10:55.350 --> 00:11:00.060
so we can get that so say math.floor

201
00:11:04.120 --> 00:11:09.027
Take math.random times the array.length

202
00:11:11.230 --> 00:11:15.410
The reason why I'm using the past in array.length

203
00:11:15.410 --> 00:11:18.090
and not button text.length

204
00:11:18.090 --> 00:11:22.190
is because I want this function to be utility function

205
00:11:22.190 --> 00:11:25.050
and I wanna use this for, I don't know anything

206
00:11:25.050 --> 00:11:26.900
like I write these functions all the time

207
00:11:26.900 --> 00:11:30.420
and if they're not hard connected to this array

208
00:11:30.420 --> 00:11:31.950
you can use them with other arrays.

209
00:11:31.950 --> 00:11:34.560
So simply by passing in the array as an argument

210
00:11:37.154 --> 00:11:41.677
So we have our item here and let's just return the item.

211
00:11:43.260 --> 00:11:44.420
And let's try run it.

212
00:11:44.420 --> 00:11:47.943
So we have the array which is called button text.

213
00:11:53.090 --> 00:11:57.270
And we have our function which is called random item

214
00:11:57.270 --> 00:11:59.970
from array and then we'll just pass it our button text

215
00:12:00.810 --> 00:12:05.810
and now whenever I run it, it will give me a random item.

216
00:12:05.890 --> 00:12:07.700
From there we go, that finally happened.

217
00:12:07.700 --> 00:12:09.270
So this is the next problem.

218
00:12:09.270 --> 00:12:14.150
Sometimes it will randomly return the exact same thing

219
00:12:14.150 --> 00:12:16.853
which may make it seem like nothing happened.

220
00:12:17.920 --> 00:12:20.850
So that's where I pass in this knot.

221
00:12:20.850 --> 00:12:25.530
And here we'll say is if the item is equal to the one

222
00:12:25.530 --> 00:12:29.950
that it's not like, if the thing that we pass in

223
00:12:29.950 --> 00:12:32.690
is the last version, then we don't wanna return

224
00:12:32.690 --> 00:12:34.430
that same one again then run it again.

225
00:12:34.430 --> 00:12:38.600
So we simply return random item from array.

226
00:12:38.600 --> 00:12:40.410
We passed the array and we passed not

227
00:12:40.410 --> 00:12:42.970
and this is again, what do we call this

228
00:12:42.970 --> 00:12:46.230
where a function calls itself, this is recursion

229
00:12:46.230 --> 00:12:49.290
meaning that if the thing is the same time

230
00:12:49.290 --> 00:12:52.210
as the one that we're not looking for then run it again.

231
00:12:52.210 --> 00:12:56.407
And it's possible that this would run a couple times.

232
00:12:56.407 --> 00:12:59.610
And if that's the case then it would just keep going

233
00:12:59.610 --> 00:13:01.530
until it finds one that was not the same

234
00:13:01.530 --> 00:13:04.370
as we're looking for so we'll console log

235
00:13:04.370 --> 00:13:09.020
we use that one last time look again.

236
00:13:09.020 --> 00:13:10.673
Now when I run it,

237
00:13:14.150 --> 00:13:17.480
random item from array, button text

238
00:13:17.480 --> 00:13:19.260
and let's just run it like that

239
00:13:20.300 --> 00:13:24.493
and we don't wanna find 'please stop'

240
00:13:27.100 --> 00:13:29.463
So now if I run that a couple times.

241
00:13:33.584 --> 00:13:36.610
There we go, it looks like in this case,

242
00:13:36.610 --> 00:13:39.750
it was please stop and then it ran it again for us.

243
00:13:39.750 --> 00:13:42.383
So what we can do down here is

244
00:13:42.383 --> 00:13:47.383
will say jokeButton.textContent is equal to

245
00:13:48.760 --> 00:13:50.630
random item from array

246
00:13:50.630 --> 00:13:53.400
and we'll pass it in our button text array

247
00:13:53.400 --> 00:13:58.130
and then we'll also just pass it the jokeButton.textContent

248
00:13:58.130 --> 00:14:01.190
so like, whatever the button currently says

249
00:14:01.190 --> 00:14:03.690
don't return that one to me

250
00:14:03.690 --> 00:14:05.990
because that's already the current one.

251
00:14:05.990 --> 00:14:10.990
Now if we refresh this, it's working really, really well.

252
00:14:13.350 --> 00:14:15.800
And if I just keep clicking it, eventually

253
00:14:17.600 --> 00:14:20.553
we'll get a console log of we have we already used that one.

254
00:14:25.060 --> 00:14:27.870
There we go we use that one last time look again

255
00:14:27.870 --> 00:14:29.700
and it will just run over and over again.

256
00:14:29.700 --> 00:14:33.950
So if this was like really short like three items

257
00:14:33.950 --> 00:14:35.330
you would get it much more often.

258
00:14:35.330 --> 00:14:40.330
And we can even log which one was used so not

259
00:14:40.590 --> 00:14:42.590
we can log which one was used over again

260
00:14:42.590 --> 00:14:44.970
and now it's three items and I bet it will happen.

261
00:14:44.970 --> 00:14:46.970
We already used Ugh, so it ran it again.

262
00:14:48.520 --> 00:14:51.010
Ah, look at that it ran twice

263
00:14:51.010 --> 00:14:54.620
because they got OMG dad three times in a row.

264
00:14:54.620 --> 00:14:57.300
So it ran twice for us obviously I'll bring that back

265
00:14:58.730 --> 00:15:01.570
to what we have but that's just a handy little thing

266
00:15:01.570 --> 00:15:03.770
that we can do and good example of recursion.

267
00:15:03.770 --> 00:15:06.070
So this is working,

268
00:15:06.070 --> 00:15:08.630
something that I would like to maybe do

269
00:15:08.630 --> 00:15:11.113
is to show like a loading state.

270
00:15:11.960 --> 00:15:14.940
And what we could do with that

271
00:15:14.940 --> 00:15:17.820
is to make like a C S S loader.

272
00:15:17.820 --> 00:15:19.403
Let's go ahead and do that.

273
00:15:21.390 --> 00:15:23.653
We'll go into our joke here.

274
00:15:26.704 --> 00:15:28.733
And what do div for the class of loader.

275
00:15:30.935 --> 00:15:33.083
Let's just google C S S loader.

276
00:15:35.200 --> 00:15:37.333
Pure C S S loader this one looks good.

277
00:15:43.350 --> 00:15:46.703
So fun, I like this one so click on that.

278
00:15:48.100 --> 00:15:50.310
And it looks like we need to use this markup

279
00:15:50.310 --> 00:15:53.060
okay, so I don't need that loader I'll put that there.

280
00:15:53.060 --> 00:15:55.647
And it looks like we need this C S S

281
00:15:57.780 --> 00:16:02.780
paste it in and then let's take a look at it.

282
00:16:06.800 --> 00:16:10.880
It probably hides it by default article back

283
00:16:20.600 --> 00:16:21.700
and see how to use it.

284
00:16:23.860 --> 00:16:28.210
License there we go, click the letter you want done

285
00:16:28.210 --> 00:16:31.210
copy C S S, copy HTML done.

286
00:16:31.210 --> 00:16:34.110
That's not working, hey listen spectors

287
00:16:34.110 --> 00:16:38.850
this happens all time, you get some other weirdos code

288
00:16:38.850 --> 00:16:41.223
Let's open it up, Oh.

289
00:16:47.180 --> 00:16:50.393
So there's the ripple, Oh, you know why it's probably white.

290
00:16:53.340 --> 00:16:56.823
All right we'll just save our yellow.

291
00:16:58.390 --> 00:16:59.890
Oh my gosh it works of course

292
00:16:59.890 --> 00:17:03.130
so it was working is just that it was white over top of it.

293
00:17:03.130 --> 00:17:08.130
So what we can do is we can grab the loader as well,

294
00:17:15.280 --> 00:17:16.203
what is it got?

295
00:17:17.390 --> 00:17:19.070
It's got a class of LDS ripple.

296
00:17:19.070 --> 00:17:22.240
I'm also gonna get a class of loader.

297
00:17:22.240 --> 00:17:24.910
We can go up here and just say const loader

298
00:17:24.910 --> 00:17:27.880
is equal to loader

299
00:17:32.680 --> 00:17:37.680
and then when we fetch something, we will turn loader on.

300
00:17:39.690 --> 00:17:44.240
So by default, the loader should be displayed none.

301
00:17:44.240 --> 00:17:45.800
Let's turn that on.

302
00:17:45.800 --> 00:17:50.800
So top loader display none and then actually no do this.

303
00:18:01.090 --> 00:18:05.503
We'll make a class of hidden and will say display none.

304
00:18:06.790 --> 00:18:11.403
And then we'll go to our loader and add a class of hidden.

305
00:18:15.020 --> 00:18:19.110
Okay, and then when we wanna turn the loader on,

306
00:18:19.110 --> 00:18:24.110
we just say loader.classList.add or .remove hidden

307
00:18:27.600 --> 00:18:30.993
Let's see how we're doing there, okay.

308
00:18:32.370 --> 00:18:35.430
And then when the data comes back,

309
00:18:35.430 --> 00:18:38.460
we don't want to turn the loader off.

310
00:18:38.460 --> 00:18:43.460
So, add okay, then we also wanna hide maybe the joke.

311
00:18:53.040 --> 00:18:55.620
Maybe hide the button, well, well, that's happening.

312
00:18:55.620 --> 00:18:59.807
So we'll say a jokeButton.classList.add hidden

313
00:19:03.740 --> 00:19:08.263
and they'll do the opposite and remove it here.

314
00:19:11.460 --> 00:19:13.180
There we go, absolutely jarring.

315
00:19:13.180 --> 00:19:18.180
I wonder if we could put that thing inside of our button.

316
00:19:20.210 --> 00:19:22.853
Let's try it, let's go to our button.

317
00:19:26.010 --> 00:19:30.300
And we'll have to put a span in here

318
00:19:31.350 --> 00:19:36.350
with the class of joke text just get joke.

319
00:19:38.820 --> 00:19:41.393
And then we'll put our loader in there as well.

320
00:19:45.690 --> 00:19:49.180
Let's take the hit it off so we can see if it's there.

321
00:19:49.180 --> 00:19:52.223
Okay, let's make it white again.

322
00:20:01.330 --> 00:20:06.330
Okay, let's change this size.

323
00:20:06.870 --> 00:20:11.090
So I'll make a size variable, make it 20 px

324
00:20:11.090 --> 00:20:14.833
and then we'll swap out these with size.

325
00:20:25.933 --> 00:20:30.190
And these are all calculated, so it was 80 pixels.

326
00:20:30.190 --> 00:20:32.980
These don't seem to be calculated at all.

327
00:20:32.980 --> 00:20:37.980
Let's just say calc var size divided by two.

328
00:20:43.920 --> 00:20:46.740
And let's put this size variable up

329
00:20:47.850 --> 00:20:49.743
just on the HTML element.

330
00:20:53.410 --> 00:20:58.410
It's work in and then this ones

331
00:21:02.770 --> 00:21:05.620
We're is 80 pixels now they're 72

332
00:21:05.620 --> 00:21:10.620
So at 80 divided or other way around 90%.

333
00:21:16.850 --> 00:21:21.850
So calc var size times 0.9

334
00:21:29.536 --> 00:21:32.990
(Instructor laughing)

335
00:21:32.990 --> 00:21:36.670
It looks okay maybe these weren't exactly the right amount.

336
00:21:36.670 --> 00:21:38.203
It looks cool enough to me.

337
00:21:39.360 --> 00:21:43.683
So then we will put that back to hidden.

338
00:21:53.110 --> 00:21:56.960
And we got to modify our buttons now,

339
00:21:56.960 --> 00:22:00.950
so we don't want to hide the button or anymore.

340
00:22:00.950 --> 00:22:02.123
We'll get rid of that.

341
00:22:08.700 --> 00:22:10.940
Okay, it worked the first time.

342
00:22:10.940 --> 00:22:12.200
And then it doesn't work after that.

343
00:22:12.200 --> 00:22:14.440
And that's because we're overriding that span

344
00:22:14.440 --> 00:22:16.880
with the loader when we come into it.

345
00:22:16.880 --> 00:22:21.750
So what we need to do is say jokeButton

346
00:22:22.733 --> 00:22:23.673
and then we'll say jokeButton span is equal to

347
00:22:28.138 --> 00:22:30.221
joke button.querySelector

348
00:22:33.020 --> 00:22:35.463
What do we put a class on that, jokeText

349
00:22:42.160 --> 00:22:45.850
and then when we update the text with the joke

350
00:22:47.810 --> 00:22:51.473
that's here and here it'll be jokeButtonSpan.

351
00:22:54.251 --> 00:22:55.084
Uh, Uh!

352
00:22:57.510 --> 00:22:59.630
Looking good, obviously that I don't know.

353
00:22:59.630 --> 00:23:02.120
We'll see as scaling it down didn't work too well,

354
00:23:02.120 --> 00:23:04.090
but I'm sure you could figure that out.

355
00:23:04.090 --> 00:23:06.030
So that's I think that's enough for this one.

356
00:23:06.030 --> 00:23:09.090
Pretty fun little exercise, we'll see in the next one

