WEBVTT

1
00:00:00.451 --> 00:00:03.034
(upbeat music)

2
00:00:12.230 --> 00:00:13.822
<v Instructor>BEDMAS!</v>

3
00:00:13.822 --> 00:00:14.655
That's what we're gonna learn about real quick.

4
00:00:14.655 --> 00:00:16.559
If you know what BEDMAS is, skip this video.

5
00:00:16.559 --> 00:00:19.610
This is for anyone who needs to understand

6
00:00:19.610 --> 00:00:23.580
the order of operations in which JavaScript runs.

7
00:00:23.580 --> 00:00:27.990
It is exactly the same as how mathematics,

8
00:00:27.990 --> 00:00:31.050
mathematicians do it.

9
00:00:31.050 --> 00:00:32.570
So let's go through it real quick

10
00:00:32.570 --> 00:00:34.700
and then we'll sort of get into it.

11
00:00:34.700 --> 00:00:37.660
So the order at which things are run

12
00:00:37.660 --> 00:00:40.270
is that things inside of brackets go first,

13
00:00:40.270 --> 00:00:44.620
then we do exponents which is sort of like to the power of.

14
00:00:44.620 --> 00:00:47.220
We actually do have exponents in JavaScript.

15
00:00:47.220 --> 00:00:48.860
It's with these times times.

16
00:00:48.860 --> 00:00:51.120
So like if I were to go here and say like,

17
00:00:51.120 --> 00:00:55.520
two times times two, that is two to the power of two.

18
00:00:55.520 --> 00:00:57.560
Two to the power of 10, 1024.

19
00:00:57.560 --> 00:00:59.190
You get the point, right?

20
00:00:59.190 --> 00:01:01.810
Then division and multiplication, addition and subtraction.

21
00:01:01.810 --> 00:01:03.840
So like why is that all that useful?

22
00:01:03.840 --> 00:01:06.690
Well if we, let's go to this script tag here.

23
00:01:06.690 --> 00:01:08.730
If I make a variable called age

24
00:01:08.730 --> 00:01:13.730
and we do ten times 5, minus 2, what is that going to be?

25
00:01:14.320 --> 00:01:16.560
That's going to be 48.

26
00:01:16.560 --> 00:01:17.393
Why?

27
00:01:17.393 --> 00:01:19.650
Because, well let's go through it.

28
00:01:19.650 --> 00:01:21.110
Brackets, there are none.

29
00:01:22.099 --> 00:01:24.710
This should probably be like PEDMAS.

30
00:01:24.710 --> 00:01:26.557
Parentheses first.

31
00:01:26.557 --> 00:01:29.730
We have lots of kinds of brackets in JavaScript

32
00:01:29.730 --> 00:01:31.780
but the parentheses is the one that we're,

33
00:01:31.780 --> 00:01:33.910
the smooth brackets some people call it,

34
00:01:33.910 --> 00:01:34.960
these are the ones that's we're

35
00:01:34.960 --> 00:01:37.460
worried about here, the parentheses.

36
00:01:37.460 --> 00:01:41.713
So ten times 5, minus 2, well multiplication comes first.

37
00:01:42.764 --> 00:01:45.350
Okay so let's, that's 50, minus two is 48, right?

38
00:01:45.350 --> 00:01:50.350
But if we do const age2 is equal to ten times 5 minus 2,

39
00:01:52.470 --> 00:01:55.240
now what happens is everything inside of the brackets

40
00:01:55.240 --> 00:01:56.073
goes first.

41
00:01:56.073 --> 00:01:57.920
So we go here, this is a bracket,

42
00:01:57.920 --> 00:01:59.803
then we say there's no exponents,

43
00:01:59.803 --> 00:02:02.470
there's no multiplication, there's no division,

44
00:02:02.470 --> 00:02:05.530
there is no addition, and finally subtraction.

45
00:02:05.530 --> 00:02:06.983
Find my suit is 3.

46
00:02:09.718 --> 00:02:11.300
Ten times 3 is equal to 30, right?

47
00:02:11.300 --> 00:02:13.710
So the things inside of the brackets go first

48
00:02:13.710 --> 00:02:18.640
That is helpful when you do a thing like this

49
00:02:18.640 --> 00:02:21.260
If we were to take this calculated bill function

50
00:02:21.260 --> 00:02:23.241
which we've seen a lot

51
00:02:23.241 --> 00:02:24.840
(cowboy accent) Calculate Bill!

52
00:02:24.840 --> 00:02:26.210
We've seen it a lot

53
00:02:26.210 --> 00:02:29.010
then we go down here and say const total

54
00:02:29.010 --> 00:02:30.690
is equal to calculate bill

55
00:02:31.720 --> 00:02:34.350
And we'll say 100 bucks plus

56
00:02:34.350 --> 00:02:36.160
and then we run some parentheses

57
00:02:37.820 --> 00:02:42.820
and we run that with 20 bucks then we minus 15.

58
00:02:45.670 --> 00:02:49.040
Like this is maybe a bit confusing but like what happens is

59
00:02:49.040 --> 00:02:52.640
that these this will run this function

60
00:02:53.911 --> 00:02:55.810
and then they will all sort of equate to values

61
00:02:55.810 --> 00:02:57.080
so all of the functions run

62
00:02:57.080 --> 00:03:01.213
so calculate bill 100 will be equal to 128

63
00:03:04.480 --> 00:03:06.580
That gets replaced with 128

64
00:03:08.140 --> 00:03:10.310
then we run calculate bill again

65
00:03:10.310 --> 00:03:15.310
in here that's 25.6 so that gets replaced with 25.6

66
00:03:18.352 --> 00:03:20.340
and then we run it with 15

67
00:03:23.360 --> 00:03:27.250
and that gets replaced with 19.2

68
00:03:27.250 --> 00:03:30.350
then obviously the subtraction happens

69
00:03:30.350 --> 00:03:33.470
inside the parentheses first, and then it's added to 128

70
00:03:33.470 --> 00:03:36.160
That is order of operations.

71
00:03:36.160 --> 00:03:38.440
What we are now going to dive into

72
00:03:38.440 --> 00:03:40.500
is logic and flow controls.

73
00:03:40.500 --> 00:03:43.280
So it's funny because all of programming

74
00:03:43.280 --> 00:03:46.220
is logic and flow ccontrol, but we're gong to be

75
00:03:46.220 --> 00:03:48.680
sort of diving into all of the nuts and bolts

76
00:03:48.680 --> 00:03:52.270
of how do you structure your JavaScript in such a way

77
00:03:52.270 --> 00:03:54.920
when you want to do things only when things are true

78
00:03:54.920 --> 00:03:57.050
or you only want to do things so many times

79
00:03:57.050 --> 00:03:59.640
or you want to run the thing every 10 seconds

80
00:03:59.640 --> 00:04:02.430
or you want to run something after an amount of time

81
00:04:02.430 --> 00:04:04.280
We are diving into IF statements

82
00:04:05.639 --> 00:04:07.209
Truthy and falsey function returns

83
00:04:07.209 --> 00:04:11.160
equality using AND or OR or AND and OR together

84
00:04:11.160 --> 00:04:13.860
Ternaries which is a word that is hard for me to pronounce

85
00:04:13.860 --> 00:04:15.400
I always say Turnarary.

86
00:04:15.400 --> 00:04:18.650
Ternary, SWITCH statements, timers and intervals.

87
00:04:18.650 --> 00:04:20.653
So buckle up and let's go!

