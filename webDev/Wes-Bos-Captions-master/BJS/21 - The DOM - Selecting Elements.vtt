WEBVTT

1
00:00:00.773 --> 00:00:03.773
(soft upbeat music)

2
00:00:05.180 --> 00:00:06.180
<v Instructor>For this exercise, I want you</v>

3
00:00:06.180 --> 00:00:07.990
to go into the exercises folder,

4
00:00:07.990 --> 00:00:09.650
and you'll see the DOM folder.

5
00:00:09.650 --> 00:00:11.649
I've already created it for you.

6
00:00:11.649 --> 00:00:14.620
You'll see there's an index.html.

7
00:00:14.620 --> 00:00:16.820
You can open that up in your browser.

8
00:00:16.820 --> 00:00:19.570
And then we have a the DOM.js,

9
00:00:19.570 --> 00:00:22.400
which should be empty as well.

10
00:00:22.400 --> 00:00:25.110
So the first thing we wanna do is talk about where

11
00:00:25.110 --> 00:00:28.630
to load our JavaScript if we are selecting elements.

12
00:00:28.630 --> 00:00:30.586
So we're just gonna jump two minutes ahead and try

13
00:00:30.586 --> 00:00:33.280
to select this paragraph that's on the page.

14
00:00:33.280 --> 00:00:35.250
So I'm just gonna write it and then I'll explain it

15
00:00:35.250 --> 00:00:37.080
in just a sec, so I say const the paragraph

16
00:00:37.080 --> 00:00:39.840
is equal to the document.querySelector

17
00:00:39.840 --> 00:00:42.342
and we wanna grab the first paragraph on the page.

18
00:00:42.342 --> 00:00:44.750
And if we console log the paragraph,

19
00:00:44.750 --> 00:00:48.810
now if I wanna load this JavaScript into my index.html

20
00:00:48.810 --> 00:00:51.480
or into my application, you might think,

21
00:00:51.480 --> 00:00:54.190
okay, well, go into the head and we wanna give ourselves

22
00:00:54.190 --> 00:00:59.190
a script source and that will link to the DOM.js.

23
00:01:00.410 --> 00:01:03.470
Now, when this page runs, it's gonna run the JavaScript

24
00:01:03.470 --> 00:01:06.140
for us and will open up our dev tools here.

25
00:01:06.140 --> 00:01:08.561
And you'll see that we have null.

26
00:01:08.561 --> 00:01:12.000
So we're trying to select something on the page

27
00:01:12.000 --> 00:01:14.990
and console log it and it's showing us null.

28
00:01:14.990 --> 00:01:18.363
If I were to run this little ditty right here,

29
00:01:19.260 --> 00:01:22.090
oh, we can't use I can't use the same variable name.

30
00:01:22.090 --> 00:01:24.830
Let me just run the code and see if it returns an element.

31
00:01:24.830 --> 00:01:25.930
It does return an element.

32
00:01:25.930 --> 00:01:29.160
So like, why does it work if we paste it into here,

33
00:01:29.160 --> 00:01:31.480
but how come it doesn't work if we load it

34
00:01:31.480 --> 00:01:33.570
into via our JavaScript?

35
00:01:33.570 --> 00:01:35.799
And that is because this JavaScript is being loaded

36
00:01:35.799 --> 00:01:39.980
before our html is created and what's gonna happen

37
00:01:39.980 --> 00:01:41.980
is this JavaScript is downloaded

38
00:01:41.980 --> 00:01:46.130
and run before it even created the actual elements

39
00:01:46.130 --> 00:01:47.540
that are on the page.

40
00:01:47.540 --> 00:01:49.440
Now, there's different ways to get around that.

41
00:01:49.440 --> 00:01:52.430
There's async and defer attributes, but as we have said

42
00:01:52.430 --> 00:01:56.190
in the past, it's better just to put the script tag

43
00:01:56.190 --> 00:01:58.660
right before the closing body tag.

44
00:01:58.660 --> 00:02:01.250
Now what that will do is it will ensure

45
00:02:01.250 --> 00:02:05.290
that all of your html is first downloaded in parse

46
00:02:05.290 --> 00:02:07.836
to the page before it even goes ahead

47
00:02:07.836 --> 00:02:10.890
and downloads and runs the JavaScript.

48
00:02:10.890 --> 00:02:14.640
So now if we just refresh the same code, you'll see

49
00:02:14.640 --> 00:02:16.120
that it's immediately showing up.

50
00:02:16.120 --> 00:02:19.310
So that's probably the biggest email I get all the time

51
00:02:19.310 --> 00:02:21.060
from all my other JavaScript courses

52
00:02:21.060 --> 00:02:24.640
where people have taken some other JavaScript course

53
00:02:24.640 --> 00:02:27.950
or they just assume that since your css can go up here,

54
00:02:27.950 --> 00:02:30.130
can't your JavaScript go up there as well?

55
00:02:30.130 --> 00:02:32.086
And that returns null.

56
00:02:32.086 --> 00:02:34.210
So there are ways around it.

57
00:02:34.210 --> 00:02:37.680
What you can do is you can actually wrap all of your code

58
00:02:37.680 --> 00:02:40.090
in maybe we make a function called init

59
00:02:41.790 --> 00:02:44.310
and I'll put that on up here and then

60
00:02:44.310 --> 00:02:45.860
we can add an event listener.

61
00:02:45.860 --> 00:02:47.750
Again, this is jumping a bit ahead of ourselves,

62
00:02:47.750 --> 00:02:51.180
but we can say document.add event listener

63
00:02:51.180 --> 00:02:55.450
and we can listen for the DOM content loaded event

64
00:02:55.450 --> 00:02:58.740
and then run the init function when that happens.

65
00:02:58.740 --> 00:03:00.818
And then when I refresh here, you'll see

66
00:03:00.818 --> 00:03:04.132
that even though I'm running my script here,

67
00:03:04.132 --> 00:03:08.396
we are delaying the code that actually runs

68
00:03:08.396 --> 00:03:12.770
until all of the DOM content has been loaded to the page.

69
00:03:12.770 --> 00:03:16.420
So you'll see that maybe in some,

70
00:03:16.420 --> 00:03:18.450
it doesn't even hurt, like it's not gonna hurt

71
00:03:18.450 --> 00:03:21.656
to put it near the closing body tag.

72
00:03:21.656 --> 00:03:23.420
See, it works just fine.

73
00:03:23.420 --> 00:03:26.284
It's gonna fire for you as soon as it possibly can.

74
00:03:26.284 --> 00:03:29.410
But we don't necessarily need that

75
00:03:29.410 --> 00:03:32.940
if we are just running our code at the closing body tag.

76
00:03:32.940 --> 00:03:34.870
So that's exactly what we will be doing

77
00:03:34.870 --> 00:03:36.526
throughout this course.

78
00:03:36.526 --> 00:03:40.853
I am, I've been happy with that in all of my own projects.

79
00:03:41.700 --> 00:03:44.510
So before you actually go ahead and work with the items

80
00:03:44.510 --> 00:03:45.980
on the page, you need to go get them.

81
00:03:45.980 --> 00:03:47.650
And that's what we call selecting them.

82
00:03:47.650 --> 00:03:50.700
You need to be able to access the specific element

83
00:03:50.700 --> 00:03:52.610
on the page, whether that's an H2 tag

84
00:03:52.610 --> 00:03:56.270
or a div or a button or an image, and then once we have it,

85
00:03:56.270 --> 00:03:58.530
we can go ahead and do things like listening for clicks,

86
00:03:58.530 --> 00:04:01.500
we can change the content, we can add content to it,

87
00:04:01.500 --> 00:04:02.750
we can remove it from the page,

88
00:04:02.750 --> 00:04:04.493
we can do anything we want with it.

89
00:04:04.493 --> 00:04:07.610
Now, there's sort of two ways to work with

90
00:04:08.573 --> 00:04:10.570
selecting elements, or two main ways,

91
00:04:10.570 --> 00:04:13.030
and these are the only two that I use,

92
00:04:13.030 --> 00:04:16.100
and that's query selector and query selector all.

93
00:04:16.100 --> 00:04:18.930
And generally, you're using them on the document dot,

94
00:04:18.930 --> 00:04:20.360
although that's not always the case.

95
00:04:20.360 --> 00:04:21.930
I'll show you why in just a second.

96
00:04:21.930 --> 00:04:24.280
So we've done this one right here.

97
00:04:24.280 --> 00:04:26.900
We've selected something with that p.

98
00:04:26.900 --> 00:04:28.960
In here, query selector and query selector all

99
00:04:28.960 --> 00:04:32.910
will take one argument and that is the CSS selector.

100
00:04:32.910 --> 00:04:36.010
This is almost exactly the same selector.

101
00:04:36.010 --> 00:04:39.070
So, pretty much everything you know and love from CSS

102
00:04:39.070 --> 00:04:42.280
will be moved over to JavaScript selector.

103
00:04:42.280 --> 00:04:44.520
So how would I select anything on the page?

104
00:04:44.520 --> 00:04:46.410
Well it depends on what you're looking for,

105
00:04:46.410 --> 00:04:50.080
but you just pass it to your query selector.

106
00:04:50.080 --> 00:04:51.610
So I open up my dev tools here.

107
00:04:51.610 --> 00:04:53.860
You'll see that I grab a paragraph tag

108
00:04:53.860 --> 00:04:56.890
and I console log at you see that we have the item there.

109
00:04:56.890 --> 00:05:01.860
Now query selector all will give you a multiple elements,

110
00:05:01.860 --> 00:05:03.791
where query selector will only ever

111
00:05:03.791 --> 00:05:06.380
give you the first matching element.

112
00:05:06.380 --> 00:05:09.080
So if I make another one, called divs,

113
00:05:09.080 --> 00:05:11.023
and let's console log the divs,

114
00:05:12.630 --> 00:05:14.600
you'll see that we get this thing here.

115
00:05:14.600 --> 00:05:16.010
This is called a node list.

116
00:05:16.010 --> 00:05:18.040
And we're gonna be learning about arrays.

117
00:05:18.040 --> 00:05:21.800
It looks a lot like an array, and you'll probably

118
00:05:21.800 --> 00:05:23.660
even hear me slip up through this course

119
00:05:23.660 --> 00:05:26.182
and say it's an array of elements.

120
00:05:26.182 --> 00:05:29.230
Although this is kinda like an interview question

121
00:05:29.230 --> 00:05:32.470
that you might hear, is a node list is not an array.

122
00:05:32.470 --> 00:05:36.410
It is a list of things, but there are a couple differences.

123
00:05:36.410 --> 00:05:38.200
And we'll go through those throughout this course

124
00:05:38.200 --> 00:05:40.200
and show what the differences are.

125
00:05:40.200 --> 00:05:42.590
The short and skinny of it is it doesn't have

126
00:05:42.590 --> 00:05:46.180
all the method, like map, filter, reduce built into it.

127
00:05:46.180 --> 00:05:47.780
So we've got this node list here.

128
00:05:47.780 --> 00:05:50.040
It brings us back three items

129
00:05:50.040 --> 00:05:53.330
and if we open that up, and hover over top of it,

130
00:05:53.330 --> 00:05:55.770
you'll see that it is grabbing everything that matches

131
00:05:55.770 --> 00:05:58.148
the selector, so div with the class of items,

132
00:05:58.148 --> 00:06:00.020
and then these other divs.

133
00:06:00.020 --> 00:06:02.450
So you can obviously get a little bit more specific

134
00:06:02.450 --> 00:06:04.850
with that, so you can say like give me anything

135
00:06:04.850 --> 00:06:08.660
with the class of item and then you get two things.

136
00:06:08.660 --> 00:06:10.940
You could say give me a div with a class of item

137
00:06:10.940 --> 00:06:12.590
and that will give you the exact same thing.

138
00:06:12.590 --> 00:06:17.142
But I don't know, maybe if you had an article

139
00:06:17.142 --> 00:06:22.142
with a class of item in there, h2 Im an article,

140
00:06:24.360 --> 00:06:26.660
now when we refresh, you still see two things.

141
00:06:26.660 --> 00:06:28.140
I take that div off, right?

142
00:06:28.140 --> 00:06:30.530
I'm not gonna re-teach you how to use css selectors.

143
00:06:30.530 --> 00:06:33.640
You probably know about how to use all of those things.

144
00:06:33.640 --> 00:06:36.480
You can do parent child selectors.

145
00:06:36.480 --> 00:06:40.393
So let's say I wanted to grab images

146
00:06:41.660 --> 00:06:45.910
that were only inside of an item.

147
00:06:45.910 --> 00:06:48.087
So here we can say item space img.

148
00:06:49.510 --> 00:06:53.920
And we'll change that to image, images.

149
00:06:53.920 --> 00:06:55.986
And we'll rename this variable here.

150
00:06:55.986 --> 00:06:57.130
You'll see we got a node list again.

151
00:06:57.130 --> 00:06:59.260
It's just one actual item.

152
00:06:59.260 --> 00:07:01.080
Now this is a little bit different.

153
00:07:01.080 --> 00:07:02.810
Obviously we only have one image here,

154
00:07:02.810 --> 00:07:04.174
but let me duplicate this.

155
00:07:04.174 --> 00:07:07.440
And put it into another div here.

156
00:07:07.440 --> 00:07:09.847
So each item has an image in it.

157
00:07:09.847 --> 00:07:12.170
And when you refresh, you see there's two.

158
00:07:12.170 --> 00:07:13.970
Nice looking flowers.

159
00:07:13.970 --> 00:07:15.720
Nice looking sky.

160
00:07:15.720 --> 00:07:17.140
Great moss.

161
00:07:17.140 --> 00:07:17.973
Seen it all.

162
00:07:17.973 --> 00:07:22.152
This is a great photo place holder.

163
00:07:22.152 --> 00:07:24.960
So now if you take a look at it,

164
00:07:24.960 --> 00:07:29.960
you'll see that I only have, or I have both items

165
00:07:30.470 --> 00:07:31.610
that are on the page.

166
00:07:31.610 --> 00:07:33.120
Now this is a little bit different because

167
00:07:33.120 --> 00:07:36.570
if you wanted to select maybe just the first item

168
00:07:36.570 --> 00:07:38.100
and then find the image inside

169
00:07:38.100 --> 00:07:40.080
of that, you have two options.

170
00:07:40.080 --> 00:07:42.280
First, you could just says query selector

171
00:07:43.460 --> 00:07:46.420
and that is going to return the first match.

172
00:07:46.420 --> 00:07:48.790
So it never will find the second one.

173
00:07:48.790 --> 00:07:50.580
Or what you can do is maybe your

174
00:07:50.580 --> 00:07:53.846
second one has a class of item two.

175
00:07:53.846 --> 00:07:57.840
You could first grab the item two.

176
00:07:57.840 --> 00:08:01.460
So const item two is equal to use this one,

177
00:08:01.460 --> 00:08:05.473
document query selector, we'll say dot item two.

178
00:08:06.590 --> 00:08:08.983
And let's see what we got in item two.

179
00:08:10.710 --> 00:08:11.970
So there's our item two.

180
00:08:11.970 --> 00:08:13.880
And then if you wanna look inside

181
00:08:13.880 --> 00:08:16.630
of an element that you already have,

182
00:08:16.630 --> 00:08:18.720
and you wanna search inside for that one,

183
00:08:18.720 --> 00:08:22.240
you can use query selector on any other element.

184
00:08:22.240 --> 00:08:26.950
So then I could say const item to image

185
00:08:26.950 --> 00:08:29.980
is equal to item two dot query selector

186
00:08:31.240 --> 00:08:35.563
and then we can look for an image inside of that.

187
00:08:36.950 --> 00:08:37.783
Beautiful.

188
00:08:37.783 --> 00:08:41.260
So if you ever need to narrow down your focus,

189
00:08:41.260 --> 00:08:45.000
as to where you are searching, you can obviously do that

190
00:08:45.000 --> 00:08:48.890
in your selector, but if it ever is the,

191
00:08:48.890 --> 00:08:51.220
like sometimes I just have a variable that references

192
00:08:51.220 --> 00:08:52.650
like a rapper or something.

193
00:08:52.650 --> 00:08:55.250
Okay, I say this is the rapper or this is the item

194
00:08:55.250 --> 00:08:57.010
that I'm currently working with, I need

195
00:08:57.010 --> 00:09:01.370
to search inside that thing for another selector.

196
00:09:01.370 --> 00:09:03.208
And if that's the case, you just basically take

197
00:09:03.208 --> 00:09:06.090
that element that you have and you can

198
00:09:06.090 --> 00:09:09.320
run dot query selector and dot query selector all

199
00:09:09.320 --> 00:09:12.070
off of that item and only search

200
00:09:12.070 --> 00:09:13.440
and sort of limit the scope

201
00:09:13.440 --> 00:09:15.980
of your searching from inside of that thing.

202
00:09:15.980 --> 00:09:19.420
So document.querySelector will search the entire page,

203
00:09:19.420 --> 00:09:20.563
the entire document.

204
00:09:21.484 --> 00:09:24.970
And then query selector as a method of another element

205
00:09:24.970 --> 00:09:27.490
will only search inside of that element.

206
00:09:27.490 --> 00:09:30.885
So query selector and query selector all

207
00:09:30.885 --> 00:09:33.720
they get all the work done for me,

208
00:09:33.720 --> 00:09:37.390
however there are additional ways to select elements

209
00:09:37.390 --> 00:09:41.480
on the page and these are all dated back

210
00:09:41.480 --> 00:09:44.480
before we had query selector

211
00:09:44.480 --> 00:09:46.130
and before we had query selector all.

212
00:09:46.130 --> 00:09:48.580
So it used to be much harder to do this,

213
00:09:48.580 --> 00:09:50.270
selecting elements on the page.

214
00:09:50.270 --> 00:09:53.770
And what we used is document dot

215
00:09:53.770 --> 00:09:56.870
and you can see them all here, document.getElement.

216
00:09:58.000 --> 00:09:59.770
And you can see them, get element by ID,

217
00:09:59.770 --> 00:10:03.120
get elements by class name, get elements by name,

218
00:10:03.120 --> 00:10:06.900
get elements by tag name, and elements by tag name NS.

219
00:10:06.900 --> 00:10:10.453
I think that last one is for xml only.

220
00:10:11.370 --> 00:10:12.403
Let's look it up.

221
00:10:15.380 --> 00:10:16.840
What is that NS for?

222
00:10:16.840 --> 00:10:18.033
Name space?

223
00:10:21.330 --> 00:10:24.290
Returns a live html collection of elements

224
00:10:24.290 --> 00:10:28.090
that are given the tag name belonging to the name space.

225
00:10:28.090 --> 00:10:29.513
Let's see an example.

226
00:10:33.110 --> 00:10:33.943
Oh yeah, see?

227
00:10:33.943 --> 00:10:37.734
This is, this is older stuff.

228
00:10:37.734 --> 00:10:39.090
I've never used that one.

229
00:10:39.090 --> 00:10:41.900
You probably don't wanna use that one either.

230
00:10:41.900 --> 00:10:44.760
But if you do have something with an ID on it,

231
00:10:44.760 --> 00:10:49.643
like let's say this h2 has an id of wes,

232
00:10:51.330 --> 00:10:54.023
then we can say document.getElementById,

233
00:10:55.770 --> 00:10:58.700
and you pass your ID that you want, wes.

234
00:10:58.700 --> 00:11:00.470
You notice how I didn't put the pound on there.

235
00:11:00.470 --> 00:11:02.070
That's a pretty common mistake people do

236
00:11:02.070 --> 00:11:06.230
is if you're using anything that's not query selector,

237
00:11:06.230 --> 00:11:09.060
you don't have to pass dot or pound or something like that.

238
00:11:09.060 --> 00:11:12.340
And then that will return to you the actual element

239
00:11:12.340 --> 00:11:15.060
that is in there, same with get elements by class name.

240
00:11:15.060 --> 00:11:17.160
Honestly, you just need to know that they're there,

241
00:11:17.160 --> 00:11:20.450
because you might run into them at one point in your career,

242
00:11:20.450 --> 00:11:22.320
but not worth learning.

243
00:11:22.320 --> 00:11:24.350
Not worth using, because query selector

244
00:11:24.350 --> 00:11:27.520
and query selector all are much more flexible

245
00:11:27.520 --> 00:11:30.080
and I get all my work done with them.

