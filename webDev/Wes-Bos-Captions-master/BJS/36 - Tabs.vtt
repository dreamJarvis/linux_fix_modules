WEBVTT

1
00:00:00.508 --> 00:00:03.091
(upbeat music)

2
00:00:05.481 --> 00:00:08.410
<v Narrator>All right folks, now we are gonna build tabs.</v>

3
00:00:08.410 --> 00:00:11.170
Tabs are pretty simple, you click on the tab that you want,

4
00:00:11.170 --> 00:00:14.380
and it shows the content that is associated with it.

5
00:00:14.380 --> 00:00:16.120
This is a great example, because it's going

6
00:00:16.120 --> 00:00:19.110
to get us into hiding and showing things,

7
00:00:19.110 --> 00:00:21.760
it's going to get us into event listeners,

8
00:00:21.760 --> 00:00:23.160
we're gonna do a little bit of looping

9
00:00:23.160 --> 00:00:25.850
before we've even learned it, and most importantly

10
00:00:25.850 --> 00:00:28.280
we're also going to learn how to make this accessible.

11
00:00:28.280 --> 00:00:33.040
So you see, if I use my keyboard, I can tab over to each

12
00:00:33.040 --> 00:00:35.120
of these tabs without having to use my mouse.

13
00:00:35.120 --> 00:00:38.610
So, where do you start? For awesome tabs, you start

14
00:00:38.610 --> 00:00:41.310
with some awsome HTML. Let's go over

15
00:00:41.310 --> 00:00:43.853
what we're starting with right here real quick,

16
00:00:43.853 --> 00:00:46.940
we've got our div class of tabs, that's just a div

17
00:00:46.940 --> 00:00:50.570
that wraps the entire thing, and then we've got

18
00:00:50.570 --> 00:00:53.480
the tab list here, now you're going to notice a lot

19
00:00:53.480 --> 00:00:57.940
of these role and aria labels here, and this is important

20
00:00:57.940 --> 00:01:01.010
because this is how you make your tabs accessible

21
00:01:01.010 --> 00:01:04.360
to everyone, as well as this is how you make sure

22
00:01:04.360 --> 00:01:08.993
that your content is easily read by search engines,

23
00:01:10.770 --> 00:01:13.830
because if you've got content hidden behind a search engine

24
00:01:13.830 --> 00:01:16.910
about PHB, how's google gonna know how to get to that?

25
00:01:16.910 --> 00:01:20.960
Well, if you use a proper markup, then it's good for both

26
00:01:20.960 --> 00:01:22.570
accessibility as well as SCO.

27
00:01:22.570 --> 00:01:25.680
So we've got this tab list here, we tell the browser

28
00:01:25.680 --> 00:01:28.610
that it is a tab list by saying it has the role

29
00:01:28.610 --> 00:01:31.290
of a tab list, and then we give it a label,

30
00:01:31.290 --> 00:01:33.630
which is programming languages.

31
00:01:33.630 --> 00:01:35.770
That's just for screen readers to know

32
00:01:35.770 --> 00:01:37.400
what is this list about.

33
00:01:37.400 --> 00:01:39.790
And then inside of each of those,

34
00:01:39.790 --> 00:01:42.540
they just have three buttons, and each of those buttons

35
00:01:42.540 --> 00:01:47.540
has a role of tab and id of what programming language

36
00:01:48.610 --> 00:01:51.810
it's associated with, and then finally this aria selected

37
00:01:51.810 --> 00:01:54.770
attribute here, and that's how we are going

38
00:01:54.770 --> 00:01:59.390
to maintain whether that tab is currently active.

39
00:01:59.390 --> 00:02:00.730
You see, the first one is set to true,

40
00:02:00.730 --> 00:02:02.040
and the others are set to false.

41
00:02:02.040 --> 00:02:06.770
Now, if we take a look at our tabs dot css here,

42
00:02:06.770 --> 00:02:10.500
you'll see that whenever a button has an attribute

43
00:02:10.500 --> 00:02:14.210
of aria selected, then go ahead and change the background

44
00:02:14.210 --> 00:02:16.620
to yellow, take off the box shadow,

45
00:02:16.620 --> 00:02:18.803
change the color of the text.

46
00:02:19.690 --> 00:02:23.650
Now, totally separate from that, so what's cool about this

47
00:02:23.650 --> 00:02:27.500
is that we're not actually worried about where to put

48
00:02:27.500 --> 00:02:29.880
the tabs and the buttons, because as long as they

49
00:02:29.880 --> 00:02:34.057
are sort of clicked together by the id

50
00:02:34.057 --> 00:02:37.380
and the aria labeled by of the actual tab panel,

51
00:02:37.380 --> 00:02:38.810
then those things are connected.

52
00:02:38.810 --> 00:02:40.914
So, I'll go down here and now I've got

53
00:02:40.914 --> 00:02:43.640
all of our different tabs, each of these

54
00:02:43.640 --> 00:02:47.140
are called a tab panel, and then we can associate

55
00:02:47.140 --> 00:02:49.960
that tab panel with a specific button

56
00:02:49.960 --> 00:02:51.780
by giving it an aria labeled by.

57
00:02:51.780 --> 00:02:53.710
So again, this is just descriptions,

58
00:02:53.710 --> 00:02:56.200
this is not giving us any sort of functionality

59
00:02:56.200 --> 00:02:58.880
in the browser, this is just a good way to describe

60
00:02:58.880 --> 00:03:02.270
markup in the browser. So here we go,

61
00:03:02.270 --> 00:03:05.657
and then we apply an attribute of hidden,

62
00:03:05.657 --> 00:03:07.890
this little hidden attribute is great,

63
00:03:07.890 --> 00:03:11.170
because you don't have to write any like class

64
00:03:11.170 --> 00:03:14.080
that will hide it, you simply just pop on or off

65
00:03:14.080 --> 00:03:16.390
the hidden attribute, and it will show and hide,

66
00:03:16.390 --> 00:03:18.130
like watch if I take this off,

67
00:03:18.130 --> 00:03:20.540
we'll see that we now have two tab panels.

68
00:03:20.540 --> 00:03:24.760
So our default state is to show the first tab as selected,

69
00:03:24.760 --> 00:03:28.290
and show the first tab panel as shown.

70
00:03:28.290 --> 00:03:30.190
That's it! Let's write some code here.

71
00:03:30.190 --> 00:03:32.930
So go out into our tabs here, and we're going

72
00:03:32.930 --> 00:03:37.930
to need the tabs div itself, and then we will also

73
00:03:39.420 --> 00:03:42.180
need our buttons and our panels,

74
00:03:42.180 --> 00:03:47.180
so const, tabs is equal to document dot query selector,

75
00:03:48.460 --> 00:03:52.343
grab the tabs, and then we'll grab the buttons,

76
00:03:54.190 --> 00:03:56.140
and here I'm not going to say document,

77
00:03:56.140 --> 00:03:58.990
I'm going to say tabs dot query selector, and we're going

78
00:03:58.990 --> 00:04:02.920
to look inside of that for anything that has a role

79
00:04:02.920 --> 00:04:07.760
of tab on it, and the reason why I look inside of tabs

80
00:04:07.760 --> 00:04:09.450
is because it's likely that you're going

81
00:04:09.450 --> 00:04:13.000
to have multiple tabs on the same page, and being able

82
00:04:13.000 --> 00:04:15.500
to write your Javascript in such a way that this can

83
00:04:15.500 --> 00:04:20.320
be reused for any number of tabs, this is gonna set us up

84
00:04:20.320 --> 00:04:22.681
for doing that, so that's good.

85
00:04:22.681 --> 00:04:27.110
Then we need the tab panels, and that is going

86
00:04:27.110 --> 00:04:32.110
to be queryselectorAll, both of them are queryselectorAll,

87
00:04:34.190 --> 00:04:35.860
and then we're gonna look for one

88
00:04:35.860 --> 00:04:38.023
that has a role of tab panel.

89
00:04:41.120 --> 00:04:43.700
Now what we'll do is we'll take our tab buttons,

90
00:04:43.700 --> 00:04:48.700
and we'll listen for each one, so we'll say .forEach button,

91
00:04:49.180 --> 00:04:52.240
we'll say button .addEventListener, we're going to listen

92
00:04:52.240 --> 00:04:55.490
for a click, and remember that because they are buttons,

93
00:04:55.490 --> 00:04:58.300
the click event will fire when the user uses the keyboard

94
00:04:58.300 --> 00:05:01.270
as well, so there's no extra keyboard work

95
00:05:01.270 --> 00:05:03.780
that need's to be done here, and we'll make a function

96
00:05:03.780 --> 00:05:08.610
called handleTabClick. up here, make that function

97
00:05:08.610 --> 00:05:12.003
called handleTabClick, get our event,

98
00:05:13.920 --> 00:05:15.903
and let's just console log the event.

99
00:05:17.250 --> 00:05:20.740
What are you yelling at in here? Gotta spell it right!

100
00:05:20.740 --> 00:05:23.080
There we go. Going to our console here,

101
00:05:23.080 --> 00:05:26.000
querySelectorall is not a function,

102
00:05:26.000 --> 00:05:28.950
it sure isn't, here we go, now if I click

103
00:05:28.950 --> 00:05:31.810
on each of the tabs, it gives us our event,

104
00:05:31.810 --> 00:05:35.280
we can go here and here and say event.currentTarget,

105
00:05:36.950 --> 00:05:38.930
like we've always done, and you can see each

106
00:05:38.930 --> 00:05:42.282
of the different buttons. Awesome.

107
00:05:42.282 --> 00:05:46.900
Awesome, Awesome, Awesome. Now, (laughs), now,

108
00:05:46.900 --> 00:05:48.350
we're gonna get a little bit ahead of ourselves

109
00:05:48.350 --> 00:05:51.897
into looping, but that's fine, I think we can handle this.

110
00:05:51.897 --> 00:05:54.380
So, I think its worth learning a bit of this looping

111
00:05:54.380 --> 00:05:56.260
before we dig into the nitty gritty,

112
00:05:56.260 --> 00:06:00.760
so you can sort of see some spots where we would use it

113
00:06:00.760 --> 00:06:03.010
in real life, so couple of things we need to do here,

114
00:06:03.010 --> 00:06:05.300
when somebody clicks on a tab,

115
00:06:05.300 --> 00:06:07.480
first thing we need to do is hide all

116
00:06:07.480 --> 00:06:12.480
of the other tab panels, so hide all tab panels.

117
00:06:13.250 --> 00:06:18.250
Then we need to mark all tabs as unselected,

118
00:06:18.930 --> 00:06:23.090
or what's the word that we use? Let's use a better word.

119
00:06:23.090 --> 00:06:28.090
It is selected. Yeah. Unselected, that's good. Okay.

120
00:06:29.000 --> 00:06:34.000
Then we need to mark this tab as selected,

121
00:06:34.980 --> 00:06:39.640
and this tab or the clicked, lets call it the clicked tab

122
00:06:39.640 --> 00:06:42.400
as selected, and then we also need to find

123
00:06:42.400 --> 00:06:47.363
the associated tab panel and show it.

124
00:06:48.600 --> 00:06:50.820
And, I think that's it! All right,

125
00:06:50.820 --> 00:06:53.699
so let's take this one by one, I like to call this

126
00:06:53.699 --> 00:06:56.020
pseudocode, meaning that like just write down

127
00:06:56.020 --> 00:06:58.700
what you're trying to do, so you can kind of grasp

128
00:06:58.700 --> 00:07:00.140
what are the steps that need to happen

129
00:07:00.140 --> 00:07:02.680
when somebody clicks it, and then we can go one by one

130
00:07:02.680 --> 00:07:05.510
and write the code for us. So, first hide all

131
00:07:05.510 --> 00:07:10.510
of the tab panels, okay, well there's a couple ways

132
00:07:10.660 --> 00:07:12.530
we have all the tab panels right here,

133
00:07:12.530 --> 00:07:17.530
so console log, tab panels. I click on one of these,

134
00:07:18.377 --> 00:07:21.030
you get a nodelist with three of these divs, right,

135
00:07:21.030 --> 00:07:23.400
like how are we hiding these tab panels?

136
00:07:23.400 --> 00:07:26.100
Well, they're getting an attribute of hidden,

137
00:07:26.100 --> 00:07:29.560
so all we can do here is we can loop over each of them

138
00:07:29.560 --> 00:07:32.640
with our dot for each, and for each of those

139
00:07:32.640 --> 00:07:36.597
we will hide it, so we'll say tabPanels dot forEach,

140
00:07:42.910 --> 00:07:46.200
and we'll say each panel, now let's do a regular function

141
00:07:46.200 --> 00:07:48.310
then we'll show you how to make an arrow function.

142
00:07:48.310 --> 00:07:52.530
So each panel, lets just console.log the panel,

143
00:07:52.530 --> 00:07:55.570
so what this will do is it's gonna take our nodelist

144
00:07:55.570 --> 00:07:59.770
of three panels, loop over each one,

145
00:07:59.770 --> 00:08:02.640
and then for each one we'll get a variable called panel,

146
00:08:02.640 --> 00:08:04.860
which is how we reference each of them,

147
00:08:04.860 --> 00:08:06.410
and then we can console log it.

148
00:08:07.425 --> 00:08:10.100
So if I click on one tab, we get three separate

149
00:08:10.100 --> 00:08:13.700
console logs of each of them, right? One, two, three.

150
00:08:13.700 --> 00:08:16.440
One, two, three. Good. So let's get rid of this console log,

151
00:08:16.440 --> 00:08:18.763
let's get rid of that, and simply all we need to do here

152
00:08:18.763 --> 00:08:21.130
is we need to take the panel,

153
00:08:21.130 --> 00:08:26.130
which is going to be our element, and we will say hidden

154
00:08:26.590 --> 00:08:31.590
is equal to true. All right? Does that work? Let's try it.

155
00:08:36.430 --> 00:08:40.760
Boom! So you see as soon as I click on any tab,

156
00:08:40.760 --> 00:08:44.120
all of the panels then turn to hidden.

157
00:08:44.120 --> 00:08:46.100
So there's that one, there's that one, and there's that one.

158
00:08:46.100 --> 00:08:48.600
Right? So that's the first thing. Just hide them all.

159
00:08:48.600 --> 00:08:50.220
And then the next one is to go back,

160
00:08:50.220 --> 00:08:54.370
and unselect one of them, and we could filter for ones

161
00:08:54.370 --> 00:08:56.190
that are not associated with the current one,

162
00:08:56.190 --> 00:08:58.950
and only hide that one, but in my experience

163
00:08:58.950 --> 00:09:00.300
it's much easier to just hide them all,

164
00:09:00.300 --> 00:09:02.730
and then show the one that we want,

165
00:09:02.730 --> 00:09:03.990
I find that's a bit easier. Oh, I was going

166
00:09:03.990 --> 00:09:06.380
to show you how to make this into an arrow function

167
00:09:06.380 --> 00:09:08.850
right here, so we'll take the word function,

168
00:09:08.850 --> 00:09:12.467
remove it, we'll put a little arrow here,

169
00:09:12.467 --> 00:09:16.253
and we'll get rid of the parentheses here,

170
00:09:17.340 --> 00:09:19.620
and we could leave it at that, and give it a save,

171
00:09:19.620 --> 00:09:24.020
and that will totally work, and most people do that,

172
00:09:24.020 --> 00:09:26.573
you can also just make it a one liner here,

173
00:09:29.098 --> 00:09:32.240
but that is with the implicit returning, you see that

174
00:09:32.240 --> 00:09:35.620
it puts parentheses around it, because you shouldn't,

175
00:09:35.620 --> 00:09:37.700
you're not actually returning anything,

176
00:09:37.700 --> 00:09:39.630
you're just running this code here.

177
00:09:39.630 --> 00:09:41.930
So I'll bring it back to the curly brackets,

178
00:09:41.930 --> 00:09:45.420
so don't be a hero and try and make it as short as possible,

179
00:09:45.420 --> 00:09:48.510
be a hero and make your code as readable as possible.

180
00:09:48.510 --> 00:09:51.630
So, I like that. So that doesn't break anything,

181
00:09:51.630 --> 00:09:52.900
no, things are still working.

182
00:09:52.900 --> 00:09:57.010
Now, what we need to do is mark all tabs as unselected,

183
00:09:57.010 --> 00:10:01.533
so we'll take our tabs, and we'll go over for each tab,

184
00:10:02.450 --> 00:10:06.770
and we'll take that tab and we will hide it.

185
00:10:06.770 --> 00:10:11.770
So, we'll say button, so take the tab,

186
00:10:12.000 --> 00:10:15.520
and lets look quickly at our thing here,

187
00:10:15.520 --> 00:10:19.370
we are setting the aria selected attribute.

188
00:10:19.370 --> 00:10:23.470
So, how do you, how do you set something that is,

189
00:10:23.470 --> 00:10:28.170
like can I do this? That aria-selected is equal to false?

190
00:10:28.170 --> 00:10:33.160
Is this gonna work? Invalid left-hand side in assignment.

191
00:10:33.160 --> 00:10:36.410
All right, I guess you can't put dash in,

192
00:10:36.410 --> 00:10:41.410
so how do you access a property when the property itself

193
00:10:41.900 --> 00:10:45.040
has a dash in it? Well, let's go ahead and select one

194
00:10:45.040 --> 00:10:47.950
of these buttons here, and just reference it

195
00:10:47.950 --> 00:10:52.120
with our dollar zero trick, and if we type in dash

196
00:10:52.120 --> 00:10:57.120
ariaSelected, oh, you see what happened there is

197
00:10:57.620 --> 00:11:02.620
that the aria selected property is turned from a dash

198
00:11:04.380 --> 00:11:09.380
into camel K. So, any time that you see a dash attribute

199
00:11:09.750 --> 00:11:13.410
on an HDML element, you can almost always access that

200
00:11:13.410 --> 00:11:17.400
with the camel K version of that.

201
00:11:17.400 --> 00:11:18.870
So lets go here, we'll change

202
00:11:18.870 --> 00:11:21.220
that to aria selected equals false,

203
00:11:21.220 --> 00:11:24.450
and now I want to click on one of them, boom!

204
00:11:24.450 --> 00:11:29.450
Oh. forEach is not a function. tabs that forEach.

205
00:11:32.332 --> 00:11:35.999
Why not? Oh, it's not tabs, it's tabButtons.

206
00:11:38.890 --> 00:11:42.610
That didn't work. Mark all tabs as unselected.

207
00:11:42.610 --> 00:11:47.610
So if I go to this button here, and I grab the ariaSelected,

208
00:11:49.858 --> 00:11:53.153
it says false, but it's not updating.

209
00:11:54.350 --> 00:11:58.590
Oh, this is a little, a little problem that we have here,

210
00:11:58.590 --> 00:12:02.450
this button had the ariaSelected property as false,

211
00:12:02.450 --> 00:12:04.400
but if I look at the button here,

212
00:12:04.400 --> 00:12:07.410
it says ariaSelected equals true. They never updated.

213
00:12:07.410 --> 00:12:11.603
So what happened here is that the ariaSelected property,

214
00:12:12.680 --> 00:12:14.610
and for most properties in Javascript,

215
00:12:14.610 --> 00:12:17.550
you can just access the property on the element directly,

216
00:12:17.550 --> 00:12:20.420
however, for some properties, that is included

217
00:12:20.420 --> 00:12:22.690
in custom properties that you just made up,

218
00:12:22.690 --> 00:12:27.690
as well as aria properties. It looks like you can't use

219
00:12:27.710 --> 00:12:30.030
this method, and the only other way

220
00:12:30.030 --> 00:12:32.700
is to use the dot set attribute method,

221
00:12:32.700 --> 00:12:35.360
and I was just pulling up the docs here,

222
00:12:35.360 --> 00:12:38.940
it says set attribute, note for cross browser compatibility,

223
00:12:38.940 --> 00:12:41.540
always use the warrior attribute selected

224
00:12:41.540 --> 00:12:43.800
to access aria properties, so set attribute

225
00:12:43.800 --> 00:12:47.046
and get attribute. Method on the element instead

226
00:12:47.046 --> 00:12:50.790
of the properties. So again, in most cases,

227
00:12:50.790 --> 00:12:55.790
if it's like an alt or source, or a title,

228
00:12:55.810 --> 00:12:59.260
those things can be done via properties on the element,

229
00:12:59.260 --> 00:13:01.930
but for aria attributes, we must use

230
00:13:01.930 --> 00:13:06.930
the set attributes method. So say tab dot set attribute,

231
00:13:07.400 --> 00:13:11.810
aria selected, and we'll set that to false.

232
00:13:11.810 --> 00:13:15.930
So that's a good little learning lesson there,

233
00:13:15.930 --> 00:13:19.150
but now, there we go, you see that now when I click it,

234
00:13:19.150 --> 00:13:22.720
it will actually remove the, see, this is true,

235
00:13:22.720 --> 00:13:26.207
watch, ready ready ready ready, boom. It turns to false

236
00:13:26.207 --> 00:13:28.482
when we click it. Okay, good. So we did that,

237
00:13:28.482 --> 00:13:31.575
we hid all the tab panels, we marked

238
00:13:31.575 --> 00:13:34.320
all the tabs as unselected, now we need to mark

239
00:13:34.320 --> 00:13:37.720
the clicked tab as selected. That's going to be easy,

240
00:13:37.720 --> 00:13:42.720
so we'll just say event dot current target dot set attribute

241
00:13:47.560 --> 00:13:51.663
aria selected is equal to true.

242
00:13:55.470 --> 00:13:57.470
Ah-ha, you see? Now when I click one,

243
00:13:57.470 --> 00:14:01.830
it will simply set and remove the artist slightly.

244
00:14:01.830 --> 00:14:04.090
You notice we're not using any classes here,

245
00:14:04.090 --> 00:14:06.070
and the reason behind that is because

246
00:14:06.070 --> 00:14:09.670
if you can reach for an accessibility attribute

247
00:14:09.670 --> 00:14:12.070
over a class, then do that, because then you don't

248
00:14:12.070 --> 00:14:15.800
have to double time and maintain classes as well as aria.

249
00:14:15.800 --> 00:14:19.100
Just use aria, select your elements with aria,

250
00:14:19.100 --> 00:14:22.323
style your elements with aria, and you're in good shape.

251
00:14:23.380 --> 00:14:26.320
What else do we have here? Find the associated tab panel

252
00:14:26.320 --> 00:14:29.193
and show it. Okay, so now here's the thing,

253
00:14:30.064 --> 00:14:32.000
here's the scoop that we need to do.

254
00:14:32.000 --> 00:14:36.530
If somebody clicks on a button with an id of Javascript,

255
00:14:36.530 --> 00:14:40.622
we need to find the div that has, we need to find

256
00:14:40.622 --> 00:14:45.150
the associated tab panel that has an aria labelledby

257
00:14:45.150 --> 00:14:48.160
that matches it. Right, okay.

258
00:14:48.160 --> 00:14:50.960
So, we could do this a couple of ways.

259
00:14:50.960 --> 00:14:55.960
First, lets grab that id. So console log, const id

260
00:14:56.310 --> 00:15:01.310
is equal to event dot current target dot id.

261
00:15:01.850 --> 00:15:05.050
You see what happened there is that my,

262
00:15:05.050 --> 00:15:08.540
instead of making a variable that is set to

263
00:15:08.540 --> 00:15:12.260
the same property on something, when I give it a save

264
00:15:12.260 --> 00:15:16.670
it will use the structuring to create an id variable

265
00:15:16.670 --> 00:15:19.020
from that thing. And that's handy if you ever want

266
00:15:19.020 --> 00:15:23.140
to pull other properties off of maybe an alt, or a source,

267
00:15:23.140 --> 00:15:24.900
or something like that. So that's why that

268
00:15:24.900 --> 00:15:28.173
gets changed there, and let's just console log the id,

269
00:15:30.550 --> 00:15:34.590
got ruby, got JS, got PHP. Looking good!

270
00:15:34.590 --> 00:15:39.590
Okay, so now we need to find the associated tab panel,

271
00:15:41.113 --> 00:15:42.960
there's a couple ways that we could do this.

272
00:15:42.960 --> 00:15:45.770
We could simply just use that id in a selector,

273
00:15:45.770 --> 00:15:49.740
so const tab panel is equal to document,

274
00:15:49.740 --> 00:15:52.933
or maybe we'll grab tabs, query selector,

275
00:15:55.210 --> 00:15:56.127
and we'll use back text here,

276
00:15:56.127 --> 00:16:00.393
and we'll say anything with an id of id,

277
00:16:01.690 --> 00:16:06.690
and then we'll say tab panel dot hidden is equal to false.

278
00:16:09.290 --> 00:16:11.423
So this is just sort of a dynamics selector,

279
00:16:11.423 --> 00:16:16.423
it will select on time, and that didn't work. Why?

280
00:16:18.490 --> 00:16:23.330
Well, lets go ahead and console log the tab panel,

281
00:16:23.330 --> 00:16:28.030
we got the tab panel, oh no! We don't want anything

282
00:16:28.030 --> 00:16:33.030
with an id of, we want something with the aria labeledby,

283
00:16:35.150 --> 00:16:40.150
is that what it is? Aria labeledby is equal to that id,

284
00:16:43.530 --> 00:16:44.903
close square bracket.

285
00:16:50.090 --> 00:16:53.380
Now we're not finding this tab panel is equal to null,

286
00:16:53.380 --> 00:16:56.083
okay, now why is that? Well, lets just go in here.

287
00:17:11.080 --> 00:17:15.770
Oh my gosh, did I spell it wrong? Oh my gosh. All right.

288
00:17:17.460 --> 00:17:20.890
That's embarrassing. So, I'm a good programmer,

289
00:17:20.890 --> 00:17:23.550
just not a good speller, apparently. There we go,

290
00:17:23.550 --> 00:17:28.350
and then we just take the hidden to false. Boom, boom, boom.

291
00:17:28.350 --> 00:17:33.350
Okay, so now we can change that ruby out to be a variable,

292
00:17:33.760 --> 00:17:38.760
which is the id, and now we see that the tabs are working.

293
00:17:39.810 --> 00:17:43.093
So, that's one way to do it, another way,

294
00:17:44.010 --> 00:17:47.490
let's comment this out, so say method one.

295
00:17:54.160 --> 00:17:57.410
So our second way is to use find, so basically we

296
00:17:57.410 --> 00:18:00.710
can take these tab panels, and we can just loop over it

297
00:18:00.710 --> 00:18:04.190
until we find the one that we want. That's pretty good,

298
00:18:04.190 --> 00:18:06.980
because you can take a list of something,

299
00:18:06.980 --> 00:18:10.120
and then look inside of it for whatever it is that you want,

300
00:18:10.120 --> 00:18:12.730
and it will return you the actual item.

301
00:18:12.730 --> 00:18:17.730
So it will say method two, find in the array of tab panels.

302
00:18:22.520 --> 00:18:24.590
So we'll take tab panels, and we'll call

303
00:18:24.590 --> 00:18:28.100
the dot find method on it, and what's going to happen.

304
00:18:28.100 --> 00:18:30.450
We're going to get an error, it says cannot read property

305
00:18:30.450 --> 00:18:35.437
find. There we go, tab panels dot find is not a function.

306
00:18:38.320 --> 00:18:41.240
Okay, so it's not a function. Why not?

307
00:18:41.240 --> 00:18:44.980
And that's because a find method is actually only

308
00:18:44.980 --> 00:18:49.900
a method on arrays, and if we were to console log

309
00:18:49.900 --> 00:18:54.350
these tab panels, you'll see it's not actually an array,

310
00:18:54.350 --> 00:18:56.180
it's something called a nodelist,

311
00:18:56.180 --> 00:18:59.190
that does not have all of the methods

312
00:18:59.190 --> 00:19:01.840
that an array would have. So, no problem there,

313
00:19:01.840 --> 00:19:04.820
what we can do is you can actually turn this tab panels

314
00:19:04.820 --> 00:19:08.010
from a nodelist into an array by simply just wrapping it

315
00:19:08.010 --> 00:19:13.010
in capital A array dot from, and that will turn it

316
00:19:13.640 --> 00:19:15.980
into a true array. Again, we'll go a little more

317
00:19:15.980 --> 00:19:17.810
into that in once we hit arrays,

318
00:19:17.810 --> 00:19:20.740
but now, watch this, it will run the find,

319
00:19:20.740 --> 00:19:22.530
it gives us this error because we haven't passed it

320
00:19:22.530 --> 00:19:25.380
a callback function just yet, it will work.

321
00:19:25.380 --> 00:19:27.240
So what we can do with the find is

322
00:19:27.240 --> 00:19:30.860
we can take each panel, and we can say

323
00:19:33.220 --> 00:19:38.220
if the panel dot get attribute aria labeledby

324
00:19:45.630 --> 00:19:50.630
is equal to the id, we don't have that id variable

325
00:19:52.255 --> 00:19:56.740
any more, oh yeah we do, we got the variable right here,

326
00:19:56.740 --> 00:20:00.010
so if the aria labeledby is equal to the id,

327
00:20:00.010 --> 00:20:03.823
then return true. Otherwise, we will return,

328
00:20:05.480 --> 00:20:07.610
ah lets leave it like this. You'll see I've got

329
00:20:07.610 --> 00:20:09.870
a little squiggle there because it's upset about something,

330
00:20:09.870 --> 00:20:11.370
but we'll learn about why that is.

331
00:20:11.370 --> 00:20:15.495
It wants me to return false or use an implicit return here,

332
00:20:15.495 --> 00:20:19.240
and what we can actually do is if we instead of just saying

333
00:20:19.240 --> 00:20:21.630
if the panel get attribute is equal to id,

334
00:20:21.630 --> 00:20:23.300
we can actually just return that,

335
00:20:23.300 --> 00:20:26.190
this is going to be true, so then we don't have

336
00:20:26.190 --> 00:20:29.160
to return true, we can simply just return the value

337
00:20:29.160 --> 00:20:31.210
of this, which will either be true or false,

338
00:20:31.210 --> 00:20:36.210
so we can get rid of that, get rid of that,

339
00:20:36.900 --> 00:20:39.180
get rid of these curly brackets,

340
00:20:39.180 --> 00:20:42.730
and simply just return that. Now, this is a little bit more

341
00:20:42.730 --> 00:20:45.600
of an advanced way, but we do use this quite a bit,

342
00:20:45.600 --> 00:20:48.180
so we are going to find the panel where

343
00:20:48.180 --> 00:20:50.570
the panel's labeledby is equal to the id,

344
00:20:50.570 --> 00:20:54.370
and then we can store the result of that,

345
00:20:54.370 --> 00:20:59.370
we'll call it tab panel, in a variable,

346
00:20:59.390 --> 00:21:04.170
and then we'll console log the tab panel ourselves.

347
00:21:04.170 --> 00:21:06.020
Now when I click on it, you'll see we get

348
00:21:06.020 --> 00:21:08.900
the associated ruby, PHP tab panel,

349
00:21:08.900 --> 00:21:11.210
the Javascript tab panel, and we can simply say

350
00:21:11.210 --> 00:21:16.210
tab panel dot hidden is equal to false.

351
00:21:16.590 --> 00:21:18.960
So, two different ways to go about it,

352
00:21:18.960 --> 00:21:23.960
I prefer this find method because we already have

353
00:21:24.020 --> 00:21:26.510
the tab panel, there's no need to go ahead

354
00:21:26.510 --> 00:21:30.290
and find it again, but honestly it doesn't really matter

355
00:21:30.290 --> 00:21:32.010
at the end of the day which one you want,

356
00:21:32.010 --> 00:21:35.080
and now our tabs are working beautifully.

357
00:21:35.080 --> 00:21:38.640
So, woo! That is tab panels, it's surprisingly simple,

358
00:21:38.640 --> 00:21:42.140
maybe twenty-five lines of code, maybe a little bit less

359
00:21:42.140 --> 00:21:44.910
to do tabs, and this is one of those things

360
00:21:44.910 --> 00:21:46.930
that you sort of just keep, you're gonna do tabs

361
00:21:46.930 --> 00:21:49.880
at some point in your career, and you can go back

362
00:21:49.880 --> 00:21:52.180
and grab this little code to use it, and that.

