WEBVTT

1
00:00:00.814 --> 00:00:03.397
(upbeat music)

2
00:00:05.770 --> 00:00:08.310
<v ->All right, this exercise, what I like to call it, Cardio.</v>

3
00:00:08.310 --> 00:00:12.050
Cardio is where I make you just do a whole bunch of stuff

4
00:00:12.050 --> 00:00:14.940
that's all related to each other with the hopes that you

5
00:00:14.940 --> 00:00:16.450
sort of get better at it and that you

6
00:00:16.450 --> 00:00:18.220
sort of put yourself through it.

7
00:00:18.220 --> 00:00:21.390
In my JavaScript 30 course I have a Ray Cardio.

8
00:00:21.390 --> 00:00:23.210
And actually I have two days of Ray Cardio,

9
00:00:23.210 --> 00:00:26.200
and it's just lots and lots of practice to get better at it.

10
00:00:26.200 --> 00:00:28.840
Just at the fundamentals before we start building

11
00:00:28.840 --> 00:00:30.980
real stuff that had interfaces and what not.

12
00:00:30.980 --> 00:00:34.060
So, what I want you to do now is to pause this video

13
00:00:34.060 --> 00:00:37.260
and to do all this yourself

14
00:00:37.260 --> 00:00:38.730
and try to get as far as you can,

15
00:00:38.730 --> 00:00:40.600
there's no sort of right answer,

16
00:00:40.600 --> 00:00:43.490
there's a bunch of different ways that you could solve this.

17
00:00:43.490 --> 00:00:46.570
And then come back and sort of see how I've done it.

18
00:00:46.570 --> 00:00:49.340
I've intentionally not done this myself

19
00:00:49.340 --> 00:00:50.750
so I'm not looking at an answer

20
00:00:50.750 --> 00:00:52.100
or anything like this right here.

21
00:00:52.100 --> 00:00:54.420
Just so you can sort of see my thought process

22
00:00:54.420 --> 00:00:56.680
just to how I approach it.

23
00:00:56.680 --> 00:00:59.210
So we've got DomCardio.html,

24
00:00:59.210 --> 00:01:02.290
there's no HTML in the body at all

25
00:01:02.290 --> 00:01:05.690
and this is just a blank JS file.

26
00:01:05.690 --> 00:01:07.850
So, go get her, come back,

27
00:01:07.850 --> 00:01:09.693
and I'll see you when you're done.

28
00:01:10.700 --> 00:01:11.533
Welcome back!

29
00:01:11.533 --> 00:01:14.060
That was fun, so let's get going in it.

30
00:01:14.060 --> 00:01:14.893
Make a div.

31
00:01:14.893 --> 00:01:17.990
Const div equals document.createElement.

32
00:01:19.030 --> 00:01:20.440
I'm gonna create a div.

33
00:01:20.440 --> 00:01:21.510
Add a class of wrapper to it.

34
00:01:21.510 --> 00:01:26.510
So div.classList.add wrapper, put that in the body.

35
00:01:29.010 --> 00:01:33.333
Document.body.appendChild div.

36
00:01:35.580 --> 00:01:36.413
Lookin' good.

37
00:01:37.540 --> 00:01:38.830
Make another list.

38
00:01:38.830 --> 00:01:40.850
This seems familiar, we've done this.

39
00:01:40.850 --> 00:01:42.750
So, let's do it the other way.

40
00:01:42.750 --> 00:01:47.233
Const ul is equal to ul.

41
00:01:49.530 --> 00:01:52.110
Add three list items with the words one two three.

42
00:01:52.110 --> 00:01:53.830
Put that list into the above wrapper.

43
00:01:53.830 --> 00:01:58.830
Okay, so, we'll take out li one, two, three

44
00:02:00.190 --> 00:02:02.813
and then put that list into the above wrapper.

45
00:02:04.040 --> 00:02:07.810
Now, there's a couple of ways you could approach this.

46
00:02:07.810 --> 00:02:12.810
We could say div.innerHTML is equal to ul

47
00:02:14.440 --> 00:02:15.790
and then console log the div,

48
00:02:15.790 --> 00:02:17.490
let's see what we're working with.

49
00:02:19.452 --> 00:02:20.285
There it is.

50
00:02:20.285 --> 00:02:22.100
Oh, it's good, I like that, that works for us.

51
00:02:22.100 --> 00:02:24.890
We could've also done the fragment thing,

52
00:02:24.890 --> 00:02:27.630
but since there was nothing in this one,

53
00:02:27.630 --> 00:02:31.133
it's easy to just say .innerHTML.

54
00:02:32.080 --> 00:02:33.630
Next one, I'll create an image.

55
00:02:39.970 --> 00:02:42.660
Image, set the source to an image.

56
00:02:42.660 --> 00:02:46.947
So image.source is equal to, what was that?

57
00:02:46.947 --> 00:02:49.340
Picsum, one that we did.

58
00:02:49.340 --> 00:02:51.170
Set the width to 250.

59
00:02:51.170 --> 00:02:55.040
So, we'll leave this at 500 so it'll look good

60
00:02:55.040 --> 00:02:58.690
on hi-res screens, but then we'll set the width of it

61
00:02:58.690 --> 00:03:02.870
to be 500, so image.width, 250.

62
00:03:02.870 --> 00:03:04.090
Add a class of cute.

63
00:03:04.090 --> 00:03:07.230
Image.classList.add cute.

64
00:03:07.230 --> 00:03:08.640
Add an alt of cute puppy.

65
00:03:08.640 --> 00:03:10.817
Image.alt equals cutePuppy.

66
00:03:12.317 --> 00:03:14.450
And then append that image to the wrapper.

67
00:03:14.450 --> 00:03:19.450
So, we'll take our div and we will insert,

68
00:03:20.800 --> 00:03:23.200
I don't know, we can just call appendChild

69
00:03:23.200 --> 00:03:24.033
with the image on it.

70
00:03:24.033 --> 00:03:24.873
We don't need to insert a JSON

71
00:03:24.873 --> 00:03:27.690
because it's just gonna go to the bottom of it.

72
00:03:27.690 --> 00:03:30.430
There we go, unfortunately, not a puppy.

73
00:03:30.430 --> 00:03:33.870
Not a puppy, not a puppy, not a puppy (laughs).

74
00:03:33.870 --> 00:03:35.580
Actually, one kinda cool thing about that,

75
00:03:35.580 --> 00:03:38.780
you see how this is like jumping?

76
00:03:38.780 --> 00:03:43.453
If we were to put a height on that image as well,

77
00:03:44.920 --> 00:03:47.040
you'll see that it's not jumping anymore

78
00:03:47.040 --> 00:03:50.670
and that's because if you give it within a height attribute,

79
00:03:50.670 --> 00:03:52.980
it will sort of maintain its spot

80
00:03:53.860 --> 00:03:56.180
while it loads in the image, which is great.

81
00:03:56.180 --> 00:03:58.300
So, it's kind of a cool thing we could do.

82
00:03:58.300 --> 00:04:00.110
If you know the width and the height of the image

83
00:04:00.110 --> 00:04:01.883
before you are loading it.

84
00:04:02.900 --> 00:04:04.800
With an HTML string, make a div,

85
00:04:04.800 --> 00:04:07.140
with two paragraphs inside of it.

86
00:04:07.140 --> 00:04:09.630
Put this div before the unordered list from above,

87
00:04:09.630 --> 00:04:12.240
add a class to the second paragraph called warning,

88
00:04:12.240 --> 00:04:13.959
remove the first paragraph.

89
00:04:13.959 --> 00:04:15.443
(chuckles) Okay.

90
00:04:17.728 --> 00:04:20.013
Const, what should we call this sucker?

91
00:04:21.242 --> 00:04:23.770
I can't think of what it would be called.

92
00:04:23.770 --> 00:04:28.200
Let's just call it myDiv, I like it.

93
00:04:28.200 --> 00:04:32.283
And we'll use, actually, let's call it myHTML

94
00:04:34.160 --> 00:04:36.760
'cause it's not an actual element yet.

95
00:04:36.760 --> 00:04:38.730
So make a div, done.

96
00:04:38.730 --> 00:04:43.730
With two paragraphs, paragraph one and paragraph two.

97
00:04:45.720 --> 00:04:49.533
Put this div before an unordered list from above.

98
00:04:51.140 --> 00:04:56.140
So, we want to somehow grab that ul,

99
00:04:56.380 --> 00:04:58.230
which we still have reference to it,

100
00:04:58.230 --> 00:04:59.580
let's double check we still do.

101
00:04:59.580 --> 00:05:01.823
So, console log ul.

102
00:05:05.680 --> 00:05:08.030
No, 'cause that, oh, you know what?

103
00:05:08.030 --> 00:05:10.260
That's not the actual unordered list.

104
00:05:10.260 --> 00:05:14.810
That is the HTML and there's no reference

105
00:05:14.810 --> 00:05:18.540
to the element yet, because we just inserted it into the ul.

106
00:05:18.540 --> 00:05:23.280
So what we can do is grab that somehow.

107
00:05:23.280 --> 00:05:27.833
And we'll say const ulElement is equal to,

108
00:05:29.870 --> 00:05:32.300
we have a div and we will look inside of it

109
00:05:32.300 --> 00:05:35.633
for our unordered list and then console log ulElement.

110
00:05:38.260 --> 00:05:39.193
There it is.

111
00:05:40.030 --> 00:05:43.380
And put this div before the unordered list above.

112
00:05:43.380 --> 00:05:44.893
So it's ul.insertAdjacent.

113
00:05:51.640 --> 00:05:56.640
So ulElement.insertAdjacentElement and we wanted to go

114
00:06:00.133 --> 00:06:01.883
beforebegin, I think.

115
00:06:07.450 --> 00:06:09.680
It's kinda confusing, the names of them.

116
00:06:09.680 --> 00:06:14.680
We'll take our ul and then we, oh, we can't.

117
00:06:17.250 --> 00:06:22.250
If we were to take myHTML, watch, it's gonna yell at us.

118
00:06:22.820 --> 00:06:26.100
Failed to execute insertAdjacentElement on Element

119
00:06:26.100 --> 00:06:28.560
parameter two is not a type of element.

120
00:06:28.560 --> 00:06:32.250
So what we've done here is we've created it with a string

121
00:06:32.250 --> 00:06:35.020
so how do we insert it adjacently?

122
00:06:35.020 --> 00:06:36.700
So we could actually use another one,

123
00:06:36.700 --> 00:06:39.530
which is ulElement.insertAdjacentHTML,

124
00:06:41.630 --> 00:06:43.100
I think that will just, we'll be able

125
00:06:43.100 --> 00:06:44.900
to swap it out with that.

126
00:06:44.900 --> 00:06:45.783
Does that work?

127
00:06:47.760 --> 00:06:51.540
Beautiful, it works, so you can just create the div,

128
00:06:51.540 --> 00:06:55.130
insert the HTML in and then it will transform it.

129
00:06:55.130 --> 00:06:59.190
The other way we could've done it is done the create range

130
00:06:59.190 --> 00:07:03.063
and then created a document fragment from that.

131
00:07:04.150 --> 00:07:06.920
Add a class to the second paragraph called warning.

132
00:07:06.920 --> 00:07:11.920
Okay, so now, we need to select that paragraph somehow.

133
00:07:13.405 --> 00:07:15.030
So, let's take a look.

134
00:07:15.030 --> 00:07:18.730
We have a wrapper and then it's the first div that shows up.

135
00:07:18.730 --> 00:07:20.430
It's actually the only div that shows up.

136
00:07:20.430 --> 00:07:24.103
So we could say const myDiv is equal to document,

137
00:07:28.380 --> 00:07:30.180
oh, we can not look document wide,

138
00:07:30.180 --> 00:07:32.833
we'll just take original div.

139
00:07:35.690 --> 00:07:37.330
And we could do a couple of things here.

140
00:07:37.330 --> 00:07:40.170
We could do querySelector for a div

141
00:07:40.170 --> 00:07:43.297
or we could .firstElementChild.

142
00:07:47.550 --> 00:07:49.970
And I think that is, let's do this one.

143
00:07:49.970 --> 00:07:51.400
'Cause you know how querySelector works.

144
00:07:51.400 --> 00:07:56.303
Let's take a look at myDiv, let's console log it.

145
00:08:00.170 --> 00:08:01.030
All right, that's working.

146
00:08:01.030 --> 00:08:02.270
Actually no, I don't like that.

147
00:08:02.270 --> 00:08:04.140
Because then, for some reason you change

148
00:08:04.140 --> 00:08:07.680
the order of your elements, it all automatically breaks.

149
00:08:07.680 --> 00:08:09.740
So I don't like that, I'm taking that back.

150
00:08:09.740 --> 00:08:12.580
I'm gonna do this but I'm gonna go up here

151
00:08:13.690 --> 00:08:15.853
and give it a class of myDiv.

152
00:08:17.250 --> 00:08:21.160
And then here, I'm just going to select myDiv.

153
00:08:21.160 --> 00:08:22.890
So I like that a little bit better.

154
00:08:22.890 --> 00:08:25.120
Put a class on it and then select it.

155
00:08:25.120 --> 00:08:28.000
That's why it's a little bit more resilient.

156
00:08:28.000 --> 00:08:28.920
Do we still have it?

157
00:08:28.920 --> 00:08:31.100
Yeah, good, we still got it.

158
00:08:31.100 --> 00:08:32.500
Remove the first paragraph.

159
00:08:32.500 --> 00:08:35.590
So, myDiv.firstElementChild.remove.

160
00:08:42.410 --> 00:08:43.790
Good, and we forgot this.

161
00:08:43.790 --> 00:08:47.280
Add a class to the second paragraph called warning.

162
00:08:47.280 --> 00:08:50.377
So, myDiv.children, is that it?

163
00:08:58.600 --> 00:09:00.883
Let's see, myDiv.children.

164
00:09:02.440 --> 00:09:06.740
Good, and it's oh, we've already removed it.

165
00:09:06.740 --> 00:09:08.120
We're getting ahead of ourselves here.

166
00:09:08.120 --> 00:09:11.710
So we got both of them, I want the second paragraph,

167
00:09:11.710 --> 00:09:15.270
which is the, so we can reference it with a one,

168
00:09:15.270 --> 00:09:17.010
'cause zero would be the first one,

169
00:09:17.010 --> 00:09:18.543
one would be the second one.

170
00:09:19.930 --> 00:09:20.763
Good.

171
00:09:23.680 --> 00:09:28.233
And we'll say classList.add warning.

172
00:09:34.913 --> 00:09:35.746
There we go.

173
00:09:35.746 --> 00:09:37.210
And then we'll remove the first one.

174
00:09:38.340 --> 00:09:39.343
Beautiful.

175
00:09:40.760 --> 00:09:43.300
All right, next, create a function called

176
00:09:43.300 --> 00:09:46.220
generatePlayerCard that takes in three arguments,

177
00:09:46.220 --> 00:09:48.223
a name, and age and a height.

178
00:09:49.230 --> 00:09:51.430
Have that function return HTML that looks like this.

179
00:09:51.430 --> 00:09:56.430
Div of the class of playercard, name, their height.

180
00:09:57.190 --> 00:09:58.023
Okay cool.

181
00:09:58.023 --> 00:09:59.890
So, the first one, create

182
00:09:59.890 --> 00:10:03.170
a function called generatePlayerCard.

183
00:10:03.170 --> 00:10:07.020
So we'll say function, generatePlayerCard,

184
00:10:07.020 --> 00:10:08.660
takes in three arguments.

185
00:10:08.660 --> 00:10:12.693
Takes in a name and age, and a height.

186
00:10:14.350 --> 00:10:16.420
From that, you have to return a div

187
00:10:16.420 --> 00:10:17.980
with a class of player card.

188
00:10:17.980 --> 00:10:21.630
So we will const, we could either do this,

189
00:10:21.630 --> 00:10:25.960
we could return backtext, and then inside of that,

190
00:10:25.960 --> 00:10:28.800
we have div or what we can do is tick this

191
00:10:28.800 --> 00:10:33.800
in the variable and then return the HTML.

192
00:10:34.120 --> 00:10:36.413
Make sure you spell constraint, not cosnt.

193
00:10:38.060 --> 00:10:40.960
And this will have a class of playerCard.

194
00:10:45.350 --> 00:10:46.873
And let's see if it works.

195
00:10:48.530 --> 00:10:50.620
generatePlayerCard, good.

196
00:10:50.620 --> 00:10:54.180
Returns a div, there's some stuff in it, good.

197
00:10:54.180 --> 00:10:58.100
Inside of that, we need h2 with name and age.

198
00:10:58.100 --> 00:11:03.100
So, h2 tag will interpolate the name and the age.

199
00:11:08.350 --> 00:11:09.183
Oh.

200
00:11:11.730 --> 00:11:15.800
And then paragraph that says, let's put it in there.

201
00:11:18.250 --> 00:11:22.870
They are height and age.

202
00:11:26.060 --> 00:11:31.060
In dog years, this person would be age times seven.

203
00:11:31.160 --> 00:11:35.330
Remember that we can do statements inside of this,

204
00:11:35.330 --> 00:11:36.453
works just fine.

205
00:11:37.310 --> 00:11:41.900
It looks like my formatter puts it on its own line

206
00:11:41.900 --> 00:11:44.520
decide that that's where it wants to break it.

207
00:11:44.520 --> 00:11:46.230
That would be a tall dog.

208
00:11:46.230 --> 00:11:47.500
So now, let's try it.

209
00:11:47.500 --> 00:11:52.500
If we run, it would the name of Wes, and age, 12

210
00:11:54.430 --> 00:11:58.203
and a height of 150 cm.

211
00:12:01.090 --> 00:12:06.090
Wes, 12, they are 150.

212
00:12:08.950 --> 00:12:12.680
We should make this, we'll say their height is

213
00:12:14.060 --> 00:12:17.193
and however many years old, let's rerun that.

214
00:12:18.485 --> 00:12:21.100
And 12 years old, in dog years, this person

215
00:12:21.100 --> 00:12:24.210
would be 84, that would be a tall dog.

216
00:12:24.210 --> 00:12:25.660
All right, that makes sense.

217
00:12:25.660 --> 00:12:29.940
What would be kind of a little bonus exercise here

218
00:12:29.940 --> 00:12:34.040
is if you could take in the centimeters,

219
00:12:34.040 --> 00:12:35.540
which is what we're using here

220
00:12:35.540 --> 00:12:38.800
and if you're from America, you can convert that

221
00:12:38.800 --> 00:12:40.440
to feet and inches.

222
00:12:40.440 --> 00:12:45.440
So maybe write a little function that takes in centimeters,

223
00:12:45.460 --> 00:12:49.590
converts that to inches and then figures out

224
00:12:49.590 --> 00:12:53.679
how do you convert pure inches to feet and inches.

225
00:12:53.679 --> 00:12:55.300
That'd be kind of a fun one to do,

226
00:12:55.300 --> 00:12:58.150
but I'm from Canada, and we don't need to do that.

227
00:12:58.150 --> 00:13:02.410
So, that's America's problem. (laughs)

228
00:13:02.410 --> 00:13:03.403
Okay, we got that.

229
00:13:05.186 --> 00:13:08.430
And we have this function here called playerCards.

230
00:13:08.430 --> 00:13:10.500
Now, down here, it says make a new div

231
00:13:10.500 --> 00:13:12.250
with a class of cards, okay, cool.

232
00:13:12.250 --> 00:13:15.790
Const cards equal to document.createElement.

233
00:13:22.610 --> 00:13:27.610
Cards.classList.add cards.

234
00:13:29.640 --> 00:13:32.670
Have that function make four cards,

235
00:13:32.670 --> 00:13:35.123
and append those cards to the div, okay.

236
00:13:36.060 --> 00:13:38.040
So, there's a couple of ways we could do this

237
00:13:38.040 --> 00:13:40.650
because this function returns a string,

238
00:13:40.650 --> 00:13:43.430
we could loop over it four times

239
00:13:43.430 --> 00:13:47.760
and create four cards of HTML.

240
00:13:47.760 --> 00:13:49.390
Let's show you a couple of ways to do it.

241
00:13:49.390 --> 00:13:54.390
So, const cardsHTML is equal to amt string.

242
00:13:56.300 --> 00:13:58.990
Or maybe we'll just run it the first time.

243
00:13:58.990 --> 00:14:01.377
So what was our function called?

244
00:14:01.377 --> 00:14:02.960
generatePlayerCard.

245
00:14:04.649 --> 00:14:09.649
And we'll run it with Wes, 12 and 150.

246
00:14:12.110 --> 00:14:14.820
Then let's just console log, cardsHTML.

247
00:14:17.470 --> 00:14:19.690
Failed to execute createElement on Document.

248
00:14:19.690 --> 00:14:22.290
One argument required, oh, you could tell it

249
00:14:22.290 --> 00:14:24.153
what kind of element you want, a div.

250
00:14:25.581 --> 00:14:27.730
Okay, so that works.

251
00:14:27.730 --> 00:14:32.130
But then, how do you keep tacking on to that?

252
00:14:32.130 --> 00:14:34.160
Well, we could change this to a let

253
00:14:35.070 --> 00:14:39.740
and then we can say cardsHTML is equal to cardsHTML

254
00:14:39.740 --> 00:14:42.273
plus and we've run it again.

255
00:14:45.950 --> 00:14:49.423
Say, Scott, and then do it again.

256
00:14:50.510 --> 00:14:51.343
Kait.

257
00:14:52.720 --> 00:14:55.940
And Snickers.

258
00:14:55.940 --> 00:14:57.940
Although, he is a dog already, whatever.

259
00:14:58.820 --> 00:15:01.720
Okay, so, let's console log that.

260
00:15:04.907 --> 00:15:07.790
That will give us four different cards here.

261
00:15:09.430 --> 00:15:10.370
That seems to be working.

262
00:15:10.370 --> 00:15:11.930
So, that's one way.

263
00:15:11.930 --> 00:15:13.580
Another way would be just to create

264
00:15:13.580 --> 00:15:15.900
four separate variables for each of those.

265
00:15:15.900 --> 00:15:20.530
Another way would be you could take an array of names

266
00:15:20.530 --> 00:15:22.670
and loop over them, that's probably how I would do it,

267
00:15:22.670 --> 00:15:24.270
we don't know about arrays just yet,

268
00:15:24.270 --> 00:15:27.070
but we'll be doing lots of examples like that coming up.

269
00:15:28.240 --> 00:15:33.240
And I guess, another way is that we could take the cards div

270
00:15:35.960 --> 00:15:37.360
and call insertAdjacentHTML.

271
00:15:39.767 --> 00:15:43.670
And we're gonna say afterbegin, I think.

272
00:15:46.350 --> 00:15:48.320
And then just pass it, regenerate it

273
00:15:50.180 --> 00:15:52.450
output of this function and then

274
00:15:52.450 --> 00:15:53.890
just run that four times over.

275
00:15:53.890 --> 00:15:57.390
So, lots of different ways because it's not in the (mumbles)

276
00:15:57.390 --> 00:16:01.400
I think all of those are probably the same.

277
00:16:01.400 --> 00:16:04.670
I wouldn't sweat doing one way over another.

278
00:16:04.670 --> 00:16:07.169
I'm gonna keep it at this so we'll take the cards

279
00:16:07.169 --> 00:16:12.090
and say innerHTML is equal to cardsHTML

280
00:16:13.010 --> 00:16:15.670
and then, put the div into the DOM

281
00:16:15.670 --> 00:16:18.730
just before the wrapper element.

282
00:16:18.730 --> 00:16:23.730
Okay, so before the wrapper, which is this one div.

283
00:16:24.220 --> 00:16:29.220
So, we'll say, div.insertAdjacentElement

284
00:16:31.090 --> 00:16:34.280
'cause the cards is a proper element.

285
00:16:34.280 --> 00:16:39.280
And we say beforebegin and we'll pass it the cards.

286
00:16:39.858 --> 00:16:41.320
Does that work?

287
00:16:41.320 --> 00:16:44.150
Hey, lookin' good!

288
00:16:44.150 --> 00:16:47.210
Lookin' good, so now, we have each of our cards.

289
00:16:47.210 --> 00:16:48.910
We can probably do, just to add

290
00:16:48.910 --> 00:16:50.490
a little bit of style for those.

291
00:16:50.490 --> 00:16:51.603
So style.

292
00:16:54.360 --> 00:16:57.740
Does each of our cards have a class playerCard?

293
00:16:58.950 --> 00:17:03.950
Say, cards, display grid, grid, template,

294
00:17:07.030 --> 00:17:12.030
columns, repeat for lfr, grid-gap, 20px.

295
00:17:16.510 --> 00:17:17.510
Okay.

296
00:17:17.510 --> 00:17:19.697
And then we'll say playerCard

297
00:17:20.580 --> 00:17:23.153
background white, padding 20px.

298
00:17:25.890 --> 00:17:27.120
Looking good.

299
00:17:27.120 --> 00:17:28.010
And...

300
00:17:32.010 --> 00:17:33.642
Change that to black.

301
00:17:33.642 --> 00:17:36.440
(whistles) Very nice, very nice.

302
00:17:36.440 --> 00:17:41.033
Maybe add a little bit of padding to this.

303
00:17:42.500 --> 00:17:43.600
That looks good.

304
00:17:43.600 --> 00:17:46.770
So, we've got each of those cards, let's go back

305
00:17:46.770 --> 00:17:48.683
to our answer here.

306
00:17:51.280 --> 00:17:54.000
Append those thing, put the div thing

307
00:17:54.000 --> 00:17:57.020
and then oh, bonus, put a delete button on each cards

308
00:17:57.020 --> 00:18:00.320
so when you click it, the whole card is removed.

309
00:18:00.320 --> 00:18:02.060
So we haven't done this, but who cares?

310
00:18:02.060 --> 00:18:03.550
Let's look ahead.

311
00:18:03.550 --> 00:18:06.733
We'll go to where we generate the card.

312
00:18:07.730 --> 00:18:12.730
And we'll put a button and a class of delete.

313
00:18:16.270 --> 00:18:18.930
And you also have to give it a type of button,

314
00:18:18.930 --> 00:18:20.700
which is kind of funny.

315
00:18:20.700 --> 00:18:24.890
And then in there, we'll just say &amp;times, delete.

316
00:18:28.940 --> 00:18:30.910
Okay, we got all of our buttons here.

317
00:18:30.910 --> 00:18:32.010
And when you click on one of those,

318
00:18:32.010 --> 00:18:34.030
I wanna remove the card.

319
00:18:34.030 --> 00:18:38.363
So what we can do here is we can select all the buttons.

320
00:18:42.170 --> 00:18:44.880
Const buttons is equal to document.querySelectorAll

321
00:18:48.170 --> 00:18:50.200
button, or what was it?

322
00:18:50.200 --> 00:18:51.033
Delete.

323
00:18:55.310 --> 00:18:58.350
Let's see what we got okay, so we got our four buttons,

324
00:18:58.350 --> 00:19:03.350
they're on the page and we can loop over them

325
00:19:04.450 --> 00:19:07.410
and attach a listener.

326
00:19:07.410 --> 00:19:11.920
Actually, we'll make our delete function.

327
00:19:11.920 --> 00:19:13.710
Function deleteCard.

328
00:19:16.460 --> 00:19:19.280
Console log, delete card to do.

329
00:19:19.280 --> 00:19:20.240
We'll do that later.

330
00:19:20.240 --> 00:19:21.940
And then loop over them attach a listener.

331
00:19:21.940 --> 00:19:23.927
So we'll say buttons.forEach button.

332
00:19:32.069 --> 00:19:34.069
Button.addEventListener.

333
00:19:35.560 --> 00:19:36.660
We're gonna listen for a click

334
00:19:36.660 --> 00:19:38.360
and when that happens, we are going

335
00:19:38.360 --> 00:19:41.023
to run the deleteCard function.

336
00:19:42.136 --> 00:19:42.969
Does that work?

337
00:19:44.450 --> 00:19:47.790
So when I reclick it, runs the deleteCard.

338
00:19:47.790 --> 00:19:51.060
So in here, what we can do, is we can pass the event.

339
00:19:51.060 --> 00:19:54.450
Again, this is going ahead of us, but this is bonus, folks.

340
00:19:54.450 --> 00:19:56.830
So, hold on to your pants.

341
00:19:56.830 --> 00:19:59.680
If we console log the event.currentTarget,

342
00:20:04.490 --> 00:20:07.000
it gives us access to the actual button element,

343
00:20:07.000 --> 00:20:10.170
that's good, so that was the element that got clicked.

344
00:20:10.170 --> 00:20:13.480
So we'll say const buttonThatGotClicked

345
00:20:17.730 --> 00:20:19.743
is equal to event.currentTarget.

346
00:20:21.000 --> 00:20:25.850
And then we need to find out the parent div.

347
00:20:25.850 --> 00:20:27.710
And there's a couple of ways we can do this.

348
00:20:27.710 --> 00:20:31.023
We can say buttonThatGotClicked dot,

349
00:20:32.870 --> 00:20:34.357
is it just one level up?

350
00:20:34.357 --> 00:20:36.190
.parentElement.remove.

351
00:20:39.940 --> 00:20:41.230
Is that gonna work?

352
00:20:41.230 --> 00:20:43.370
Lots of red there, who knows?

353
00:20:43.370 --> 00:20:44.220
Boom!

354
00:20:44.220 --> 00:20:47.110
It removes it, so that's pretty cool.

355
00:20:47.110 --> 00:20:48.790
Another way that we could've done it

356
00:20:48.790 --> 00:20:53.320
is we could say, buttonThatGotClicked.closest

357
00:20:56.477 --> 00:21:01.477
.playerCard.remove, oh, what's this?

358
00:21:01.480 --> 00:21:02.313
Is this gonna work?

359
00:21:02.313 --> 00:21:03.610
Let's see, it works.

360
00:21:03.610 --> 00:21:05.110
So, what does closest do?

361
00:21:05.110 --> 00:21:10.110
Closest will look at an element and move itself

362
00:21:10.240 --> 00:21:13.950
up the tree of Dom elements until it finds

363
00:21:13.950 --> 00:21:17.190
something that matches this right here.

364
00:21:17.190 --> 00:21:21.200
And that's pretty cool because what you can do is,

365
00:21:21.200 --> 00:21:23.400
right now, both of these work.

366
00:21:23.400 --> 00:21:27.940
But what if I were to change where that button goes?

367
00:21:27.940 --> 00:21:30.310
Like if I were to take this button

368
00:21:30.310 --> 00:21:33.950
and for some reason, I put it inside of this paragraph,

369
00:21:33.950 --> 00:21:37.153
so now it's button paragraph div.

370
00:21:38.270 --> 00:21:40.340
Do both of these still work?

371
00:21:40.340 --> 00:21:42.833
This one is traversing based on a parent element.

372
00:21:43.870 --> 00:21:46.140
(chuckles) And now it just deletes its parent.

373
00:21:46.140 --> 00:21:50.760
Which is a paragraph tag and not an actual div.

374
00:21:50.760 --> 00:21:55.760
So, by using this one, it will search for the div

375
00:21:56.010 --> 00:22:00.420
or any element that has a playerCard class and remove that.

376
00:22:00.420 --> 00:22:03.360
And even though we remove the button over,

377
00:22:03.360 --> 00:22:05.990
you see that it still works.

378
00:22:05.990 --> 00:22:06.823
Whoo!

379
00:22:06.823 --> 00:22:09.220
Hopefully you are sweaty if you just passed that,

380
00:22:09.220 --> 00:22:13.830
Tweet me @wesboss and tell me how sweet you are

381
00:22:13.830 --> 00:22:15.070
going through that.

382
00:22:15.070 --> 00:22:17.763
With that, let's move on to the next section.

