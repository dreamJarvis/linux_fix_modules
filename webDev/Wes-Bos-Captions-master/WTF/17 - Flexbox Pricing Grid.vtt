WEBVTT

1
00:00:00.323 --> 00:00:02.906
(upbeat music)

2
00:00:12.210 --> 00:00:13.394
<v Wes Bos>Welcome back, in this video</v>

3
00:00:13.394 --> 00:00:16.072
we are going to build a pricing grid

4
00:00:16.072 --> 00:00:17.932
and I think this is a really good example

5
00:00:17.932 --> 00:00:19.833
because it's got a couple things.

6
00:00:19.833 --> 00:00:23.057
First of all, we're using flexbox to create these

7
00:00:23.057 --> 00:00:26.364
columns here, and then we also have the opportunity

8
00:00:26.364 --> 00:00:29.098
to either center them, like they are now,

9
00:00:29.098 --> 00:00:32.621
or show you how to use equal column height

10
00:00:32.621 --> 00:00:34.900
but still make sure that this button,

11
00:00:34.900 --> 00:00:36.756
this call to action button, is at the bottom.

12
00:00:36.756 --> 00:00:38.960
That's a request I get from clients quite a bit,

13
00:00:38.960 --> 00:00:41.694
and previously had been a bit of a pain.

14
00:00:41.694 --> 00:00:45.279
So, what I want to do is get started.

15
00:00:45.279 --> 00:00:48.048
Open up your index and your style.css

16
00:00:48.048 --> 00:00:49.462
and I'm just gonna refresh.

17
00:00:49.462 --> 00:00:52.284
So what we've done here is I've set you up with some HTML.

18
00:00:52.284 --> 00:00:55.071
Let's go over the HTML real quick.

19
00:00:55.071 --> 00:00:56.380
I've got this pricing grid,

20
00:00:56.380 --> 00:00:59.963
and this is going to be our flex container,

21
00:01:01.648 --> 00:01:04.898
and I've got each div, here, is a plan,

22
00:01:05.983 --> 00:01:08.781
Div with a class of plan, div with a class of plan,

23
00:01:08.781 --> 00:01:10.997
and inside of it I've just got a whole bunch of content

24
00:01:10.997 --> 00:01:13.736
that you'd normally find, things like headings, paragraphs,

25
00:01:13.736 --> 00:01:16.153
unordered lists, and buttons.

26
00:01:16.998 --> 00:01:21.998
So, that's that. Let's jump on over to our style.css,

27
00:01:22.131 --> 00:01:25.438
and, again, this is just base styling.

28
00:01:25.438 --> 00:01:27.836
We wanna scroll right down to the bottom and actually start

29
00:01:27.836 --> 00:01:30.282
with our flexbox stuff.

30
00:01:30.282 --> 00:01:34.014
My pricing grid, I've made it 750 and I've centered it,

31
00:01:34.014 --> 00:01:36.075
I'm just gonna put a border on that, just to show you

32
00:01:36.075 --> 00:01:38.653
where it is. You get the point, right?

33
00:01:38.653 --> 00:01:40.986
Here's a 750 pixel wide div.

34
00:01:43.657 --> 00:01:47.235
Now, we want to turn off flexbox. So how do we do that?

35
00:01:47.235 --> 00:01:51.485
Display flex, that will make it our flex container.

36
00:01:55.396 --> 00:01:58.763
Let's see what we got here. Alright, cool.

37
00:01:58.763 --> 00:02:02.449
Right away, we have enough content that, what it's doing

38
00:02:02.449 --> 00:02:07.449
is it's distributing the items, and because this dog one

39
00:02:07.663 --> 00:02:10.420
here is the most content, it's giving it the most space.

40
00:02:10.420 --> 00:02:11.898
However, it's not exactly what we want,

41
00:02:11.898 --> 00:02:14.803
we want them to be equal width, so we need to go ahead

42
00:02:14.803 --> 00:02:18.385
and select each item, and if we look here, pricing grid

43
00:02:18.385 --> 00:02:21.130
is our flex container, each .plan

44
00:02:21.130 --> 00:02:26.130
is going to be our flex item. So, .plan, and we will say

45
00:02:26.204 --> 00:02:30.943
flex 1 and that will just individually split it up

46
00:02:30.943 --> 00:02:34.827
Okay, that's good. Just gonna give some styling

47
00:02:34.827 --> 00:02:38.361
to this one right here, say, background

48
00:02:38.361 --> 00:02:40.944
rgba, 255, 255, 255, 0.2, cool.

49
00:02:44.469 --> 00:02:47.562
I'm gonna go ahead and put some margin on this,

50
00:02:47.562 --> 00:02:50.899
maybe 20px, and in a previous video, I said

51
00:02:50.899 --> 00:02:53.166
you have to sorta pay attention to your margin,

52
00:02:53.166 --> 00:02:54.916
'cause you're still doing the box model,

53
00:02:54.916 --> 00:02:58.949
but just like regular HTML, or regular CSS, sorry,

54
00:02:58.949 --> 00:03:01.563
when you apply a margin to an item that doesn't have

55
00:03:01.563 --> 00:03:04.147
an explicit width on it, it's just gonna eat

56
00:03:04.147 --> 00:03:06.571
into everything we have there. So let me give

57
00:03:06.571 --> 00:03:09.988
some padding to it, border radius of 4px,

58
00:03:14.642 --> 00:03:17.809
text align center, okay, so that should,

59
00:03:17.809 --> 00:03:20.246
alright, that's looking pretty good.

60
00:03:20.246 --> 00:03:23.413
Now, we actually need to go ahead and,

61
00:03:24.997 --> 00:03:27.616
we did our flex 1, I'm gonna move this to the bottom here.

62
00:03:27.616 --> 00:03:29.739
Now, this might be the layout that you want.

63
00:03:29.739 --> 00:03:32.784
I get this request fairly often from clients,

64
00:03:32.784 --> 00:03:36.542
where you'd like to have three columns here,

65
00:03:36.542 --> 00:03:38.831
and they should all be exactly the same size,

66
00:03:38.831 --> 00:03:41.804
determined by whatever is the highest.

67
00:03:41.804 --> 00:03:44.149
And then, usually, what also comes along with that,

68
00:03:44.149 --> 00:03:47.600
is, oh, can you just put the buttons all at the bottom?

69
00:03:47.600 --> 00:03:51.166
Because I know that the text is sometimes shorter or longer,

70
00:03:51.166 --> 00:03:53.051
but I would like the call to action buttons

71
00:03:53.051 --> 00:03:57.801
to always be all along the bottom. So, how do we do that?

72
00:03:59.123 --> 00:04:03.438
By default, these ones right here, the align items,

73
00:04:03.438 --> 00:04:05.911
are stretch, and I'm gonna show you in just a second

74
00:04:05.911 --> 00:04:09.904
where we're gonna change it to, align items into center,

75
00:04:09.904 --> 00:04:12.265
and we'll see what that does, it takes them,

76
00:04:12.265 --> 00:04:13.752
and that's kinda what we're looking for

77
00:04:13.752 --> 00:04:15.989
at the end of the day.

78
00:04:15.989 --> 00:04:20.572
However, if we don't want that, the default is stretch.

79
00:04:21.809 --> 00:04:24.374
And when we have that on, it stretches them as high

80
00:04:24.374 --> 00:04:27.940
as the tallest one is, which is pretty great.

81
00:04:27.940 --> 00:04:29.935
However, how do we get these buttons

82
00:04:29.935 --> 00:04:31.667
to then go to the bottom?

83
00:04:31.667 --> 00:04:35.162
I know that we have the ability to overwrite

84
00:04:35.162 --> 00:04:39.135
a single item in, say, align self flex end,

85
00:04:39.135 --> 00:04:40.238
so how do we do that?

86
00:04:40.238 --> 00:04:44.238
Let's go ahead and select our, let's say, .plan.

87
00:04:45.720 --> 00:04:49.412
What do we got on that? Cta, is a class.

88
00:04:49.412 --> 00:04:53.329
So, .cta, and, let's say, align self, flex end,

89
00:04:56.550 --> 00:04:58.685
And that should stick it right to the bottom.

90
00:04:58.685 --> 00:05:02.669
So I'll give it a refresh, and that doesn't do anything,

91
00:05:02.669 --> 00:05:05.657
and that's because align self flex end,

92
00:05:05.657 --> 00:05:10.657
that is a flexbox property that is applied to a flex item.

93
00:05:11.183 --> 00:05:13.319
Now, what is our flex item in this case?

94
00:05:13.319 --> 00:05:17.312
Well, flex item is the plan and the flex container

95
00:05:17.312 --> 00:05:21.029
is a pricing grid, so anything inside of this flex item

96
00:05:21.029 --> 00:05:22.969
is really nothing for us.

97
00:05:22.969 --> 00:05:25.966
So, we actually need to go one step further

98
00:05:25.966 --> 00:05:29.631
and also make this plan display flex as well,

99
00:05:29.631 --> 00:05:31.045
so remember in the last video we talked

100
00:05:31.045 --> 00:05:33.768
about nesting flexbox, this is another situation

101
00:05:33.768 --> 00:05:34.652
where you would do that.

102
00:05:34.652 --> 00:05:39.402
So, say display flex, and, oh my goodness, what happened?

103
00:05:40.617 --> 00:05:43.052
Well, since we displayed flex it's gonna try

104
00:05:43.052 --> 00:05:46.915
and make it into rows, so what we need to go ahead

105
00:05:46.915 --> 00:05:51.395
here and do is say flex wrap wrap, so they'll wrap

106
00:05:51.395 --> 00:05:55.812
onto the additional lines, and that fixes some of it,

107
00:05:57.938 --> 00:05:59.849
but still we've got all kinds of issues here

108
00:05:59.849 --> 00:06:02.830
where maybe this, like see this paragraph right here?

109
00:06:02.830 --> 00:06:06.702
It can technically fit right beside the h3 of fish,

110
00:06:06.702 --> 00:06:09.000
so really not what we want just yet,

111
00:06:09.000 --> 00:06:12.081
so we need to go ahead and select all of the new

112
00:06:12.081 --> 00:06:15.835
flex items, so if this plan now is a flex container

113
00:06:15.835 --> 00:06:18.878
as well, this h2, this paragraph, this unordered list,

114
00:06:18.878 --> 00:06:22.695
this paragraph, and this link, those are all flex items.

115
00:06:22.695 --> 00:06:27.327
So we need to select them, so now .plan, angle bracket,

116
00:06:27.327 --> 00:06:31.068
star, that means all direct descendants of the plan,

117
00:06:31.068 --> 00:06:34.837
which it selects all of your flex items, and you can say

118
00:06:34.837 --> 00:06:38.968
flex 1, see what that gives us, it's broken again.

119
00:06:38.968 --> 00:06:42.722
You can see why this flexbox stuff is so frustrating,

120
00:06:42.722 --> 00:06:44.268
every time you try to add something

121
00:06:44.268 --> 00:06:46.466
it just gets worse and worse.

122
00:06:46.466 --> 00:06:48.433
But again, it's 'cause there's no width on them.

123
00:06:48.433 --> 00:06:51.683
So, we can say flex-basis, 100 percent,

124
00:06:53.182 --> 00:06:55.233
and everything is fixed for us, we can actually do

125
00:06:55.233 --> 00:06:58.767
a little bit of a shorthand there, one 100 percent,

126
00:06:58.767 --> 00:07:01.824
that'll set the grow, shrink, and the basis

127
00:07:01.824 --> 00:07:04.770
all in one go, and we're off to the races there.

128
00:07:04.770 --> 00:07:07.129
So, great, we're in really good shape there,

129
00:07:07.129 --> 00:07:10.164
however, if we don't want it to be 100 percent,

130
00:07:10.164 --> 00:07:14.239
100 percent, 100 percent, which is kind of cool,

131
00:07:14.239 --> 00:07:18.426
what we can do is go back up to our pricing grid,

132
00:07:18.426 --> 00:07:21.593
and get, use our align items property,

133
00:07:23.722 --> 00:07:26.666
and we can set that to center.

134
00:07:26.666 --> 00:07:28.629
So, it's not gonna stretch them across,

135
00:07:28.629 --> 00:07:33.448
it's gonna figure out, how high is this pricing grid?

136
00:07:33.448 --> 00:07:35.445
Let's put a border on that so we can see where it is.

137
00:07:35.445 --> 00:07:40.445
So, see this red border? I'll bump that up a little bit.

138
00:07:40.544 --> 00:07:44.965
And that's how big it is, and it's gonna center them

139
00:07:44.965 --> 00:07:47.516
right inside of that flex container.

140
00:07:47.516 --> 00:07:50.563
So, again, another really nice example as to

141
00:07:50.563 --> 00:07:53.906
when you would use flexbox as a component in

142
00:07:53.906 --> 00:07:57.906
a website, as well as using a nested flex, where

143
00:07:58.964 --> 00:08:03.349
the plan is both a flex item and a flex container.

144
00:08:03.349 --> 00:08:04.351
See you in the next video.

145
00:08:04.351 --> 00:08:06.934
(upbeat music)

