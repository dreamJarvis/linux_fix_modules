WEBVTT

1
00:00:00.419 --> 00:00:03.836
(whistling upbeat music)

2
00:00:12.290 --> 00:00:13.821
<v Instructor>In this video, we're going to be talking</v>

3
00:00:13.821 --> 00:00:15.530
about flex-direction.

4
00:00:15.530 --> 00:00:18.610
Now while this video is going to be very short and simple,

5
00:00:18.610 --> 00:00:19.710
it's actually really important

6
00:00:19.710 --> 00:00:21.180
that we understand flex-direction,

7
00:00:21.180 --> 00:00:23.610
because it sets with something called the axis,

8
00:00:23.610 --> 00:00:24.770
when we're doing Flexbox.

9
00:00:24.770 --> 00:00:28.220
So in Flexbox, we can have both the main and the cross axis.

10
00:00:28.220 --> 00:00:29.950
We'll learn about that in just a second.

11
00:00:29.950 --> 00:00:33.030
However, when we go into the rest of the features

12
00:00:33.030 --> 00:00:36.610
for Flexbox, if we just take a quick look at the CSS tricks

13
00:00:36.610 --> 00:00:38.730
for the Complete Guide to Flexbox,

14
00:00:38.730 --> 00:00:41.720
we're gonna run into these things like justify-content,

15
00:00:41.720 --> 00:00:44.040
where you can horizontally or vertically

16
00:00:44.040 --> 00:00:47.070
center your content and things like align-items,

17
00:00:47.070 --> 00:00:50.940
and these don't necessarily mean that they are left to right

18
00:00:50.940 --> 00:00:55.110
or top to bottom, they entirely depend on something

19
00:00:55.110 --> 00:00:56.713
called the flex-direction.

20
00:00:57.772 --> 00:01:00.420
With that in mind, let's jump into this one.

21
00:01:00.420 --> 00:01:05.248
I've just got my flex-direction style, that's CSS, on open.

22
00:01:05.248 --> 00:01:10.248
And if I say flex-direction, row,

23
00:01:10.870 --> 00:01:13.070
give it a save and refresh, nothing happens,

24
00:01:13.070 --> 00:01:17.160
because that is the default of any flex container.

25
00:01:17.160 --> 00:01:19.740
Remember that this one, we did display:flex on it.

26
00:01:19.740 --> 00:01:23.285
So what that means is that it'll just go from,

27
00:01:23.285 --> 00:01:25.960
it'll kind of stack right beside each other,

28
00:01:25.960 --> 00:01:29.104
and then they will span vertically to hit the height

29
00:01:29.104 --> 00:01:31.080
of whatever the container is.

30
00:01:31.080 --> 00:01:34.330
Remember that we just did a quick height:100vh on there

31
00:01:34.330 --> 00:01:36.970
so we could see that it's actually spanning across,

32
00:01:36.970 --> 00:01:38.430
even if we didn't, if we didn't have that,

33
00:01:38.430 --> 00:01:40.130
let me take that off real quickly,

34
00:01:40.130 --> 00:01:43.780
it would just take up the amount of content that it needs.

35
00:01:43.780 --> 00:01:46.760
I'm actually going to change that to min-height,

36
00:01:46.760 --> 00:01:48.581
just 'cause if that was ever higher than

37
00:01:48.581 --> 00:01:52.170
the height of our screen, then we would actually need that.

38
00:01:52.170 --> 00:01:55.770
There we go, then the other one is flex-direction column.

39
00:01:55.770 --> 00:01:58.050
Give that a save and refresh, and you'll see

40
00:01:58.050 --> 00:01:59.860
what that does is instead of putting them

41
00:01:59.860 --> 00:02:02.123
side by side, it will stack them vertically,

42
00:02:02.123 --> 00:02:03.970
on top of each other.

43
00:02:03.970 --> 00:02:07.450
Now, that may not seem very fundamental to you.

44
00:02:07.450 --> 00:02:10.200
That may seem pretty simple, however the main thing

45
00:02:10.200 --> 00:02:12.540
that we want to take away from this is that

46
00:02:12.540 --> 00:02:16.843
when we are defining things as flex-direction row,

47
00:02:16.843 --> 00:02:20.200
or flex-direction column, we have two axises.

48
00:02:20.200 --> 00:02:23.780
We have the main axis, which we are going

49
00:02:23.780 --> 00:02:26.119
to be using things in the future

50
00:02:26.119 --> 00:02:31.119
like the justify-content and the align-items.

51
00:02:32.010 --> 00:02:36.600
So the main axis, when it is row, is from left to right.

52
00:02:36.600 --> 00:02:39.850
You can imagine a big arrow going across the screen

53
00:02:39.850 --> 00:02:43.200
from left to right here, and then what we call

54
00:02:43.200 --> 00:02:45.899
the cross axis, which is the other one,

55
00:02:45.899 --> 00:02:48.420
goes from top to bottom.

56
00:02:48.420 --> 00:02:49.970
So you can imagine a big arrow

57
00:02:49.970 --> 00:02:51.670
going from top to bottom here.

58
00:02:51.670 --> 00:02:53.980
Now that's the default, and that's

59
00:02:53.980 --> 00:02:55.360
generally what you'll be using,

60
00:02:55.360 --> 00:02:58.373
however, if you change this from row to column,

61
00:02:59.280 --> 00:03:01.750
what happens is that the main axis

62
00:03:01.750 --> 00:03:04.420
is no longer going to be from left to right,

63
00:03:04.420 --> 00:03:06.810
it's going to be from top to bottom,

64
00:03:06.810 --> 00:03:08.640
which is exactly why the content

65
00:03:08.640 --> 00:03:11.810
is going from top to bottom.

66
00:03:11.810 --> 00:03:14.851
Right, again, if we change it back to row

67
00:03:14.851 --> 00:03:17.187
and give it a save, content starts here and goes

68
00:03:17.187 --> 00:03:20.371
to the right, 'cause that's the way the axis runs.

69
00:03:20.371 --> 00:03:24.520
If we change it to column and give it a save,

70
00:03:24.520 --> 00:03:26.350
the axis changes from left to right

71
00:03:26.350 --> 00:03:27.784
and goes top to bottom,

72
00:03:27.784 --> 00:03:31.180
and you can see the content sort of follow along with that.

73
00:03:31.180 --> 00:03:34.763
Similarly, we also have row-reverse.

74
00:03:36.620 --> 00:03:37.750
You can imagine what that does.

75
00:03:37.750 --> 00:03:40.445
Instead of the main axis running from left to right,

76
00:03:40.445 --> 00:03:42.600
it runs from right to left.

77
00:03:42.600 --> 00:03:45.910
Content starts at 1, and goes on out from there.

78
00:03:45.910 --> 00:03:47.170
And that's gonna be really important

79
00:03:47.170 --> 00:03:49.490
when we start to work with all these

80
00:03:49.490 --> 00:03:51.610
alignment ones in a future video.

81
00:03:51.610 --> 00:03:55.970
You probably can guess that we also have column-reverse,

82
00:03:55.970 --> 00:03:58.570
in which the content will start at 10,

83
00:03:58.570 --> 00:04:01.020
and go all the way down to 1, because,

84
00:04:01.020 --> 00:04:03.810
where does the axis start at the top?

85
00:04:03.810 --> 00:04:07.100
No, it doesn't, the axis actually starts at the bottom

86
00:04:07.100 --> 00:04:10.260
and goes on up, so every time that you're working

87
00:04:10.260 --> 00:04:15.260
with Flexbox, if you ask yourself where are the main axis,

88
00:04:15.300 --> 00:04:19.260
and then cross axis is always just the opposite

89
00:04:19.260 --> 00:04:20.230
that you have there.

90
00:04:20.230 --> 00:04:22.493
So any time you're stuck on Flexbox, if you can't

91
00:04:22.493 --> 00:04:25.870
answer the question, where is my axises,

92
00:04:25.870 --> 00:04:27.380
maybe step back, take a look at

93
00:04:27.380 --> 00:04:29.460
what you set your flex-direction to be.

94
00:04:29.460 --> 00:04:31.370
If it's not set to anything, what is it?

95
00:04:31.370 --> 00:04:36.010
It's flex-direction row, 'cause that is the default.

96
00:04:36.010 --> 00:04:37.920
You'd probably never have to set it to row,

97
00:04:37.920 --> 00:04:40.510
unless you are specifically unapplying it

98
00:04:40.510 --> 00:04:42.710
for whatever reason that you have.

99
00:04:42.710 --> 00:04:45.130
So, that's flex-direction, pretty simple.

100
00:04:45.130 --> 00:04:47.550
In the next video, we are going to be gearing up

101
00:04:47.550 --> 00:04:48.720
and talking about flex-wrap,

102
00:04:48.720 --> 00:04:50.700
so when you actually give some sort of width

103
00:04:50.700 --> 00:04:53.240
to these things, what happens when you run out of space?

104
00:04:53.240 --> 00:04:55.320
Does it spill off the page, do they wrap around,

105
00:04:55.320 --> 00:04:56.730
et cetera, et cetera.

106
00:04:56.730 --> 00:04:58.360
Some of these things that you may be used to

107
00:04:58.360 --> 00:04:59.520
when working with floats.

108
00:04:59.520 --> 00:05:00.867
See you in the next video.

109
00:05:00.867 --> 00:05:03.492
(cheerful music)

