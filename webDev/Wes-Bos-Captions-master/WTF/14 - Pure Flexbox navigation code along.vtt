WEBVTT

1
00:00:00.279 --> 00:00:04.446
(cheerful intro music, whistling)

2
00:00:12.105 --> 00:00:14.231
<v Male speaker>In this video we're gonna make a flexbox.</v>

3
00:00:14.231 --> 00:00:16.410
Now then I actually think that building

4
00:00:16.410 --> 00:00:20.026
navigations is one of the most common and best use

5
00:00:20.026 --> 00:00:21.953
cases for actually using flexbox.

6
00:00:21.953 --> 00:00:24.195
So this is essentially what we're gonna be building here,

7
00:00:24.195 --> 00:00:27.319
it's just a standard navigation.

8
00:00:27.319 --> 00:00:29.199
So I've got a nav tag inside of that

9
00:00:29.199 --> 00:00:32.789
I have an unordered list, and a whole bunch of list items.

10
00:00:32.789 --> 00:00:35.323
The really only different thing being that these

11
00:00:35.323 --> 00:00:38.355
social icons are gonna have a class of social on them

12
00:00:38.355 --> 00:00:41.809
so that we can make them a little bit smaller.

13
00:00:41.809 --> 00:00:43.953
So that's how it's going to look on desktop,

14
00:00:43.953 --> 00:00:47.733
and when we go down to a bit of a smaller screen

15
00:00:47.733 --> 00:00:50.454
I'm gonna make each one of them 50% wide,

16
00:00:50.454 --> 00:00:55.381
but the social ones 25% wide, and then finally

17
00:00:55.381 --> 00:00:58.659
when we get down to about 500 pixels we're going to stack

18
00:00:58.659 --> 00:01:03.659
these ones while leaving these ones to be 25% wide.

19
00:01:04.156 --> 00:01:08.248
Now, the kind of beauty of a Flex Nav is that you don't

20
00:01:08.248 --> 00:01:11.705
need to go ahead and figure out the proportions.

21
00:01:11.705 --> 00:01:13.253
A lot of times if you're doing this with floats you'd have

22
00:01:13.253 --> 00:01:17.656
to figure out, "Okay there's 6 items plus 4 small ones, plus

23
00:01:17.656 --> 00:01:21.363
however much padding or margin that you need to use, and

24
00:01:21.363 --> 00:01:23.279
we'll figure it all out from there."

25
00:01:23.279 --> 00:01:24.946
You don't have to do any math here,

26
00:01:24.946 --> 00:01:29.736
and if you were to add one, so if I were to add a new item

27
00:01:29.736 --> 00:01:33.240
to the list and refresh, you'll see that the new item just

28
00:01:33.240 --> 00:01:36.000
slots itself perfectly in amongst the other ones.

29
00:01:36.000 --> 00:01:37.955
We didn't have to do any resizing of widths

30
00:01:37.955 --> 00:01:39.375
or do any sort of math.

31
00:01:39.375 --> 00:01:43.201
Similarly if I go ahead and take out maybe lets say 2 of

32
00:01:43.201 --> 00:01:46.750
these items and give it a refresh, it's extremely flexible.

33
00:01:46.750 --> 00:01:47.814
You get the point, right?

34
00:01:47.814 --> 00:01:50.540
You can just throw a whole bunch of elements at it,

35
00:01:50.540 --> 00:01:53.395
tell them how much of the extra space they should eat up,

36
00:01:53.395 --> 00:01:56.410
in this case it's a lot more than these ones,

37
00:01:56.410 --> 00:01:59.061
and it'll all just figure it on out and you never have to

38
00:01:59.061 --> 00:02:02.161
worry about adding up to 100% wide.

39
00:02:02.161 --> 00:02:06.161
So, I'm gonna bring that back to item 3, and I'm

40
00:02:07.692 --> 00:02:11.859
gonna go and swap this out just while the start is

41
00:02:13.099 --> 00:02:15.457
what I'm gonna be working from.

42
00:02:15.457 --> 00:02:17.293
Let's just take a quick look at the start of the

43
00:02:17.293 --> 00:02:19.920
starting CSS that we've got here.

44
00:02:19.920 --> 00:02:23.706
I've just got my HTML set up, my border box.

45
00:02:23.706 --> 00:02:25.878
I've got some basic styling here.

46
00:02:25.878 --> 00:02:28.720
Again, this stuff doesn't have anything to do with flexbox,

47
00:02:28.720 --> 00:02:31.887
it's just so that the demo looks nice.

48
00:02:32.852 --> 00:02:34.857
Wrapper, that has nothing to do so I just

49
00:02:34.857 --> 00:02:37.584
kinda constrained the width of this navigation

50
00:02:37.584 --> 00:02:39.428
so there's a wrapper around this.

51
00:02:39.428 --> 00:02:41.944
And finally, here's where we're actually gonna get started.

52
00:02:41.944 --> 00:02:45.904
We got the flex-nav, which is this nav thing here.

53
00:02:45.904 --> 00:02:47.699
And then we've got a ul and and li.

54
00:02:47.699 --> 00:02:50.233
So what is going to be the flex container?

55
00:02:50.233 --> 00:02:52.744
It's not the flex-nav, it's gonna be the ul

56
00:02:52.744 --> 00:02:55.683
that actually is the flex container and then

57
00:02:55.683 --> 00:02:58.554
the li's are going to be the flex items in our case.

58
00:02:58.554 --> 00:03:01.424
So we've gone ahead and selected that in the way we,

59
00:03:01.424 --> 00:03:03.670
well let's first see where we're at actually.

60
00:03:03.670 --> 00:03:05.760
This is kind of the default.

61
00:03:05.760 --> 00:03:09.622
They all just stack vertically, right on top of each other.

62
00:03:09.622 --> 00:03:14.455
We can go ahead and say display:flex and give that a save.

63
00:03:15.361 --> 00:03:18.075
And you'll see that the items go from stacked on top

64
00:03:18.075 --> 00:03:21.920
of each other to display:flex, which is,

65
00:03:21.920 --> 00:03:26.068
they just take up the exact of room that they need.

66
00:03:26.068 --> 00:03:28.321
There's a little bit of padding on them, but other

67
00:03:28.321 --> 00:03:29.692
than that that's as much space.

68
00:03:29.692 --> 00:03:31.731
So we've got all this extra space on the

69
00:03:31.731 --> 00:03:33.108
right hand side here.

70
00:03:33.108 --> 00:03:34.737
What are we going to do with it?

71
00:03:34.737 --> 00:03:37.270
How are we going to work with it?

72
00:03:37.270 --> 00:03:39.302
Let's actually just go ahead and select each

73
00:03:39.302 --> 00:03:43.488
individual flex item, so I'm going to say flex-nav li,

74
00:03:43.488 --> 00:03:45.565
because the li's are the flex items,

75
00:03:45.565 --> 00:03:48.211
and we will say let's just try flex:1.

76
00:03:48.211 --> 00:03:50.025
And from previous video we learned that if you

77
00:03:50.025 --> 00:03:52.781
set something to flex:1 what does it do?

78
00:03:52.781 --> 00:03:55.959
It sets the flex grow, which is: how is this

79
00:03:55.959 --> 00:03:58.836
extra space allotted between all of the items?

80
00:03:58.836 --> 00:04:02.390
As well as the flex shrink, when you don't have

81
00:04:02.390 --> 00:04:05.408
enough space for all the items, how do you mix it,

82
00:04:05.408 --> 00:04:06.875
or how do you divide it on up?

83
00:04:06.875 --> 00:04:11.437
So, set a flex:1, refresh, and what have we got here?

84
00:04:11.437 --> 00:04:15.510
Looks like all of 'em have the exact same space.

85
00:04:15.510 --> 00:04:18.973
So that doesn't work extremely well because these

86
00:04:18.973 --> 00:04:21.834
social icons right here, they don't really need that

87
00:04:21.834 --> 00:04:24.548
much space, and these items here, they probably do need

88
00:04:24.548 --> 00:04:29.538
that amount of space because they are a little bit

89
00:04:29.538 --> 00:04:31.503
longer in the text that they have.

90
00:04:31.503 --> 00:04:34.582
So what we wanna do is select the individual ones,

91
00:04:34.582 --> 00:04:39.521
which we say flex-nav.social and the reason I'm doing that,

92
00:04:39.521 --> 00:04:42.703
if we look at the index HTML, we've got these list items

93
00:04:42.703 --> 00:04:45.667
with the class social on it, and we're gonna make those ones

94
00:04:45.667 --> 00:04:48.060
a little bit different than the other ones.

95
00:04:48.060 --> 00:04:52.656
So there I'm actually gonna set these ones to flex:1 and

96
00:04:52.656 --> 00:04:57.656
I'm gonna go up to this regular one and set them to flex:3.

97
00:04:58.361 --> 00:05:01.194
The reason I'm gonna do that, because I want the

98
00:05:01.194 --> 00:05:05.757
regular flex, I want these flex items to take 3 times

99
00:05:05.757 --> 00:05:08.501
the amount of the extra space as the social ones,

100
00:05:08.501 --> 00:05:12.385
because really they don't need any of the extra space so

101
00:05:12.385 --> 00:05:16.221
I'm gonna say, "You take 3 times the amount of the social."

102
00:05:16.221 --> 00:05:18.553
It's worth noting that this flex:3 is applying to

103
00:05:18.553 --> 00:05:21.625
all of them, and then is .social is going to overwrite

104
00:05:21.625 --> 00:05:23.877
it for these 4 social icons.

105
00:05:23.877 --> 00:05:25.916
So give that a refresh, and you'll see that right

106
00:05:25.916 --> 00:05:30.040
away we've got these ones being a little bit smaller

107
00:05:30.040 --> 00:05:32.935
and then these ones off to races.

108
00:05:32.935 --> 00:05:37.013
So that's it, that's 1, 2, 3 lines of CSS to get

109
00:05:37.013 --> 00:05:40.022
yourself a really nice flexbox nav.

110
00:05:40.022 --> 00:05:42.819
It's a hell of a lot easier than using something like

111
00:05:42.819 --> 00:05:46.607
floats and using your percentages to figure out

112
00:05:46.607 --> 00:05:48.993
how much space they should take up.

113
00:05:48.993 --> 00:05:51.245
Now we wanna talk about mobile.

114
00:05:51.245 --> 00:05:54.086
We want it to, we kinda have 2 stages here.

115
00:05:54.086 --> 00:05:58.669
As soon as we hit 1000 pixels I want them to stack 2 in

116
00:06:00.277 --> 00:06:04.359
a row, and then I wanna put these 4 all along the bottom.

117
00:06:04.359 --> 00:06:08.422
So what we need to go ahead first to do is if we want

118
00:06:08.422 --> 00:06:11.601
them to, see if we go really really small here,

119
00:06:11.601 --> 00:06:13.304
they're just gonna run into each other.

120
00:06:13.304 --> 00:06:16.433
So what do we actually need for that to work is wrapping.

121
00:06:16.433 --> 00:06:17.515
We need to turn on wrapping.

122
00:06:17.515 --> 00:06:19.801
You might think, "Oh we need to change it from row

123
00:06:19.801 --> 00:06:22.014
to column," and that's a pretty good hypothesis,

124
00:06:22.014 --> 00:06:25.016
we could go ahead and say flex-nav ul,

125
00:06:25.016 --> 00:06:28.766
flex-direction:column, and give it a refresh.

126
00:06:30.452 --> 00:06:32.248
When we hit that 1000 pixel breakpoint,

127
00:06:32.248 --> 00:06:33.784
let's see what goes on here.

128
00:06:33.784 --> 00:06:36.965
See they just stack vertically and in many situations

129
00:06:36.965 --> 00:06:39.278
that would actually be totally acceptable, but the

130
00:06:39.278 --> 00:06:42.420
problem is that we don't want them to go just stacked

131
00:06:42.420 --> 00:06:44.417
just yet, or maybe not at all.

132
00:06:44.417 --> 00:06:49.026
We want 1, 2, 3, 4, 5, 6 and then when we get down to

133
00:06:49.026 --> 00:06:51.447
the social icons, we want 4 of them to be.

134
00:06:51.447 --> 00:06:55.022
So we actually need to keep it in row, which is the default,

135
00:06:55.022 --> 00:06:56.577
so we're not gonna put that there.

136
00:06:56.577 --> 00:07:00.959
What we actually want to turn on is the flex-wrap.

137
00:07:00.959 --> 00:07:03.839
So we'll say flex-wrap:wrap, and refresh.

138
00:07:03.839 --> 00:07:06.702
Now we'll hit that 1000 pixel breakpoint.

139
00:07:06.702 --> 00:07:08.570
And, nothing's happening.

140
00:07:08.570 --> 00:07:10.995
How come they aren't wrapping?

141
00:07:10.995 --> 00:07:15.023
And for something to be able to wrap, we actually

142
00:07:15.023 --> 00:07:17.116
need to give it some sort of width.

143
00:07:17.116 --> 00:07:19.030
And the way that we are going to do that

144
00:07:19.030 --> 00:07:22.508
is with the flex basis property.

145
00:07:22.508 --> 00:07:26.473
So we'll go ahead and select each of our items, we'll say

146
00:07:26.473 --> 00:07:31.473
flex-nav li and I'm just going to do them all right now,

147
00:07:31.824 --> 00:07:35.268
and then we'll go and fix the social ones in a second.

148
00:07:35.268 --> 00:07:37.852
So we'll say flex-nav and flex, we're going to use

149
00:07:37.852 --> 00:07:41.487
the shorthand property because we want them to grow at 1,

150
00:07:41.487 --> 00:07:44.570
we want it to evenly take the extra space.

151
00:07:44.570 --> 00:07:48.551
We want it to shrink at 1, we want them to divi up,

152
00:07:48.551 --> 00:07:51.265
or we want to chisel off the extra space evenly.

153
00:07:51.265 --> 00:07:53.889
And then we wanna set it to 50%, because we want them

154
00:07:53.889 --> 00:07:57.350
to be 50% wide right next to each other.

155
00:07:57.350 --> 00:07:59.577
So go ahead and give that a save, refresh, let's

156
00:07:59.577 --> 00:08:01.534
hit that 1000 pixel breakpoint.

157
00:08:01.534 --> 00:08:03.986
And perfect, look what we got going on here.

158
00:08:03.986 --> 00:08:08.505
1, 2, 3, 4, 5, 6 and then, what's going on here?

159
00:08:08.505 --> 00:08:11.667
This is kind of, pretty classic of flexbox, is that when

160
00:08:11.667 --> 00:08:14.563
something goes wrong, when you have like conflicting

161
00:08:14.563 --> 00:08:18.207
properties, it all just kind of pukes it up onto the screen.

162
00:08:18.207 --> 00:08:21.641
But the reason that is there is because we still have

163
00:08:21.641 --> 00:08:24.067
the social one probably overwriting it, and the

164
00:08:24.067 --> 00:08:27.051
way that we can sort of debug that is if you open up your

165
00:08:27.051 --> 00:08:30.301
dev tools and just inspect one of them,

166
00:08:31.828 --> 00:08:35.365
I'll bring this down to the bottom here.

167
00:08:35.365 --> 00:08:37.276
I'm just gonna click on one of the social ones.

168
00:08:37.276 --> 00:08:40.198
You'll see that this is our flex property that we just

169
00:08:40.198 --> 00:08:43.444
wrote inside of the media query 1 1 50%.

170
00:08:43.444 --> 00:08:46.412
However this flex:1 is overwriting it.

171
00:08:46.412 --> 00:08:48.609
And that means that there is no flex basis

172
00:08:48.609 --> 00:08:50.235
actually being applied.

173
00:08:50.235 --> 00:08:55.234
So we need to specify a flex basis on that one, so I'll

174
00:08:55.234 --> 00:09:00.067
just say flex-nav li, or even just .social will be enough.

175
00:09:01.747 --> 00:09:03.775
You never want to over qualify your selectors too much

176
00:09:03.775 --> 00:09:06.187
otherwise you're gonna run into issues down the road.

177
00:09:06.187 --> 00:09:11.187
We'll say flex:1 1 and 25%, what that will give us now is

178
00:09:13.192 --> 00:09:16.025
nicely spaced out different icons,

179
00:09:17.489 --> 00:09:19.709
so that can kinda go on down.

180
00:09:19.709 --> 00:09:22.970
The last thing we wanna do is once we hit the, let's say

181
00:09:22.970 --> 00:09:25.544
500 pixel breakpoint, and I know this can be any

182
00:09:25.544 --> 00:09:28.886
breakpoint that you want, but we just then want to

183
00:09:28.886 --> 00:09:32.719
change this flex basis one more time and to be

184
00:09:34.061 --> 00:09:37.061
able to stack just one by one by one.

185
00:09:37.061 --> 00:09:40.311
So we say .flex-nav li inside of there.

186
00:09:42.387 --> 00:09:46.720
I don't have to say flex:1 1 100%, just because

187
00:09:48.069 --> 00:09:49.034
we've done that already.

188
00:09:49.034 --> 00:09:53.965
We can just say flex-basis right altogether and say 100%.

189
00:09:53.965 --> 00:09:57.143
And that's just going to overwrite this part and

190
00:09:57.143 --> 00:09:59.575
the flex grow and the flex shrink of the previous

191
00:09:59.575 --> 00:10:01.714
one is going to stick around.

192
00:10:01.714 --> 00:10:03.916
So give that a save, refresh.

193
00:10:03.916 --> 00:10:06.254
Now go down, down to 2, and then we hit that

194
00:10:06.254 --> 00:10:09.563
500 pixel breakpoint and they'll stack.

195
00:10:09.563 --> 00:10:13.397
These ones are small enough that they can stay

196
00:10:13.397 --> 00:10:16.414
4 to a row as long as we want.

197
00:10:16.414 --> 00:10:20.141
So that's a very simple flexbox nav, definitely

198
00:10:20.141 --> 00:10:21.891
really nice and easy.

199
00:10:21.891 --> 00:10:23.796
In the next video what we're gonna do is we're gonna

200
00:10:23.796 --> 00:10:26.001
be looking at how do you write a little toggle nav that

201
00:10:26.001 --> 00:10:29.470
will toggle that up and down as well as how do we

202
00:10:29.470 --> 00:10:33.931
order different elements on our page differently

203
00:10:33.931 --> 00:10:36.880
than they're on mobile vs something like desktop.

204
00:10:36.880 --> 00:10:37.713
I'll see you in that video.

205
00:10:37.713 --> 00:10:38.796
Thanks a lot.

