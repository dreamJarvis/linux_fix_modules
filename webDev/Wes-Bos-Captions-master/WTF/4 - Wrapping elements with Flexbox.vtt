WEBVTT

1
00:00:00.556 --> 00:00:04.056
(Cheerful whistling tune)

2
00:00:12.520 --> 00:00:14.739
<v ->Next up, we have flex wrap and</v>

3
00:00:14.739 --> 00:00:16.040
we are going to be working with

4
00:00:16.040 --> 00:00:17.659
giving these elements widths and

5
00:00:17.659 --> 00:00:21.200
what happens when there is too much space and

6
00:00:21.200 --> 00:00:23.376
they go wider than they should be.

7
00:00:23.376 --> 00:00:25.299
Now, one thing I want you to do right now is

8
00:00:25.299 --> 00:00:27.748
take your existing knowledge of floats and

9
00:00:27.748 --> 00:00:29.179
when you run out of space it

10
00:00:29.179 --> 00:00:30.280
just breaks on to the next line.

11
00:00:30.280 --> 00:00:33.328
Take that and just throw it out for a second because

12
00:00:33.328 --> 00:00:37.427
the nature of flexbox is that it's flexible and

13
00:00:37.427 --> 00:00:39.726
it's actually like a little bit more forgiving than

14
00:00:39.726 --> 00:00:42.779
when you have regular old floats.

15
00:00:42.779 --> 00:00:46.219
So, what we're going to do right here is that

16
00:00:46.219 --> 00:00:48.899
we've got this container here,

17
00:00:48.899 --> 00:00:51.765
the display flex on it and

18
00:00:51.765 --> 00:00:54.309
I'm gonna go ahead and select each of

19
00:00:54.309 --> 00:00:56.226
these individual boxes.

20
00:00:57.280 --> 00:00:59.459
Now, if you remember back to video one,

21
00:00:59.459 --> 00:01:01.219
we call this a flex container and

22
00:01:01.219 --> 00:01:03.459
then this was called the what?

23
00:01:03.459 --> 00:01:04.819
The flex item.

24
00:01:04.819 --> 00:01:07.448
Now, I really hope you just answered there.

25
00:01:07.448 --> 00:01:12.448
So, we're gonna go ahead and select the flex item and

26
00:01:12.592 --> 00:01:15.168
we can go ahead and give it a width,

27
00:01:15.168 --> 00:01:16.626
let's say like 300 px.

28
00:01:16.626 --> 00:01:18.152
Give it a save and

29
00:01:18.152 --> 00:01:20.195
refresh and whoa!

30
00:01:20.195 --> 00:01:24.362
So, I just gave each box a width of 300 pixels and

31
00:01:26.758 --> 00:01:30.175
10 boxes times 30, sorry 300 pixels each.

32
00:01:32.511 --> 00:01:34.578
What that means is that is 3000 pixels.

33
00:01:34.578 --> 00:01:38.121
Clearly my screen is not 3000 pixels wide so,

34
00:01:38.121 --> 00:01:41.658
and I'm not actually scrolling side to side.

35
00:01:41.658 --> 00:01:44.001
So, this is kinda cool.

36
00:01:44.001 --> 00:01:46.588
The nature of flexbox is that it's going

37
00:01:46.588 --> 00:01:48.681
to try to work with width that you give it,

38
00:01:48.681 --> 00:01:50.178
but if it just doesn't work out,

39
00:01:50.178 --> 00:01:52.161
it's just going to, first of all,

40
00:01:52.161 --> 00:01:54.692
evenly distribute it throughout the children or

41
00:01:54.692 --> 00:01:58.151
we're going to learn about flex, the actual flex property,

42
00:01:58.151 --> 00:01:59.681
in a future video where you can

43
00:01:59.681 --> 00:02:01.459
sort of assign more and less to other ones.

44
00:02:01.459 --> 00:02:04.172
So, that's where flex wrap comes in.

45
00:02:04.172 --> 00:02:06.340
Again, this is a property that we don't put on

46
00:02:06.340 --> 00:02:10.081
the flex item, we put it on the flex container and

47
00:02:10.081 --> 00:02:12.961
we'll say, flexwrap and by default its nowrap.

48
00:02:12.961 --> 00:02:15.761
It's just one word, there's no dash in it like

49
00:02:15.761 --> 00:02:18.500
some other stuff in css just the word nowrap.

50
00:02:18.500 --> 00:02:21.228
If you save that and refresh you'll see nothing happens.

51
00:02:21.228 --> 00:02:22.740
Again, you won't need that one

52
00:02:22.740 --> 00:02:23.852
unless you actually turn it off.

53
00:02:23.852 --> 00:02:28.199
But we also have wrap, and we'll talk about wrap.vr.

54
00:02:28.199 --> 00:02:30.618
If I say flexwrap wrap and refresh,

55
00:02:30.618 --> 00:02:32.407
whoa, look what happens there.

56
00:02:32.407 --> 00:02:34.527
A couple things to note here.

57
00:02:34.527 --> 00:02:37.486
It actually works with 300 pixel now.

58
00:02:37.486 --> 00:02:39.447
So we got one, two, three.

59
00:02:39.447 --> 00:02:41.218
We got three of them in before we run out of space,

60
00:02:41.218 --> 00:02:43.498
and it breaks onto the next line.

61
00:02:43.498 --> 00:02:45.319
That's sort of important.

62
00:02:45.319 --> 00:02:48.981
We'll figure out how we can get rid of that in a second.

63
00:02:48.981 --> 00:02:51.844
The other thing is, look at the height of them.

64
00:02:51.844 --> 00:02:53.124
We didn't give these a height.

65
00:02:53.124 --> 00:02:55.226
But if you remember back to before we wrapped them,

66
00:02:55.226 --> 00:02:57.874
how high were each of them?

67
00:02:57.874 --> 00:03:01.056
They were as high as the actual container could be.

68
00:03:01.056 --> 00:03:02.954
By default, flex items will try to

69
00:03:02.954 --> 00:03:06.245
stretch their way across their container.

70
00:03:06.245 --> 00:03:08.434
Of course that is because I have put a height on here.

71
00:03:08.434 --> 00:03:13.434
If I didn't have that they would just be like that.

72
00:03:13.442 --> 00:03:16.208
When we turn the wrap on, it sorta says,

73
00:03:16.208 --> 00:03:19.583
"Okay, so we need to stretch across our container,

74
00:03:19.583 --> 00:03:23.303
"but we also need to split it up between the 10 of us."

75
00:03:23.303 --> 00:03:27.691
So what happens here is that the browser figures out that

76
00:03:27.691 --> 00:03:31.524
we need four row here, and we're just going to

77
00:03:34.271 --> 00:03:36.242
split it amongst each other.

78
00:03:36.242 --> 00:03:38.611
You'll notice that the height of these is a

79
00:03:38.611 --> 00:03:40.212
little higher than it needs to be.

80
00:03:40.212 --> 00:03:42.761
It only really needs to be as high as this number one

81
00:03:42.761 --> 00:03:44.503
plus some padding on either side.

82
00:03:44.503 --> 00:03:46.612
Then I'll just kind of stretch across

83
00:03:46.612 --> 00:03:48.901
and fit it to the other ones.

84
00:03:48.901 --> 00:03:52.798
Now one thing I wanted to note here is that

85
00:03:52.798 --> 00:03:54.728
my items are going left to right because

86
00:03:54.728 --> 00:03:57.657
I speak English and I have an English browser

87
00:03:57.657 --> 00:03:59.108
that's set to English.

88
00:03:59.108 --> 00:04:02.995
However, if I was writing a language that went

89
00:04:02.995 --> 00:04:05.354
right to left, some languages read right to left,

90
00:04:05.354 --> 00:04:07.265
then they would be switched to the other side.

91
00:04:07.265 --> 00:04:09.257
Again, let's talk about our axis'.

92
00:04:09.257 --> 00:04:10.945
Our main axis goes from left to right

93
00:04:10.945 --> 00:04:15.276
and our cross axis goes from top to bottom.

94
00:04:15.276 --> 00:04:19.276
However, if I change this wrap from wrap-reverse

95
00:04:21.679 --> 00:04:26.217
and refresh it, what happens is, remember before when we did

96
00:04:26.217 --> 00:04:28.966
flex direction our cross axis went

97
00:04:28.966 --> 00:04:30.354
from left to right to right to left.

98
00:04:30.354 --> 00:04:34.486
When we change our flex wrap, the cross axis,

99
00:04:34.486 --> 00:04:36.425
which goes top to bottom in this case,

100
00:04:36.425 --> 00:04:38.265
instead of going top to bottom

101
00:04:38.265 --> 00:04:40.036
it goes from bottom to top.

102
00:04:40.036 --> 00:04:42.619
I just did a quick swap of that

103
00:04:43.617 --> 00:04:46.406
and my items are still starting at the left hand side

104
00:04:46.406 --> 00:04:49.396
because my main axis starts from left to right.

105
00:04:49.396 --> 00:04:53.697
But they start at the bottom and go on up.

106
00:04:53.697 --> 00:04:55.337
I don't know, that's not something you

107
00:04:55.337 --> 00:04:59.324
probably will come across super often.

108
00:04:59.324 --> 00:05:00.705
Not likely you'll want to reverse your items,

109
00:05:00.705 --> 00:05:01.884
but if you have it you've got it.

110
00:05:01.884 --> 00:05:03.697
So going to bring that back to wrap,

111
00:05:03.697 --> 00:05:05.197
give it a refresh.

112
00:05:06.464 --> 00:05:09.139
I want to talk about filling in the space.

113
00:05:09.139 --> 00:05:12.220
This works similar to every other box model

114
00:05:12.220 --> 00:05:15.387
in that you can use 33.3333333 percent

115
00:05:18.112 --> 00:05:20.413
and give it a refresh and your items will go

116
00:05:20.413 --> 00:05:23.763
from one to three, one to three, one to three.

117
00:05:23.763 --> 00:05:28.763
What happens if I change my flex direction to column?

118
00:05:29.013 --> 00:05:30.701
Remember by default it is row.

119
00:05:30.701 --> 00:05:32.763
We're going to change it to column

120
00:05:32.763 --> 00:05:34.596
and give it a refresh.

121
00:05:36.213 --> 00:05:38.003
Well what happened there?

122
00:05:38.003 --> 00:05:40.963
One, two, three, four, five, six, seven, eight, nine, 10.

123
00:05:40.963 --> 00:05:42.792
What actually happened there,

124
00:05:42.792 --> 00:05:44.053
nevermind this white space,

125
00:05:44.053 --> 00:05:45.613
we'll learn about that in a future video,

126
00:05:45.613 --> 00:05:49.946
is that because we have this height 100vh set on it,

127
00:05:51.831 --> 00:05:55.202
again the height is just this golden rod border across,

128
00:05:55.202 --> 00:05:57.122
it reaches the bottom here.

129
00:05:57.122 --> 00:05:59.252
It can no longer fit in an eighth one.

130
00:05:59.252 --> 00:06:00.742
It says, "I'm outta space.

131
00:06:00.742 --> 00:06:04.271
"I need to wrap around vertically."

132
00:06:04.271 --> 00:06:06.252
Because we switched the main axis

133
00:06:06.252 --> 00:06:07.802
from going from left to right,

134
00:06:07.802 --> 00:06:10.471
which means that it would wrap from left to right,

135
00:06:10.471 --> 00:06:12.583
and now it hits the bottom and it's going to

136
00:06:12.583 --> 00:06:14.490
wrap again from the top there.

137
00:06:14.490 --> 00:06:17.202
If we took this height, or in some of the other videos

138
00:06:17.202 --> 00:06:18.732
I had a min height on there and refreshed,

139
00:06:18.732 --> 00:06:20.911
it goes all the way down.

140
00:06:20.911 --> 00:06:24.328
How come? Because it never needs to wrap.

141
00:06:25.231 --> 00:06:28.959
If we keep scrolling we've got all the space that we want.

142
00:06:28.959 --> 00:06:31.362
We could add 100 items and we'd be able

143
00:06:31.362 --> 00:06:33.779
to scroll from top to bottom.

144
00:06:35.562 --> 00:06:39.023
One last thing is, if I change this back to

145
00:06:39.023 --> 00:06:42.162
flex-direction:row or if I just

146
00:06:42.162 --> 00:06:44.399
take it off entirely since that's the default,

147
00:06:44.399 --> 00:06:47.502
and I go to the box and add the margin of

148
00:06:47.502 --> 00:06:49.223
let's say 10px and give it a refresh

149
00:06:49.223 --> 00:06:52.242
what happens is that it breaks.

150
00:06:52.242 --> 00:06:54.842
You may be familiar with this from

151
00:06:54.842 --> 00:06:57.583
your normal float space layout in that margin

152
00:06:57.583 --> 00:06:59.951
is not part of the box model,

153
00:06:59.951 --> 00:07:03.250
which means when I give it a width of

154
00:07:03.250 --> 00:07:05.852
33 percent plus 10px, that means I'm overbudget.

155
00:07:05.852 --> 00:07:08.660
It's 33 percent plus 10px on either side

156
00:07:08.660 --> 00:07:09.932
plus 10px on either side,

157
00:07:09.932 --> 00:07:12.258
it's gonna break onto the other side.

158
00:07:12.258 --> 00:07:14.509
If you really wanted to do that,

159
00:07:14.509 --> 00:07:16.351
you could do something like calc,

160
00:07:16.351 --> 00:07:17.652
it's a new thing in CSS.

161
00:07:17.652 --> 00:07:21.292
You could set the width to 33.3 percent

162
00:07:21.292 --> 00:07:25.540
minus 20 pixels because it's 10px on each side,

163
00:07:25.540 --> 00:07:27.303
and then that will actually go ahead and

164
00:07:27.303 --> 00:07:31.863
resize it to 33 percent minus the margin that you needed.

165
00:07:31.863 --> 00:07:35.485
If I change that back, the margin is broken.

166
00:07:35.485 --> 00:07:39.615
But if I use padding here, you see that it's fixed now,

167
00:07:39.615 --> 00:07:42.474
because padding, I use the box sizing

168
00:07:42.474 --> 00:07:44.974
border box padding and border.

169
00:07:47.474 --> 00:07:49.141
10px solid mistyrose

170
00:07:52.203 --> 00:07:55.074
Padding and border are part of the box model

171
00:07:55.074 --> 00:07:56.425
whereas margin is not.

172
00:07:56.425 --> 00:07:58.114
That is just something to keep in mind

173
00:07:58.114 --> 00:07:59.125
if you're ever having a break.

174
00:07:59.125 --> 00:08:00.245
That's it for this video.

175
00:08:00.245 --> 00:08:02.106
In the next one, we're going to take a look

176
00:08:02.106 --> 00:08:03.853
at reordering items in flex box,

177
00:08:03.853 --> 00:08:05.874
which is something that, instead of just putting

178
00:08:05.874 --> 00:08:07.935
all our flex properties on the flex wrapper,

179
00:08:07.935 --> 00:08:11.602
we are going to go on the flex item instead.

180
00:08:12.482 --> 00:08:15.321
(Cheerful whistling tune)

