WEBVTT

1
00:00:00.783 --> 00:00:04.116
(upbeat whistling tune)

2
00:00:12.450 --> 00:00:13.490
<v Wes>Next up we're gonna talk about</v>

3
00:00:13.490 --> 00:00:16.494
one called align-content, now two videos ago we

4
00:00:16.494 --> 00:00:19.400
looked at one called justify-content,

5
00:00:19.400 --> 00:00:22.790
and what align-content and justify-content essentially do

6
00:00:22.790 --> 00:00:25.887
is they say "Well, I got this extra space

7
00:00:25.887 --> 00:00:28.707
"which is the white space here, what do I do with it,

8
00:00:28.707 --> 00:00:31.100
"how do I divvy it up, who gets it, where does it go"

9
00:00:31.100 --> 00:00:32.550
and it answers all those questions

10
00:00:32.550 --> 00:00:36.840
so we talked about justify-content and we said something

11
00:00:36.840 --> 00:00:41.840
like space-between and give it a refresh and what happened

12
00:00:42.120 --> 00:00:44.720
there is it took that extra space which is on the right-hand

13
00:00:44.720 --> 00:00:48.430
side and it divvied it up in between, so essentially you can

14
00:00:48.430 --> 00:00:50.390
think of what happens to the extra space

15
00:00:50.390 --> 00:00:53.090
on the main axis left to right, this is the main axis.

16
00:00:55.030 --> 00:01:00.030
We've got another one, which is called align-content

17
00:01:00.810 --> 00:01:04.302
and it also takes the same parameters that justify-content,

18
00:01:04.302 --> 00:01:07.810
flex-start, flex-end, space-between et cetera et cetera.

19
00:01:07.810 --> 00:01:10.504
So, if we said that's a space-between and refresh,

20
00:01:10.504 --> 00:01:15.504
hmm it doesn't really do anything for us,

21
00:01:15.960 --> 00:01:18.500
so like what does that property even do

22
00:01:18.500 --> 00:01:21.005
if it doesn't actually make anything work,

23
00:01:21.005 --> 00:01:26.005
and if we think about justify-content taking the extra space

24
00:01:26.600 --> 00:01:30.620
on the main axis left to right,

25
00:01:30.620 --> 00:01:35.330
align-content takes the extra space on the cross axis

26
00:01:35.330 --> 00:01:38.540
top to bottom, and splits it up.

27
00:01:38.540 --> 00:01:41.350
So, what's our problem here, well we don't have any

28
00:01:41.350 --> 00:01:46.220
extra space on our vertical axis because by default

29
00:01:46.220 --> 00:01:48.940
the items are just going to stretch across.

30
00:01:48.940 --> 00:01:52.880
So align-content actually only works when we have

31
00:01:52.880 --> 00:01:56.370
multiple lines of code and what it's going to do

32
00:01:56.370 --> 00:01:59.045
is if we open this on up, it's gonna figure out

33
00:01:59.045 --> 00:02:02.390
what do I do with the extra space

34
00:02:02.390 --> 00:02:05.400
on the cross axis and the vertical one.

35
00:02:05.400 --> 00:02:07.770
Do we put it at the, some at the top, some at the bottom,

36
00:02:07.770 --> 00:02:10.600
do we put it in between each one individually,

37
00:02:10.600 --> 00:02:13.060
do we put them at the top or the bottom,

38
00:02:13.060 --> 00:02:16.060
so the first thing we need to do before we even get rolling

39
00:02:16.060 --> 00:02:18.412
with this align-content, just gonna comment that out,

40
00:02:18.412 --> 00:02:22.330
is actually get some wrapping, so how did we do that

41
00:02:22.330 --> 00:02:24.070
last time in one of the first videos,

42
00:02:24.070 --> 00:02:28.910
we took the box and we gave it a width of 33.33%,

43
00:02:28.910 --> 00:02:31.700
something like that, refresh, hmmm

44
00:02:33.140 --> 00:02:37.710
33%, that's not 33%, that's just, it figured it out,

45
00:02:37.710 --> 00:02:42.290
it just divvied it up individually, so how did we fix that,

46
00:02:42.290 --> 00:02:45.660
well on our flex container we did something called

47
00:02:45.660 --> 00:02:49.720
flex-wrap-wrap, and what that will do is it will actually

48
00:02:49.720 --> 00:02:52.626
give a true width to our flex items

49
00:02:52.626 --> 00:02:55.910
and it will allow us to wrap it around.

50
00:02:55.910 --> 00:02:59.950
So, align-content by default, just like justify-content,

51
00:02:59.950 --> 00:03:04.079
the default is something called align-content-stretch,

52
00:03:04.079 --> 00:03:07.120
so you can see that right now,

53
00:03:07.120 --> 00:03:09.450
the items are just stretching, it's figuring out that

54
00:03:09.450 --> 00:03:13.430
we need four rows and we've got all the space of my browser

55
00:03:13.430 --> 00:03:16.670
vertically here, so just divvy it up, stretch them across,

56
00:03:16.670 --> 00:03:20.170
give each of them kind of like a 25% height,

57
00:03:20.170 --> 00:03:24.410
so that's the default which is something called stretch.

58
00:03:24.410 --> 00:03:26.383
Now I could show you real quick,

59
00:03:26.383 --> 00:03:30.370
I make that stretch, refresh, nothing happens.

60
00:03:30.370 --> 00:03:32.340
So, let's look at the other ones that are

61
00:03:32.340 --> 00:03:35.250
available to us, we've got flex-start

62
00:03:38.580 --> 00:03:39.890
and all that's gonna do is now

63
00:03:39.890 --> 00:03:41.850
the height of them is no longer stretch,

64
00:03:41.850 --> 00:03:43.410
the height of them is how high are they,

65
00:03:43.410 --> 00:03:46.040
they're just taking however much height

66
00:03:46.040 --> 00:03:50.070
they could possibly need which is 1, 2, 3, 4, 5, 6, right?

67
00:03:50.070 --> 00:03:52.420
And one kind of a size is, doesn't really have to do with it

68
00:03:52.420 --> 00:03:55.350
but it's kinda interesting, if I took this 2,

69
00:03:55.350 --> 00:03:58.510
and added a BR and I just did like a happy face,

70
00:03:58.510 --> 00:04:03.320
you'll see that 2 needs extra room here so everything

71
00:04:03.320 --> 00:04:07.870
that is on the same line as 2 is going to stretch

72
00:04:07.870 --> 00:04:10.410
to be the same height which is super handy,

73
00:04:10.410 --> 00:04:12.870
lot of times you get these javascript hacks to make sure

74
00:04:12.870 --> 00:04:15.500
that your columns right here are the same size

75
00:04:15.500 --> 00:04:18.870
as the others, let's just bring that back to where we were.

76
00:04:18.870 --> 00:04:21.320
Now, we've got all of this extra room right here,

77
00:04:21.320 --> 00:04:24.820
so right here, we're only worried about the cross axis

78
00:04:24.820 --> 00:04:27.010
which is top to bottom, we got all this extra room

79
00:04:27.010 --> 00:04:29.150
right here, what do we do with it?

80
00:04:29.150 --> 00:04:31.530 line:15% 
We could do flex-end, put the extra room

81
00:04:31.530 --> 00:04:33.520 line:15% 
at the top because you start the items

82
00:04:33.520 --> 00:04:36.520 line:15% 
at the bottom, we could do space-between

83
00:04:38.810 --> 00:04:42.070
which will put them in between each row,

84
00:04:42.070 --> 00:04:44.350
what else, we have space-around

85
00:04:47.910 --> 00:04:49.720
and that will put it on the top

86
00:04:49.720 --> 00:04:51.670
and in between each one, we talked about this

87
00:04:51.670 --> 00:04:53.010
in the other, and then finally

88
00:04:53.010 --> 00:04:57.430
we also have center which, again, if you are doing

89
00:04:57.430 --> 00:05:00.610
a row-based layout and you want to vertically center items,

90
00:05:00.610 --> 00:05:03.600
this is exactly what you want, you want to be able to say

91
00:05:03.600 --> 00:05:07.720
this is how big my container is, and I want you to just

92
00:05:07.720 --> 00:05:11.550
center them vertically inside of that.

93
00:05:11.550 --> 00:05:13.710
One other thing we want to maybe do here,

94
00:05:13.710 --> 00:05:16.210
is this little straggler here 10, what if we want to align

95
00:05:16.210 --> 00:05:19.457
that in the center, now you might think like "Oh, I'll use

96
00:05:19.457 --> 00:05:22.510
"text-align-center on the wrapper, and maybe that will work"

97
00:05:22.510 --> 00:05:25.937
So, text-align-center, put that on there, refresh,

98
00:05:25.937 --> 00:05:29.380
it doesn't actually get the 10 to go in the middle,

99
00:05:29.380 --> 00:05:31.510
so one thing we can do is, well, think back

100
00:05:31.510 --> 00:05:35.760
to two videos ago, we can also use justify-content,

101
00:05:35.760 --> 00:05:40.760
and again, justify-content is the main axis left to right,

102
00:05:41.090 --> 00:05:44.700
and align-content is the cross axis top to bottom,

103
00:05:44.700 --> 00:05:47.720
we can also just set justify-content to center

104
00:05:47.720 --> 00:05:48.900
and then we got it perfectly centered,

105
00:05:48.900 --> 00:05:52.763
it's centered both horizontally as well as vertically.

106
00:05:53.630 --> 00:05:56.420
So, that's align-content, again make sure that you remember

107
00:05:56.420 --> 00:06:00.280
the two important things, that you first need some sort of

108
00:06:00.280 --> 00:06:02.996
wrap otherwise it doesn't take effect.

109
00:06:02.996 --> 00:06:06.306
And then the other thing is that we are only concerned

110
00:06:06.306 --> 00:06:10.560
with the cross axis, which by default is top to bottom

111
00:06:10.560 --> 00:06:12.904
unless we use flex direction to change that.

112
00:06:12.904 --> 00:06:14.955
Alright, well see you in the next ones.

113
00:06:14.955 --> 00:06:16.680
We're going to be taking a look

114
00:06:16.680 --> 00:06:18.690
at the next one which is align-self.

115
00:06:18.690 --> 00:06:22.480
So, so far we've been doing these container ones

116
00:06:22.480 --> 00:06:25.320
where all of them just follow, but what happens if we want

117
00:06:25.320 --> 00:06:28.530
just one of them to sort of override the default,

118
00:06:28.530 --> 00:06:30.990
so we're gonna be going from our flex container

119
00:06:30.990 --> 00:06:33.820
into our flex item, and applying some styles there.

120
00:06:33.820 --> 00:06:34.687
See you then!

121
00:06:34.687 --> 00:06:37.401
(upbeat whistling tune)

