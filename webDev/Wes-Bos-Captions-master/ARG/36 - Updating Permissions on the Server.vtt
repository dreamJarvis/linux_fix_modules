WEBVTT

1
00:00:02.920 --> 00:00:05.080
<v Instructor>Alright, before we even get into doing</v>

2
00:00:05.080 --> 00:00:06.811
the backend stuff, something I just noticed here

3
00:00:06.811 --> 00:00:08.120
and this is, like it bugs me a lot,

4
00:00:08.120 --> 00:00:11.260
is when you can't like click anywhere around it

5
00:00:11.260 --> 00:00:14.210
and you have to actually click the little check box itself,

6
00:00:14.210 --> 00:00:15.043
that's really annoying.

7
00:00:15.043 --> 00:00:19.920
And the reason why I put a label around the input

8
00:00:19.920 --> 00:00:22.370
is so that we can make that label as big as possible

9
00:00:22.370 --> 00:00:23.203
and then you should be able

10
00:00:23.203 --> 00:00:24.760
to click anywhere inside of here.

11
00:00:24.760 --> 00:00:27.170
So let's go fix that real quick.

12
00:00:27.170 --> 00:00:30.990
If you open up the table dot js styled component

13
00:00:30.990 --> 00:00:33.550
and let's go ahead and write a new selector for labels

14
00:00:33.550 --> 00:00:37.670
that are only inside of the td, so right here,

15
00:00:37.670 --> 00:00:40.710
we'll say label and let's just say background red

16
00:00:40.710 --> 00:00:43.270
just to see what we're working with, good.

17
00:00:43.270 --> 00:00:46.270
And then we wanna display block on them

18
00:00:46.270 --> 00:00:49.020
because we want them to go as wide as possible, good.

19
00:00:49.020 --> 00:00:52.430
And now if I click on a label it's still not working.

20
00:00:52.430 --> 00:00:55.250
Let's open up our capital P, Permissions

21
00:00:55.250 --> 00:00:57.943
and see if we've got everything lined up properly.

22
00:00:59.230 --> 00:01:01.160
We've got this label here

23
00:01:01.160 --> 00:01:02.850
and we've got the input.

24
00:01:02.850 --> 00:01:05.653
So the thing we're missing is an id

25
00:01:05.653 --> 00:01:07.830
that is matched with this For,

26
00:01:07.830 --> 00:01:10.330
so actually just take the labels htmlFor

27
00:01:10.330 --> 00:01:13.350
and all of this and then go to your input,

28
00:01:13.350 --> 00:01:15.833
paste it in, and change that to an id.

29
00:01:21.140 --> 00:01:22.537
And now that allows us to click the label.

30
00:01:22.537 --> 00:01:24.430
And the reason why that works

31
00:01:24.430 --> 00:01:28.380
is because if you have an id that matches a labels,

32
00:01:28.380 --> 00:01:31.160
or sorry, if you have a labels For attribute

33
00:01:31.160 --> 00:01:33.810
that matches and inputs id,

34
00:01:33.810 --> 00:01:35.840
then you can click the label and check

35
00:01:35.840 --> 00:01:39.610
the associated input and that's really what I like.

36
00:01:39.610 --> 00:01:42.407
I hate it when websites don't have that, so that's good.

37
00:01:42.407 --> 00:01:44.080
The second thing is it's not stretching

38
00:01:44.080 --> 00:01:46.930
the entire height of this and that's because

39
00:01:46.930 --> 00:01:50.460
there is padding on the td.

40
00:01:50.460 --> 00:01:53.540
So what we need to do is take the padding off the td,

41
00:01:53.540 --> 00:01:58.540
it's this one right here, and then go to the label,

42
00:01:59.690 --> 00:02:01.990
actually let's just move it down to the label.

43
00:02:03.550 --> 00:02:04.383
And we should get, there we go,

44
00:02:04.383 --> 00:02:07.810
we got the same amount that we're working with here.

45
00:02:07.810 --> 00:02:09.570
It looks like we're butting up a little bit here

46
00:02:09.570 --> 00:02:12.310
so let's just put a little bit of padding on this one,

47
00:02:12.310 --> 00:02:15.590
maybe 5px, so it's not looking like too much garbage.

48
00:02:15.590 --> 00:02:18.550
Beautiful, we take the ugly red off,

49
00:02:18.550 --> 00:02:20.360
actually it's the same red I'm using everywhere else

50
00:02:20.360 --> 00:02:23.380
so not that ugly, and it looks good.

51
00:02:23.380 --> 00:02:25.480
So that's what we wanted to do, just a little bit

52
00:02:25.480 --> 00:02:26.410
of a fix there.

53
00:02:26.410 --> 00:02:29.490
Jump into the style component, close everything out.

54
00:02:29.490 --> 00:02:32.070
Now let's start with what this video's actually about

55
00:02:32.070 --> 00:02:37.070
and what I'd like to do is to code the backend up for this.

56
00:02:37.510 --> 00:02:40.340
So let's flip over to the backend, just purple,

57
00:02:40.340 --> 00:02:42.990
and the first thing we wanna do is open up our schema

58
00:02:44.130 --> 00:02:48.380
and go down to our Mutations and add in a new Mutation,

59
00:02:48.380 --> 00:02:51.440
that's called, updatePermissions.

60
00:02:51.440 --> 00:02:54.740
That will take in an array of permissions

61
00:02:54.740 --> 00:02:58.150
which the type of that is an array of the Permission,

62
00:02:58.150 --> 00:03:00.420
because this is a custom-type of Permission.

63
00:03:00.420 --> 00:03:02.840
If we look at our data model you'll see

64
00:03:02.840 --> 00:03:04.900
that we created this custom-type right here,

65
00:03:04.900 --> 00:03:07.070
which is the enum, and again this makes sure

66
00:03:07.070 --> 00:03:10.920
that someone is only able to set these values

67
00:03:10.920 --> 00:03:13.760
and no other values that they just made up willy-nilly.

68
00:03:13.760 --> 00:03:16.080
So if you wanna add an additional Permission,

69
00:03:16.080 --> 00:03:17.790
you both need to add it in this enum

70
00:03:17.790 --> 00:03:20.270
as well as in the script file

71
00:03:20.270 --> 00:03:22.410
that we were working on previously.

72
00:03:22.410 --> 00:03:24.540
We also need to pass a userId

73
00:03:24.540 --> 00:03:26.650
which is going to be a type of ID,

74
00:03:26.650 --> 00:03:29.370
and that is required, so put a bang on the end there,

75
00:03:29.370 --> 00:03:32.783
and from that we are just going to return the User.

76
00:03:33.980 --> 00:03:36.660
So that's good and anytime we add our schema

77
00:03:36.660 --> 00:03:40.010
we need to open up our Mutation and code a resolver

78
00:03:40.010 --> 00:03:40.990
that matches that.

79
00:03:40.990 --> 00:03:42.640
So let's go down to the bottom here,

80
00:03:42.640 --> 00:03:45.700
crate a new resolver called, updatePermissions,

81
00:03:45.700 --> 00:03:50.010
do our whole song and dance, parent, args, context,

82
00:03:50.010 --> 00:03:52.530
and info, we'll mark that as async.

83
00:03:52.530 --> 00:03:53.980
And we're gonna do a couple things here.

84
00:03:53.980 --> 00:03:56.700
First Query the current user.

85
00:03:56.700 --> 00:04:01.700
Actually first we should, check if they are logged in.

86
00:04:01.710 --> 00:04:05.660
Second, Query the current user.

87
00:04:05.660 --> 00:04:10.660
Third, Check if they have permissions to do this.

88
00:04:12.230 --> 00:04:15.463
And then four, Update the permissions.

89
00:04:17.680 --> 00:04:19.230
So first, Check if they are logged in,

90
00:04:19.230 --> 00:04:23.633
if there's no context dot request dot userId

91
00:04:25.860 --> 00:04:30.373
throw a new Error, You must be logged in.

92
00:04:31.600 --> 00:04:33.307
Second, Query the current user so it's a,

93
00:04:33.307 --> 00:04:37.170
const currentUser is equal to

94
00:04:37.170 --> 00:04:42.170
await ctx dot db dot query dot user.

95
00:04:42.490 --> 00:04:45.113
We wanna query the current user, where,

96
00:04:46.710 --> 00:04:49.790
the id is equal to, the current id,

97
00:04:49.790 --> 00:04:54.370
so ctx dot request dot userId,

98
00:04:54.370 --> 00:04:58.360
and then this query also needs to pass along the info,

99
00:04:58.360 --> 00:05:01.080
then check if they have Permissions to do so,

100
00:05:01.080 --> 00:05:04.462
so, hasPermission currentUser, pass the current user,

101
00:05:04.462 --> 00:05:07.800
pass an aray of possible Permissions that we're looking for.

102
00:05:07.800 --> 00:05:09.860
So we're looking for either ADMIN

103
00:05:09.860 --> 00:05:11.847
or PERMISSIONUPDATE

104
00:05:17.750 --> 00:05:19.130
and then that will throw an error

105
00:05:19.130 --> 00:05:19.963
if no one has it.

106
00:05:19.963 --> 00:05:22.330
Oh, we don't have this, hasPermission imported yet.

107
00:05:22.330 --> 00:05:23.810
We did that in the query.

108
00:05:23.810 --> 00:05:26.580
Let's just open up the query resolver real quick

109
00:05:26.580 --> 00:05:29.560
and grab that import, pop it at the top

110
00:05:29.560 --> 00:05:32.423
of our imports in here.

111
00:05:33.630 --> 00:05:35.700
We'll go back down and then finally

112
00:05:35.700 --> 00:05:37.150
we need to update the Permission.

113
00:05:37.150 --> 00:05:40.220
So we could either do the updated Permission

114
00:05:40.220 --> 00:05:42.090
then return the user or, as you know,

115
00:05:42.090 --> 00:05:45.760
we can also just return the query from this resolver

116
00:05:45.760 --> 00:05:47.310
and that will work as well.

117
00:05:47.310 --> 00:05:48.800
So we're gonna, return

118
00:05:48.800 --> 00:05:53.800
the context dot database dot mutation dot updateUser

119
00:05:53.930 --> 00:05:56.470
and that's the Prisma surfaced

120
00:05:56.470 --> 00:05:58.470
update user method that we have.

121
00:05:58.470 --> 00:06:02.280
And from that we need to pass a couple of things.

122
00:06:02.280 --> 00:06:05.550
First we wanna pass the, data that needs to be updated,

123
00:06:05.550 --> 00:06:07.380
and second we wanna pass the,

124
00:06:07.380 --> 00:06:09.760
where the data needs to be updated.

125
00:06:09.760 --> 00:06:12.720
And third we wanna pass, the info of the query

126
00:06:12.720 --> 00:06:14.060
to the updated user.

127
00:06:14.060 --> 00:06:17.240
So first what data needs to be set?

128
00:06:17.240 --> 00:06:19.711
Well, the permissions needs to be set

129
00:06:19.711 --> 00:06:22.070
to the updated permissions

130
00:06:22.070 --> 00:06:26.100
and that's coming in via the arguments of this request.

131
00:06:26.100 --> 00:06:27.470
So normally I think you just say,

132
00:06:27.470 --> 00:06:28.960
args dot permissions,

133
00:06:28.960 --> 00:06:32.150
but because permissions is it's own enum,

134
00:06:32.150 --> 00:06:36.200
we have to use this set syntax that comes along with Prisma.

135
00:06:36.200 --> 00:06:40.143
So say, permissions, set args dot permissions.

136
00:06:42.850 --> 00:06:44.083
So far so good.

137
00:06:44.920 --> 00:06:46.450
Then we'll go into here, where,

138
00:06:46.450 --> 00:06:50.190
the id is equal to the args dot userID,

139
00:06:50.190 --> 00:06:51.820
and the reason why I'm not using

140
00:06:51.820 --> 00:06:54.090
context that requests that userID

141
00:06:54.090 --> 00:06:56.790
is because we might not necessarily be updating

142
00:06:56.790 --> 00:07:00.260
our own user, we might be updating someone else.

143
00:07:00.260 --> 00:07:03.880
So we have to pass the userID along for the ride

144
00:07:03.880 --> 00:07:07.060
along with the permissions.

145
00:07:07.060 --> 00:07:10.100
And that seems to have worked.

146
00:07:10.100 --> 00:07:12.410
So go over to the client side and now write

147
00:07:12.410 --> 00:07:15.090
a Mutation that will fire as soon as you click

148
00:07:15.090 --> 00:07:16.460
on this UPDATE button.

149
00:07:16.460 --> 00:07:18.170
So I'll flip over to the front end,

150
00:07:18.170 --> 00:07:21.380
open up your capital P, Permission component.

151
00:07:21.380 --> 00:07:23.560
And let's head up to the top here.

152
00:07:23.560 --> 00:07:26.090
Right below this possiblePermissions,

153
00:07:26.090 --> 00:07:28.550
either above or below the All USERS QUERY,

154
00:07:28.550 --> 00:07:31.023
we're gonna write our graph ql mutation.

155
00:07:32.256 --> 00:07:36.637
Const UPDATE PERMISSIONS MUTATION is equal to gql.

156
00:07:39.410 --> 00:07:42.240
Let's double check that we've imported that,

157
00:07:42.240 --> 00:07:43.283
yes we have.

158
00:07:48.090 --> 00:07:49.170
Then it's out of that we'll write

159
00:07:49.170 --> 00:07:52.033
a Mutation called updatePermissions,

160
00:07:53.390 --> 00:07:56.570
takes in one argument which is permissions,

161
00:07:56.570 --> 00:07:58.603
and that is an array of Permission.

162
00:08:02.690 --> 00:08:05.320
Also takes in a userId, 'cause it's just like

163
00:08:05.320 --> 00:08:07.663
we were in our schema that has an ID.

164
00:08:09.760 --> 00:08:11.440
That will in turn run the function called,

165
00:08:11.440 --> 00:08:15.593
updatePermissions, or a pass the permissions.

166
00:08:16.700 --> 00:08:18.420
I'm gonna say permissions again

167
00:08:20.950 --> 00:08:25.917
and we pass the userId as the userId.

168
00:08:27.260 --> 00:08:29.450
And from that we wanna return the id,

169
00:08:29.450 --> 00:08:32.693
the permissions, the name, and the email.

170
00:08:33.900 --> 00:08:37.180
So that is our Mutation that we have here.

171
00:08:37.180 --> 00:08:38.477
We're now gonna take this Mutation

172
00:08:38.477 --> 00:08:40.400
and we're gonna import the Mutation component

173
00:08:40.400 --> 00:08:41.250
from react apollo

174
00:08:44.370 --> 00:08:47.170
and then we need to inject this Mutation

175
00:08:47.170 --> 00:08:50.040
into our user component.

176
00:08:50.040 --> 00:08:54.680
So go down here to our render of the user component,

177
00:08:54.680 --> 00:08:56.860
right now we're just wrapping a tr,

178
00:08:56.860 --> 00:09:00.290
so we'll go and wrap it even further.

179
00:09:00.290 --> 00:09:05.223
Say Mutation, the mutation is going to be,

180
00:09:06.250 --> 00:09:08.290
the UPDATE PERMISSIONS MUTATION.

181
00:09:08.290 --> 00:09:10.760
And the variables for this one, again,

182
00:09:10.760 --> 00:09:12.320
you can either pass the variables

183
00:09:12.320 --> 00:09:13.680
into the Mutation component

184
00:09:13.680 --> 00:09:15.820
or you can pass them at the time of calling.

185
00:09:15.820 --> 00:09:18.090
If I can, if I do know the data

186
00:09:18.090 --> 00:09:19.550
at the time of authoring,

187
00:09:19.550 --> 00:09:23.290
I will always pass it as a prop on Mutation,

188
00:09:23.290 --> 00:09:25.960
otherwise you can pass it at the time of calling.

189
00:09:25.960 --> 00:09:27.490
So the variables that we're gonna pass,

190
00:09:27.490 --> 00:09:29.010
it's an object literal here,

191
00:09:29.010 --> 00:09:31.820
the permissions is gonna be

192
00:09:31.820 --> 00:09:34.343
equal to this dot state dot permissions,

193
00:09:35.590 --> 00:09:37.130
and the userId is equal to,

194
00:09:37.130 --> 00:09:40.393
this dot props dot user dot id.

195
00:09:41.380 --> 00:09:42.580
Let's go inside this Mutation

196
00:09:42.580 --> 00:09:44.410
and write our little arrow function of death

197
00:09:44.410 --> 00:09:45.510
that we have here.

198
00:09:45.510 --> 00:09:48.173
So, that's an arrow function.

199
00:09:50.140 --> 00:09:52.730
And inside of that arrow function the first argument is,

200
00:09:52.730 --> 00:09:55.500
updatePermisisons, that's not destructured,

201
00:09:55.500 --> 00:09:59.610
but the second argument is destructured into,

202
00:09:59.610 --> 00:10:01.463
loading and error.

203
00:10:03.090 --> 00:10:06.850
Then you can take this closing of your implicit return

204
00:10:06.850 --> 00:10:08.750
and the closing Mutation.

205
00:10:08.750 --> 00:10:10.690
We'll go for a little bit of a ride,

206
00:10:10.690 --> 00:10:11.523
doot, doot, doot, doot, doot, doot, do.

207
00:10:13.170 --> 00:10:14.143
Give it a save.

208
00:10:16.420 --> 00:10:17.850
Everything is fixed here.

209
00:10:17.850 --> 00:10:22.457
Now we've exposed this function here,

210
00:10:24.630 --> 00:10:25.931
that should not be called updated,

211
00:10:25.931 --> 00:10:27.863
it should be called updatePermissions.

212
00:10:29.430 --> 00:10:33.640
Now we can run this function on our Button click.

213
00:10:33.640 --> 00:10:35.613
So go down to the SickButton,

214
00:10:38.150 --> 00:10:40.313
give it a type of button.

215
00:10:43.160 --> 00:10:48.160
We'll say it's disabled if we are currently loading,

216
00:10:48.270 --> 00:10:49.250
'cause you don't want someone to be able

217
00:10:49.250 --> 00:10:50.390
to click it multiple times.

218
00:10:50.390 --> 00:10:53.640
So if someone fires off a request,

219
00:10:53.640 --> 00:10:56.390
loading will turn true and that will in turn

220
00:10:56.390 --> 00:10:59.653
disable the SickButton from being clicked a second time.

221
00:11:00.570 --> 00:11:05.570
And then onClick, we can simply say, updatePermisisons.

222
00:11:06.280 --> 00:11:09.790
I don't think that we need to an inline function here

223
00:11:09.790 --> 00:11:12.470
where we pass the event, like we've previously done,

224
00:11:12.470 --> 00:11:15.580
because we don't need to event dot, prevent default here.

225
00:11:15.580 --> 00:11:19.100
We can just run that updatePermissions.

226
00:11:19.100 --> 00:11:22.050
Now here's what we've all been waiting for.

227
00:11:22.050 --> 00:11:23.590
Let's open up our Console,

228
00:11:23.590 --> 00:11:25.963
click on ITEMCREATE, UPDATE.

229
00:11:27.474 --> 00:11:28.307
We've got a bit of an Error.

230
00:11:28.307 --> 00:11:30.810
And this is actually because, well actually

231
00:11:30.810 --> 00:11:31.980
I don't know why it's happening

232
00:11:31.980 --> 00:11:33.380
but it's, it's giving, you know,

233
00:11:33.380 --> 00:11:35.580
like this very vague Error, Network error,

234
00:11:35.580 --> 00:11:37.340
Response not successful.

235
00:11:37.340 --> 00:11:39.000
And there's two ways we should do this.

236
00:11:39.000 --> 00:11:41.220
First you should actually be displaying this to the user

237
00:11:41.220 --> 00:11:43.610
so that you can tell them what went wrong,

238
00:11:43.610 --> 00:11:46.600
but second if you ever see these like weird 400 errors,

239
00:11:46.600 --> 00:11:48.290
you can always go to your Network tab

240
00:11:48.290 --> 00:11:52.480
and find the 400ed request and that will actually give you

241
00:11:52.480 --> 00:11:54.390
the error message that we have there.

242
00:11:54.390 --> 00:11:57.940
But let's actually go ahead and fix this first of all.

243
00:11:57.940 --> 00:12:00.680
So we have this updatedPermissions,

244
00:12:00.680 --> 00:12:05.140
what we can do is if we have an error,

245
00:12:05.140 --> 00:12:08.083
then we can simply render out the error component,

246
00:12:09.190 --> 00:12:11.493
otherwise, or we can use &amp;&amp; here.

247
00:12:14.450 --> 00:12:16.870
Then because these are two siblings we need

248
00:12:16.870 --> 00:12:19.460
to wrap them in a react fragment

249
00:12:23.950 --> 00:12:27.560
and that'll allow us to return to sibling elements.

250
00:12:27.560 --> 00:12:30.810
So only if we have an error we need

251
00:12:30.810 --> 00:12:33.350
to return actually a table row

252
00:12:34.970 --> 00:12:38.853
with an error inside of it.

253
00:12:39.830 --> 00:12:41.620
That should look pretty good.

254
00:12:41.620 --> 00:12:43.490
Let's UPDATE, there we go.

255
00:12:43.490 --> 00:12:44.823
Shoot Cannot query.

256
00:12:46.970 --> 00:12:49.620
Probably also wanna pass a td in there

257
00:12:56.620 --> 00:13:00.240
with a colspan of 3 or 4 or 8.

258
00:13:04.410 --> 00:13:05.243
There we go.

259
00:13:05.243 --> 00:13:07.710
So every time you, if any of these goof up

260
00:13:07.710 --> 00:13:09.770
you're gonna get a little error that goes above it.

261
00:13:09.770 --> 00:13:12.410
So now let's focus on what is the actual error.

262
00:13:12.410 --> 00:13:15.920
Shoot Cannot query field, updatedPermissions,

263
00:13:15.920 --> 00:13:20.484
on type Mutation, did you mean, updatePermissions?

264
00:13:20.484 --> 00:13:23.290
Ah, okay, so where did we goof that up?

265
00:13:23.290 --> 00:13:27.170
Ah, I said, updatedPermissions, it's updatePermissions,

266
00:13:27.170 --> 00:13:30.100
and same with this one, it's updatePermisisons,

267
00:13:30.100 --> 00:13:30.933
give it a save.

268
00:13:30.933 --> 00:13:32.020
This is the one that actually really matters.

269
00:13:32.020 --> 00:13:35.610
This is just the name that we're naming it client side.

270
00:13:35.610 --> 00:13:38.557
So I bet, let's give it a good refresh here

271
00:13:38.557 --> 00:13:42.630
in order to add some new values, UPDATE,

272
00:13:42.630 --> 00:13:43.463
and it worked.

273
00:13:43.463 --> 00:13:46.290
You see that, it just temporarily goes blank there.

274
00:13:46.290 --> 00:13:48.020
We can do a little bit better then that.

275
00:13:48.020 --> 00:13:50.290
And go down to our SickButton,

276
00:13:50.290 --> 00:13:53.120
so remove the E off that, and we'll say,

277
00:13:53.120 --> 00:13:56.950
if it's loading then give ourselves an I-N-G,

278
00:13:56.950 --> 00:13:58.623
otherwise gives ourselves an E.

279
00:14:02.010 --> 00:14:04.073
Ah, look how awesome that is.

280
00:14:06.080 --> 00:14:09.760
So let's check now, if I were to add

281
00:14:09.760 --> 00:14:13.133
some of these values here, and refresh,

282
00:14:14.560 --> 00:14:15.700
they'd, they stay there.

283
00:14:15.700 --> 00:14:18.100
They're going into the database now

284
00:14:18.100 --> 00:14:22.930
because if I were to UPDATE it, they stay there.

285
00:14:22.930 --> 00:14:24.450
They are going into the database,

286
00:14:24.450 --> 00:14:26.410
'cause I do a quick refresh,

287
00:14:26.410 --> 00:14:27.990
all the values are still there.

288
00:14:27.990 --> 00:14:31.340
So that is our whole kinda circle of Permissions,

289
00:14:31.340 --> 00:14:34.260
not the easiest thing to do, but what I find

290
00:14:34.260 --> 00:14:35.930
with these things is once you have coded

291
00:14:35.930 --> 00:14:38.950
your first Permission system you can move that,

292
00:14:38.950 --> 00:14:41.510
those ideas, and even the code, to a whole bunch

293
00:14:41.510 --> 00:14:44.840
of other ones and even this whole Permissions component

294
00:14:44.840 --> 00:14:47.120
would be fairly easy to move from project to project.

295
00:14:47.120 --> 00:14:48.860
So, one last thing I wanna show you

296
00:14:48.860 --> 00:14:51.790
is something that I actually stumble upon all the time

297
00:14:51.790 --> 00:14:54.190
and what if you wanted to call

298
00:14:54.190 --> 00:14:57.460
this updatePermissions function inside of

299
00:14:57.460 --> 00:14:59.740
the onChange handler meaning that

300
00:14:59.740 --> 00:15:01.680
after we actually do it every single time

301
00:15:01.680 --> 00:15:02.950
that we make a change maybe

302
00:15:02.950 --> 00:15:04.610
it should just update automatically

303
00:15:04.610 --> 00:15:07.100
so we don't have to remember to click the UPDATE button,

304
00:15:07.100 --> 00:15:08.950
'cause that could be a potential issue.

305
00:15:08.950 --> 00:15:11.070
So I was like, oh, that' super easy right?

306
00:15:11.070 --> 00:15:14.035
You just have to call this, updatePermissions function

307
00:15:14.035 --> 00:15:19.035
inside of our hand, oh, how do you get

308
00:15:19.830 --> 00:15:22.240
one of these functions,

309
00:15:22.240 --> 00:15:25.250
like that is exposed via our Mutation,

310
00:15:25.250 --> 00:15:27.370
like how do you get that outside, right?

311
00:15:27.370 --> 00:15:31.200
Because if it's being exposed by this render prop,

312
00:15:31.200 --> 00:15:33.800
you can't do a render prop inside of here,

313
00:15:33.800 --> 00:15:36.890
and I think this is a bit of a downside to render props,

314
00:15:36.890 --> 00:15:38.610
but I'm gonna show you how to do it anyway.

315
00:15:38.610 --> 00:15:43.410
So the way that it would work is you change this,

316
00:15:43.410 --> 00:15:45.360
onChange, you don't have to do this,

317
00:15:45.360 --> 00:15:47.540
I'm gonna revert it for the end of this video,

318
00:15:47.540 --> 00:15:49.210
but the way that you can do it

319
00:15:49.210 --> 00:15:53.693
is you can run an inline function that passes the event,

320
00:15:54.890 --> 00:15:58.600
and then you run the, this dot handlePermissionChange

321
00:15:58.600 --> 00:16:00.270
and pass the event, but then you,

322
00:16:00.270 --> 00:16:04.240
as a second argument, you can also pass the function

323
00:16:04.240 --> 00:16:05.290
that you wish to call.

324
00:16:05.290 --> 00:16:08.267
So that's called, updatePermissions,

325
00:16:09.520 --> 00:16:10.900
and I give that a save.

326
00:16:10.900 --> 00:16:14.900
Then we can go up to our handlePermissionChange function

327
00:16:14.900 --> 00:16:18.260
and change it so that it takes in the event, of course,

328
00:16:18.260 --> 00:16:21.890
but also takes in the updatePermissions,

329
00:16:21.890 --> 00:16:25.750
man, I don't like this update and updatedPermissions,

330
00:16:25.750 --> 00:16:27.200
it's too close to each other.

331
00:16:27.200 --> 00:16:29.330
But now we have access to this function

332
00:16:29.330 --> 00:16:31.670
that was exposed via the render prop

333
00:16:31.670 --> 00:16:34.690
and then the last thing we can do, after we set state,

334
00:16:34.690 --> 00:16:36.330
is that we can just simply call

335
00:16:36.330 --> 00:16:39.150
the updatePermissions function a manual error

336
00:16:39.150 --> 00:16:41.140
or inside of this, this thing here.

337
00:16:41.140 --> 00:16:43.770
So that should now allow us every single time

338
00:16:43.770 --> 00:16:44.950
that I change one of these,

339
00:16:44.950 --> 00:16:47.760
you see that it just flips to the updating state

340
00:16:47.760 --> 00:16:48.780
without us having to.

341
00:16:48.780 --> 00:16:50.390
We can still manually update it ourselves

342
00:16:50.390 --> 00:16:51.510
by clicking the button,

343
00:16:51.510 --> 00:16:53.653
but it will also trigger that for us, so.

344
00:16:55.690 --> 00:16:57.010
Let me just cut in here real quick

345
00:16:57.010 --> 00:16:59.770
with a little, I guess a little lesson on this.

346
00:16:59.770 --> 00:17:01.710
And what's happening here is that we're running

347
00:17:01.710 --> 00:17:04.100
updatePermissions, if you chose to go this way,

348
00:17:04.100 --> 00:17:07.710
and that is using the variables that come from State.

349
00:17:07.710 --> 00:17:09.940
And we're assuming that it's gonna work here because

350
00:17:09.940 --> 00:17:10.920
we're calling setState

351
00:17:10.920 --> 00:17:13.130
and then we're running updatePermissions.

352
00:17:13.130 --> 00:17:15.180
However, that's not always guaranteed

353
00:17:15.180 --> 00:17:17.350
and that's because setState is actually

354
00:17:17.350 --> 00:17:19.530
an asynchronous function, meaning that,

355
00:17:19.530 --> 00:17:22.290
it's going to go off and update State for us,

356
00:17:22.290 --> 00:17:24.250
but the reason why we use setState

357
00:17:24.250 --> 00:17:25.720
is because React is going to figure out

358
00:17:25.720 --> 00:17:28.020
when it should best update State and there is

359
00:17:28.020 --> 00:17:31.811
a slight chance that you have this setState

360
00:17:31.811 --> 00:17:34.940
that gets called and then updatePermission gets called,

361
00:17:34.940 --> 00:17:37.560
but this is going to run before updating State

362
00:17:37.560 --> 00:17:38.810
is actually finished.

363
00:17:38.810 --> 00:17:40.769
So if you ever run into an issue where

364
00:17:40.769 --> 00:17:43.430
you're trying to run a function here,

365
00:17:43.430 --> 00:17:46.990
but State isn't updated yet, that's because setState

366
00:17:46.990 --> 00:17:49.370
is still sort of running in the background asynchronously.

367
00:17:49.370 --> 00:17:51.680
So that is, the solution to that is,

368
00:17:51.680 --> 00:17:53.670
you use what's called a call back function

369
00:17:53.670 --> 00:17:55.990
inside of setState that will be called

370
00:17:55.990 --> 00:17:57.930
when State has actually been updated.

371
00:17:57.930 --> 00:17:59.930
Now very rarely do you run into this,

372
00:17:59.930 --> 00:18:01.860
but if you do in this case, the way that it works

373
00:18:01.860 --> 00:18:04.060
is you have a comma, and then you can run

374
00:18:04.060 --> 00:18:07.540
an actual function here and then this function

375
00:18:07.540 --> 00:18:08.880
is a call back and you can put

376
00:18:08.880 --> 00:18:11.410
your updatePermission inside of there

377
00:18:11.410 --> 00:18:13.380
and by the time this runs we can guarantee

378
00:18:13.380 --> 00:18:15.790
that State has then been updated.

379
00:18:15.790 --> 00:18:17.840
You can actually even simplify this a lot

380
00:18:17.840 --> 00:18:20.280
by just passing the reference to the function,

381
00:18:20.280 --> 00:18:25.280
updatePermission, and that will only call it

382
00:18:26.120 --> 00:18:27.940
once the setState has actually finished.

383
00:18:27.940 --> 00:18:30.040
So if you run into that issue that's how you fix it.

384
00:18:30.040 --> 00:18:31.820
I'm gonna bring this right back and we'll keep

385
00:18:31.820 --> 00:18:33.803
going on with the video.

386
00:18:35.300 --> 00:18:37.330
So pretty, pretty neat little way of doing it.

387
00:18:37.330 --> 00:18:41.730
I'm gonna revert it, so remove, take that out,

388
00:18:41.730 --> 00:18:43.450
but feel free to keep that in there

389
00:18:43.450 --> 00:18:45.220
if you like that functionality.

390
00:18:45.220 --> 00:18:48.933
And we change this to that, doot, doot, do,

391
00:18:55.170 --> 00:18:59.120
and everything still works, beautiful.

392
00:18:59.120 --> 00:19:01.130
So we got a couple little more things to do

393
00:19:01.130 --> 00:19:02.070
in the next Permission video

394
00:19:02.070 --> 00:19:03.920
and then we're done with Permissions.

