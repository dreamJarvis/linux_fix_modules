WEBVTT

1
00:00:01.260 --> 00:00:03.170
<v Wes>Let's actually get some IMs showing up</v>

2
00:00:03.170 --> 00:00:05.260
as well as information about the user's cart,

3
00:00:05.260 --> 00:00:08.770
how many items they have in there and in the tally.

4
00:00:08.770 --> 00:00:12.610
Now, the question is now how do we query the users cart?

5
00:00:12.610 --> 00:00:14.550
And if you remember from way back

6
00:00:14.550 --> 00:00:15.650
in the start of this course,

7
00:00:15.650 --> 00:00:18.027
we had created this user component here.

8
00:00:18.027 --> 00:00:19.620
And the point of the user component

9
00:00:19.620 --> 00:00:21.400
is to tuck away all the complexity

10
00:00:21.400 --> 00:00:24.700
of this current user query which is gonna get quite large,

11
00:00:24.700 --> 00:00:29.700
as well as being able to write the query component,

12
00:00:29.780 --> 00:00:32.730
pass in the query, and then pass the data down.

13
00:00:32.730 --> 00:00:35.610
So, where we're using this right now is in our nav,

14
00:00:35.610 --> 00:00:38.020
and we simply just need to give ourselves a user component

15
00:00:38.020 --> 00:00:41.320
and that will expose the currently logged in user.

16
00:00:41.320 --> 00:00:43.730
Then, inside of that user, we have information

17
00:00:43.730 --> 00:00:45.360
about their name and their email address.

18
00:00:45.360 --> 00:00:48.290
And now we're gonna be able to query the users cart.

19
00:00:48.290 --> 00:00:50.940
So, we're gonna reuse this user component here

20
00:00:50.940 --> 00:00:54.183
and then just modify this query to be a little bit bigger.

21
00:00:56.090 --> 00:00:58.650
Let's open up our cart.js here,

22
00:00:58.650 --> 00:01:01.760
and we'll import that user component right from the top.

23
00:01:01.760 --> 00:01:05.183
So, import user from,

24
00:01:09.460 --> 00:01:10.790
then we're gonna go down to our cart

25
00:01:10.790 --> 00:01:14.220
and we're gonna add yet another level of Render Prop.

26
00:01:14.220 --> 00:01:16.950
Again, hold on to your pants, we're gonna look at a way

27
00:01:16.950 --> 00:01:19.430
that we can use something called adopt

28
00:01:19.430 --> 00:01:21.720
where we don't have to nest these infinitely,

29
00:01:21.720 --> 00:01:23.940
'cause this is a fairly simple example

30
00:01:23.940 --> 00:01:26.660
where we've got three possible

31
00:01:26.660 --> 00:01:29.390
or two queries in one mutation inside of an item.

32
00:01:29.390 --> 00:01:31.990
And it's possible that you might have six or seven

33
00:01:31.990 --> 00:01:33.890
of these queries and mutation in the component,

34
00:01:33.890 --> 00:01:36.560
and that's the surefire way to ruin your day

35
00:01:36.560 --> 00:01:39.170
by having to nest them 100 levels deep,

36
00:01:39.170 --> 00:01:41.240
so we will be looking at how to refactor that.

37
00:01:41.240 --> 00:01:42.360
Don't worry.

38
00:01:42.360 --> 00:01:43.490
For now, let's just wrap it up.

39
00:01:43.490 --> 00:01:46.060
The very top level, we have a user,

40
00:01:46.060 --> 00:01:51.060
and then at the top level we have a arrow function.

41
00:01:54.180 --> 00:01:56.100
And, we are gonna destructure data

42
00:01:56.100 --> 00:01:57.880
and then destructure it one level further

43
00:01:57.880 --> 00:01:59.433
into a variable called me.

44
00:02:00.480 --> 00:02:02.540
Then, inside of there, these need to be curly brackets,

45
00:02:02.540 --> 00:02:06.040
because we're gonna say if there is no me, return null,

46
00:02:09.050 --> 00:02:10.270
'cause we don't wanna show the cart

47
00:02:10.270 --> 00:02:12.530
unless the person is actually logged in.

48
00:02:12.530 --> 00:02:15.630
Otherwise, we want to return parentheses

49
00:02:15.630 --> 00:02:17.710
and then we're gonna take that closing parenthesis

50
00:02:17.710 --> 00:02:21.337
and the closing user tag here, and go for a bit of a trip,

51
00:02:21.337 --> 00:02:24.670
all the way to the bottom of that other mutation.

52
00:02:24.670 --> 00:02:25.623
Give it a save.

53
00:02:27.060 --> 00:02:30.010
Now, what should happen is if we've console log me,

54
00:02:30.010 --> 00:02:35.010
right here, you see that the user is currently being shown,

55
00:02:36.260 --> 00:02:37.440
which is really good.

56
00:02:37.440 --> 00:02:39.650
We have all of the user's information.

57
00:02:39.650 --> 00:02:40.620
We have their name.

58
00:02:40.620 --> 00:02:43.100
We can right away go here and change our your

59
00:02:43.100 --> 00:02:44.923
with me.name.

60
00:02:47.630 --> 00:02:49.640
And then you see Wes Bos Cart.

61
00:02:49.640 --> 00:02:52.810
Actually, need to put an apostrophe S there,

62
00:02:52.810 --> 00:02:55.360
and if you wanted to, you could do the logic of,

63
00:02:55.360 --> 00:02:58.280
if the letter ends in S, then just put an apostrophe,

64
00:02:58.280 --> 00:03:00.250
otherwise, do apostrophe S.

65
00:03:00.250 --> 00:03:01.083
I don't care.

66
00:03:01.083 --> 00:03:03.480
We'll leave it like that for simplicity's sake.

67
00:03:03.480 --> 00:03:06.190
That's good, but we don't have access to the user's cart.

68
00:03:06.190 --> 00:03:07.510
So, that's where we actually need to go

69
00:03:07.510 --> 00:03:11.140
into our user.js component and modify this query here

70
00:03:11.140 --> 00:03:12.850
to also include the cart.

71
00:03:12.850 --> 00:03:14.400
So, if we were to include the cart,

72
00:03:14.400 --> 00:03:18.200
you need inside of a cart is going to be many cart items.

73
00:03:18.200 --> 00:03:20.760
So, each cart item will have an ID,

74
00:03:20.760 --> 00:03:22.410
and they'll also have a quantity.

75
00:03:25.870 --> 00:03:27.503
So, let's open up this.

76
00:03:28.520 --> 00:03:29.653
Open up the cart.

77
00:03:30.840 --> 00:03:34.560
And you see that inside of the cart there is a cart ID

78
00:03:34.560 --> 00:03:36.160
and a quantity of items.

79
00:03:36.160 --> 00:03:39.570
So, that already allows us to quickly sum up

80
00:03:39.570 --> 00:03:42.720
how many items are in their cart.

81
00:03:42.720 --> 00:03:46.250
So, head back to our cart.js and we'll swap out this

82
00:03:46.250 --> 00:03:49.543
with me.cart.length.

83
00:03:51.440 --> 00:03:53.420
It says you have two items in your cart.

84
00:03:53.420 --> 00:03:56.290
If there's only one item, we can kinda modify that.

85
00:03:56.290 --> 00:03:58.150
Take the S off of items.

86
00:03:58.150 --> 00:03:59.670
We'll put a curly bracket there.

87
00:03:59.670 --> 00:04:04.150
We'll say if me.cart.length is equal to one

88
00:04:05.090 --> 00:04:09.943
then return nothing, otherwise, return an S.

89
00:04:11.140 --> 00:04:12.930
And that way, if they have one item

90
00:04:12.930 --> 00:04:15.100
it'll say you have one item in your cart.

91
00:04:15.100 --> 00:04:18.310
Otherwise, it'll show items, plural.

92
00:04:18.310 --> 00:04:19.220
Everything is good.

93
00:04:19.220 --> 00:04:22.480
We are also going to add up the quantity, shortly,

94
00:04:22.480 --> 00:04:24.910
and that's actually gonna go in a little red bubble

95
00:04:24.910 --> 00:04:26.050
next to my cart.

96
00:04:26.050 --> 00:04:28.872
So, if you have two of one item and one of the other item,

97
00:04:28.872 --> 00:04:30.010
it should show three.

98
00:04:30.010 --> 00:04:31.380
In this case, it just shows two,

99
00:04:31.380 --> 00:04:33.620
because those are the different number of items

100
00:04:33.620 --> 00:04:34.740
that we have.

101
00:04:34.740 --> 00:04:35.573
Good.

102
00:04:35.573 --> 00:04:37.380
Now, let's go ahead and start looping over

103
00:04:37.380 --> 00:04:39.390
all of the different items that are in our cart,

104
00:04:39.390 --> 00:04:42.483
so we can show what the user has there.

105
00:04:44.660 --> 00:04:47.820
So, we're gonna go and give ourselves an unordered list,

106
00:04:47.820 --> 00:04:50.150
and inside of that, we're going to take the users cart,

107
00:04:50.150 --> 00:04:50.983
me.cart,

108
00:04:53.100 --> 00:04:54.500
and we're gonna map over it.

109
00:04:56.330 --> 00:04:59.840
And for each cart item, we're going to return,

110
00:04:59.840 --> 00:05:02.000
right now let's just return a list item

111
00:05:02.000 --> 00:05:06.340
that has the cartItem.id,

112
00:05:06.340 --> 00:05:09.370
just to make sure that this looping is working properly.

113
00:05:09.370 --> 00:05:10.203
There we go.

114
00:05:10.203 --> 00:05:13.070
You see that there's two items in our cart,

115
00:05:13.070 --> 00:05:14.940
and they are now showing up.

116
00:05:14.940 --> 00:05:17.570
If I were to add another item to our cart,

117
00:05:17.570 --> 00:05:19.860
I don't believe that it's going to show up

118
00:05:19.860 --> 00:05:21.340
because we have it re-fetched.

119
00:05:21.340 --> 00:05:22.730
But, let's try it right now,

120
00:05:22.730 --> 00:05:25.940
and we'll look at how we can re-fetch the current user query

121
00:05:25.940 --> 00:05:27.120
after we add something to cart.

122
00:05:27.120 --> 00:05:32.120
So, close that, add another item to cart, open up my cart.

123
00:05:32.430 --> 00:05:35.450
There's still only two items so if I immediately refresh,

124
00:05:35.450 --> 00:05:38.690
you'll see that there are now three items in my cart.

125
00:05:38.690 --> 00:05:40.170
So, how do we fix that?

126
00:05:40.170 --> 00:05:42.770
Well, when you add an item to your cart,

127
00:05:42.770 --> 00:05:45.630
we should be able to re-fetch the current user query.

128
00:05:45.630 --> 00:05:47.973
So, let's open up the add to cart real quick.

129
00:05:49.370 --> 00:05:51.210
And this is the mutation right here.

130
00:05:51.210 --> 00:05:54.160
We just have to add a re-fetch query to this mutation.

131
00:05:54.160 --> 00:05:56.130
So, we'll go up to the top

132
00:05:56.130 --> 00:05:59.030
and we'll import the current user

133
00:06:01.310 --> 00:06:02.850
query from

134
00:06:07.300 --> 00:06:08.330
user.

135
00:06:08.330 --> 00:06:11.010
Let's triple check that we actually exported that

136
00:06:11.010 --> 00:06:12.600
from user.js.

137
00:06:12.600 --> 00:06:13.433
Yeah, we did.

138
00:06:13.433 --> 00:06:14.870
Good.

139
00:06:14.870 --> 00:06:17.280
Then we'll go down here and say,

140
00:06:17.280 --> 00:06:21.560
re-fetch queries is equal to an array,

141
00:06:21.560 --> 00:06:24.700
and there's one query in there with the query property

142
00:06:24.700 --> 00:06:27.803
that's called current user query.

143
00:06:30.070 --> 00:06:32.270
Now, if I close this, there's three.

144
00:06:32.270 --> 00:06:34.430
I don't believe I have this Rimowa in there,

145
00:06:34.430 --> 00:06:35.593
so, I'm gonna add it.

146
00:06:36.810 --> 00:06:37.937
We'll go back to our cart,

147
00:06:37.937 --> 00:06:39.870
and you see that there's four items

148
00:06:39.870 --> 00:06:42.610
automatically in our cart because it re-fetched it,

149
00:06:42.610 --> 00:06:43.540
so that's really nice.

150
00:06:43.540 --> 00:06:46.180
We can close that down and then head back here.

151
00:06:46.180 --> 00:06:48.320
Now, I'm not gonna actually do all of the looping

152
00:06:48.320 --> 00:06:50.990
inside of here because each cart item

153
00:06:50.990 --> 00:06:52.370
should be a separate component.

154
00:06:52.370 --> 00:06:54.490
So, let's go ahead and create a new component

155
00:06:54.490 --> 00:06:56.540
that we're going to use to output,

156
00:06:56.540 --> 00:06:59.100
instead of this list item here.

157
00:06:59.100 --> 00:07:02.680
Go to components, create a new file, capital C Cart,

158
00:07:02.680 --> 00:07:04.533
capital I, Item.js,

159
00:07:06.670 --> 00:07:08.863
import react from react.

160
00:07:10.650 --> 00:07:12.500
We're gonna import a helper function

161
00:07:12.500 --> 00:07:15.363
called format money from,

162
00:07:16.290 --> 00:07:18.150
go up a level into the lib folder,

163
00:07:18.150 --> 00:07:20.730
and then there's a little one called format money.

164
00:07:20.730 --> 00:07:22.630
That will be helpful in just a second.

165
00:07:24.240 --> 00:07:26.650
And then we also wanna import styled,

166
00:07:26.650 --> 00:07:28.810
and we're gonna write the styles for this one ourselves

167
00:07:28.810 --> 00:07:31.640
from styled-components.

168
00:07:31.640 --> 00:07:36.023
We'll make our cart item styles here.

169
00:07:37.120 --> 00:07:38.393
That's a style.li.

170
00:07:42.210 --> 00:07:43.910
And then we'll make our cart item.

171
00:07:49.890 --> 00:07:54.003
Let's just return a cart item styles.

172
00:07:55.120 --> 00:08:00.120
It says, hi, and then export default cart item.

173
00:08:04.509 --> 00:08:06.360
Then we'll go back to our cart JS

174
00:08:06.360 --> 00:08:08.513
and import that at the top of our file.

175
00:08:11.190 --> 00:08:15.480
And we'll go ahead and swap out this LI here

176
00:08:17.330 --> 00:08:19.003
with a cart item tag.

177
00:08:20.968 --> 00:08:23.710
But, of course, we'll need a key because we're looping over,

178
00:08:23.710 --> 00:08:26.610
so, we'll say cartItem.id.

179
00:08:26.610 --> 00:08:30.170
And, we'll also need to pass the cart item via a prop

180
00:08:31.670 --> 00:08:32.503
to that.

181
00:08:33.900 --> 00:08:36.160
So, now it says, hi, four times.

182
00:08:36.160 --> 00:08:39.580
If we go back to our cartItem.js, we should be able to

183
00:08:41.360 --> 00:08:44.013
interpolate props.cartItem.id.

184
00:08:49.100 --> 00:08:50.810
You can see that they're being passed down.

185
00:08:50.810 --> 00:08:53.610
If you don't believe me, we can inspect it.

186
00:08:53.610 --> 00:08:55.540
Go to our react dev tools

187
00:08:58.380 --> 00:09:00.010
and find our cart item.

188
00:09:00.010 --> 00:09:02.690
And you see that the props has cart item.

189
00:09:02.690 --> 00:09:05.590
While we're at it, let's write a click prop type for that.

190
00:09:06.940 --> 00:09:08.630
And I'm just gonna put it as an object.

191
00:09:08.630 --> 00:09:10.030
You can shape it a little further

192
00:09:10.030 --> 00:09:12.150
for the values that are inside of it.

193
00:09:12.150 --> 00:09:13.340
I think that's pretty beginner stuff,

194
00:09:13.340 --> 00:09:16.110
so I'm not gonna go too much into that.

195
00:09:16.110 --> 00:09:17.470
Alright, we're lookin good.

196
00:09:17.470 --> 00:09:18.683
Let's move this down.

197
00:09:19.890 --> 00:09:21.700
Now, inside of that cart item,

198
00:09:21.700 --> 00:09:24.370
obviously we don't wanna just put the ID,

199
00:09:24.370 --> 00:09:26.510
but we wanna put a whole bunch of information

200
00:09:26.510 --> 00:09:27.720
inside of that.

201
00:09:27.720 --> 00:09:29.770
Now, as we want to start templating out

202
00:09:29.770 --> 00:09:30.920
all of this information,

203
00:09:30.920 --> 00:09:33.870
you'll notice that we don't have very much information

204
00:09:33.870 --> 00:09:35.780
about the item that's in the cart.

205
00:09:35.780 --> 00:09:38.100
We only have the quantity and the ID.

206
00:09:38.100 --> 00:09:41.180
So, how do we get more information

207
00:09:41.180 --> 00:09:43.240
about the stuff that's inside of there?

208
00:09:43.240 --> 00:09:45.820
Well, we need to modify our query

209
00:09:45.820 --> 00:09:48.010
so that we're pulling in the information.

210
00:09:48.010 --> 00:09:52.420
We need things like title in the image, and the quantity,

211
00:09:52.420 --> 00:09:54.500
and the price, and all that good stuff.

212
00:09:54.500 --> 00:09:56.520
So, well, how does that work?

213
00:09:56.520 --> 00:09:58.720
Well, we'll go back to our user.js.

214
00:09:58.720 --> 00:10:00.650
We'll go back to our cart query.

215
00:10:00.650 --> 00:10:04.820
And do I just start adding title

216
00:10:04.820 --> 00:10:07.980
and price and image inside of here?

217
00:10:07.980 --> 00:10:08.880
No, we don't do that.

218
00:10:08.880 --> 00:10:10.850
And, why don't we just put the values

219
00:10:10.850 --> 00:10:12.340
that we want directly in here?

220
00:10:12.340 --> 00:10:15.330
Because this is a cart item

221
00:10:15.330 --> 00:10:17.740
and where is all the details about the item?

222
00:10:17.740 --> 00:10:19.010
It's not in the cart item.

223
00:10:19.010 --> 00:10:22.230
It actually has a relationship to the item,

224
00:10:22.230 --> 00:10:24.060
so, we need to go one step further

225
00:10:24.060 --> 00:10:28.300
where we grab the item that's inside of the cart item,

226
00:10:28.300 --> 00:10:32.970
and then inside of that, we can grab the ID, the price,

227
00:10:32.970 --> 00:10:36.700
the image, the title, the description,

228
00:10:36.700 --> 00:10:38.140
and everything that we want about us.

229
00:10:38.140 --> 00:10:39.540
Let's give that a save.

230
00:10:39.540 --> 00:10:40.860
And if we go to our console,

231
00:10:40.860 --> 00:10:43.590
I think we still have that console log in there.

232
00:10:43.590 --> 00:10:44.543
Let's see here.

233
00:10:47.470 --> 00:10:48.890
So, we have the user.

234
00:10:48.890 --> 00:10:50.580
Inside of the user is a cart.

235
00:10:50.580 --> 00:10:55.200
Inside of each cart item has that cart item has an ID,

236
00:10:55.200 --> 00:10:59.290
it has a quantity, and then inside of that you have an item,

237
00:10:59.290 --> 00:11:01.900
which shows us that the Patagonia Black Hole.

238
00:11:01.900 --> 00:11:04.890
This the price of it, here's the ID, here's the description,

239
00:11:04.890 --> 00:11:05.910
and here's the image.

240
00:11:05.910 --> 00:11:08.100
So, that's really helpful.

241
00:11:08.100 --> 00:11:11.860
The real power of GraphQL is that you can go infinitely.

242
00:11:11.860 --> 00:11:15.720
You'll know that each item has a user,

243
00:11:15.720 --> 00:11:17.170
and each user has

244
00:11:19.740 --> 00:11:22.130
a name and an email associated with it.

245
00:11:22.130 --> 00:11:23.890
So, look, can we go even further?

246
00:11:23.890 --> 00:11:24.723
Let's see.

247
00:11:26.420 --> 00:11:30.200
So the user has a cart, which has a cart item,

248
00:11:30.200 --> 00:11:35.020
which has an item, which has a user, which has an email.

249
00:11:35.020 --> 00:11:36.250
But, can we go even further?

250
00:11:36.250 --> 00:11:41.240
Each user has a cart, which has an item,

251
00:11:41.240 --> 00:11:44.070
which has a user,

252
00:11:44.070 --> 00:11:45.410
which has an email.

253
00:11:45.410 --> 00:11:46.340
You get the point right here?

254
00:11:46.340 --> 00:11:50.010
Because of all of the relationships between each other,

255
00:11:50.010 --> 00:11:53.090
and since I've created all the data, it will all be me,

256
00:11:53.090 --> 00:11:57.020
but if you really wanted to list whose item

257
00:11:57.020 --> 00:11:59.620
you're trying to buy, you totally could.

258
00:11:59.620 --> 00:12:03.740
So, we have a user that has a cart, that has a cart item,

259
00:12:03.740 --> 00:12:07.320
that has an item, that has a user, that has a cart,

260
00:12:07.320 --> 00:12:10.610
that has an item, that has a user,

261
00:12:10.610 --> 00:12:11.870
that has (laughing) an email address.

262
00:12:11.870 --> 00:12:12.703
Right?

263
00:12:12.703 --> 00:12:14.640
That's the whole power of GraphQL.

264
00:12:14.640 --> 00:12:17.000
We can drill down as far as we want

265
00:12:17.000 --> 00:12:21.000
and we are only pulling the very little information

266
00:12:21.000 --> 00:12:21.833
that we want.

267
00:12:21.833 --> 00:12:22.666
And, obviously, we're not gonna do that,

268
00:12:22.666 --> 00:12:24.120
so let's back that up.

269
00:12:24.120 --> 00:12:26.140
We do want the user.

270
00:12:26.140 --> 00:12:27.830
We do want their cart.

271
00:12:27.830 --> 00:12:31.270
We do want the information about their cart items.

272
00:12:31.270 --> 00:12:35.050
We do want the information about each cart item's item.

273
00:12:35.050 --> 00:12:38.870
And then for each of those, we wanna grab the price ID,

274
00:12:38.870 --> 00:12:40.810
image, title, and description.

275
00:12:40.810 --> 00:12:42.880
So, that's the data that we want there.

276
00:12:42.880 --> 00:12:45.600
That will allow us to jump back into the cart item here.

277
00:12:45.600 --> 00:12:46.433
Head inside here,

278
00:12:46.433 --> 00:12:48.450
let's just try to get the image showing up first.

279
00:12:48.450 --> 00:12:50.550
So, let's give ourselves an image tag

280
00:12:50.550 --> 00:12:55.550
where the source is going to be props.cartItem.item.image.

281
00:13:01.650 --> 00:13:03.530
And you see that we've got all of the things

282
00:13:03.530 --> 00:13:05.430
that are in our cart, images showing up.

283
00:13:05.430 --> 00:13:07.150
We can put a width on those.

284
00:13:07.150 --> 00:13:08.913
Let's put a width of 100 on that.

285
00:13:10.100 --> 00:13:11.170
Make it a little bit smaller.

286
00:13:11.170 --> 00:13:12.410
Looking good.

287
00:13:12.410 --> 00:13:13.670
One other thing we can do

288
00:13:13.670 --> 00:13:17.930
is we can destructure this props into cart item directly.

289
00:13:17.930 --> 00:13:21.470
So, we can give ourselves a parenthesis

290
00:13:21.470 --> 00:13:24.020
and destructure into cart item.

291
00:13:24.020 --> 00:13:26.270
And then we don't have to say props.cartitem.

292
00:13:26.270 --> 00:13:27.240
And I broke it.

293
00:13:27.240 --> 00:13:28.073
What did I do?

294
00:13:28.073 --> 00:13:28.906
Two equals?

295
00:13:28.906 --> 00:13:29.739
There we go.

296
00:13:29.739 --> 00:13:32.090
And we can go even further and destructure that

297
00:13:32.090 --> 00:13:35.500
into just an item variable, which would be okay,

298
00:13:35.500 --> 00:13:38.210
but we need the cart item to show quantity,

299
00:13:38.210 --> 00:13:40.710
so we're not gonna destructure that any further.

300
00:13:40.710 --> 00:13:42.350
Just the cart item.

301
00:13:42.350 --> 00:13:43.690
Now, lets template it all out.

302
00:13:43.690 --> 00:13:47.600
The alt tag is going to be the cartitem.item.title.

303
00:13:47.600 --> 00:13:51.143
Then we're gonna have a div with cart item details.

304
00:13:53.270 --> 00:13:55.310
Inside of that we want an H3 tag.

305
00:13:55.310 --> 00:13:58.303
That has the title so we can scrap this again.

306
00:14:01.060 --> 00:14:03.410
Below that we want a paragraph tag.

307
00:14:03.410 --> 00:14:08.313
We're going to output the cartItem.item.price.

308
00:14:10.940 --> 00:14:13.640
That's the price, but we wanna format that,

309
00:14:13.640 --> 00:14:16.900
so I have that handy little format money function

310
00:14:16.900 --> 00:14:18.313
that we imported earlier.

311
00:14:20.090 --> 00:14:20.923
You'll see how much.

312
00:14:20.923 --> 00:14:23.370
Oh, that seems a bit expensive for a backpack.

313
00:14:23.370 --> 00:14:25.773
But you see the point that we've got there.

314
00:14:28.080 --> 00:14:29.830
Let's put this on their own line,

315
00:14:29.830 --> 00:14:33.650
'cause inside of this paragraph I want to have a dash

316
00:14:36.790 --> 00:14:39.080
and then below that I want an EM tag,

317
00:14:39.080 --> 00:14:43.630
and we're going to add up the total of what we have.

318
00:14:43.630 --> 00:14:48.183
So, let's first list out the quantity, so cartItem.quantity.

319
00:14:51.380 --> 00:14:55.050
They have two of this one, one of this one, one of that one,

320
00:14:55.050 --> 00:14:57.383
and I believe if I were to click add to cart,

321
00:14:58.560 --> 00:15:00.280
it automatically updates the three.

322
00:15:00.280 --> 00:15:01.330
Good.

323
00:15:01.330 --> 00:15:05.233
And then we want our times, the cart item price.

324
00:15:09.158 --> 00:15:12.800
Look at this one, $34.23 times one, times that.

325
00:15:12.800 --> 00:15:16.333
Obviously, we have to wrap this in format money,

326
00:15:19.670 --> 00:15:21.480
and then we need to make this the total,

327
00:15:21.480 --> 00:15:23.200
not just the amount for one.

328
00:15:23.200 --> 00:15:24.610
So, we can go back up here

329
00:15:24.610 --> 00:15:26.380
and take the price for one of them

330
00:15:26.380 --> 00:15:29.040
and multiply it by the quantity that have in their cart,

331
00:15:29.040 --> 00:15:31.790
so, cartItem.quantity.

332
00:15:31.790 --> 00:15:33.540
That, again, that's on the cart item,

333
00:15:33.540 --> 00:15:35.223
not the actual item itself.

334
00:15:36.140 --> 00:15:38.230
And you see, here we go, 7,000.

335
00:15:38.230 --> 00:15:40.470
And now if I were to add another backpack to my cart,

336
00:15:40.470 --> 00:15:44.210
you see that it will update it to 9,000.

337
00:15:44.210 --> 00:15:45.400
Click it again.

338
00:15:45.400 --> 00:15:47.140
Actually, one thing we didn't do there is

339
00:15:47.140 --> 00:15:50.300
that this add to cart should be disabled

340
00:15:50.300 --> 00:15:53.270
as it's sort of doing the work and going to the back end.

341
00:15:53.270 --> 00:15:54.470
So, let's do that real quick.

342
00:15:54.470 --> 00:15:55.753
Jump to add to cart.

343
00:15:56.930 --> 00:16:00.650
We'll take this button here and this add to cart function,

344
00:16:00.650 --> 00:16:04.790
if you give it a second argument, and destructure that

345
00:16:04.790 --> 00:16:07.170
we can get our error and our loading states.

346
00:16:07.170 --> 00:16:10.000
We just care about the loading right now.

347
00:16:10.000 --> 00:16:11.670
And we can go to our button and say,

348
00:16:11.670 --> 00:16:12.520
disabled

349
00:16:14.830 --> 00:16:15.973
is equal to loading.

350
00:16:19.070 --> 00:16:22.010
Now, when I click it, the button goes gray

351
00:16:22.010 --> 00:16:23.240
for a split second.

352
00:16:23.240 --> 00:16:25.960
And then we can also add an ING to this.

353
00:16:25.960 --> 00:16:29.373
So we'll say, if it's loading then we add ING.

354
00:16:32.820 --> 00:16:33.653
Beauty!

355
00:16:33.653 --> 00:16:36.330
I love those little, nice little interface tricks

356
00:16:36.330 --> 00:16:38.600
where it makes it much more pleasant

357
00:16:38.600 --> 00:16:40.020
to actually work with.

358
00:16:40.020 --> 00:16:41.970
Let's go back to our cart item

359
00:16:41.970 --> 00:16:45.730
and keep working on getting everything shown up.

360
00:16:45.730 --> 00:16:48.310
And we'll just add an each behind here.

361
00:16:48.310 --> 00:16:50.320
So, it tells the user how many they have.

362
00:16:50.320 --> 00:16:53.330
So, Patagonia Black Hole, $18,000,

363
00:16:53.330 --> 00:16:56.210
which is eight times 2,000 bucks each.

364
00:16:56.210 --> 00:16:58.290
I think that's all the info we need here.

365
00:16:58.290 --> 00:17:00.410
Let's jump up to the cart item styles

366
00:17:00.410 --> 00:17:01.670
and write a little bit of CSS

367
00:17:01.670 --> 00:17:04.540
to make it look a little bit better.

368
00:17:04.540 --> 00:17:07.603
So, we'll add some padding, one rem zero,

369
00:17:08.620 --> 00:17:12.420
border bottom, one pixel solid,

370
00:17:12.420 --> 00:17:16.523
and I wanna grab the light gray value.

371
00:17:17.600 --> 00:17:18.683
Lookin' good.

372
00:17:19.610 --> 00:17:24.610
And display grid on that, and align the items in center.

373
00:17:28.910 --> 00:17:30.813
Grid template columns.

374
00:17:31.660 --> 00:17:35.123
And that'd be auto one FR auto.

375
00:17:36.870 --> 00:17:37.703
Beautiful!

376
00:17:39.070 --> 00:17:40.970
Grab the image that's inside of there.

377
00:17:42.860 --> 00:17:45.773
Margin right 10PX.

378
00:17:50.220 --> 00:17:52.420
Good little bit of space on it.

379
00:17:52.420 --> 00:17:55.400
Grab the H3 margin zero.

380
00:17:55.400 --> 00:17:58.400
Well actually take the margin off the paragraph tag as well.

381
00:17:59.730 --> 00:18:01.660
Things are looking pretty snazzy.

382
00:18:01.660 --> 00:18:03.150
Last thing that we need to do here

383
00:18:03.150 --> 00:18:05.210
is to actually run the total,

384
00:18:05.210 --> 00:18:06.640
because this is still hard coded.

385
00:18:06.640 --> 00:18:08.983
So, if we go back to our cart.js,

386
00:18:10.560 --> 00:18:12.330
go to the bottom here,

387
00:18:12.330 --> 00:18:14.090
and we're gonna use another utility function.

388
00:18:14.090 --> 00:18:15.220
Let's open it up real quick.

389
00:18:15.220 --> 00:18:16.870
It's called calc total price.

390
00:18:16.870 --> 00:18:18.420
It lives in the lib

391
00:18:18.420 --> 00:18:21.526
and it basically takes in the user's cart,

392
00:18:21.526 --> 00:18:25.840
and it does a reduce, which will take every single item

393
00:18:25.840 --> 00:18:27.080
and sort of mash them into each other.

394
00:18:27.080 --> 00:18:29.940
We start with zero cents and then for each one

395
00:18:29.940 --> 00:18:32.200
we get a tally and the cart item,

396
00:18:32.200 --> 00:18:35.270
and then if there is a cart item in there,

397
00:18:35.270 --> 00:18:37.040
because that's one thing we haven't done yet.

398
00:18:37.040 --> 00:18:39.410
There's a possibility that you add something to your cart

399
00:18:39.410 --> 00:18:41.160
and then someone deletes the item.

400
00:18:41.160 --> 00:18:43.160
But you still have a cart item

401
00:18:43.160 --> 00:18:45.310
that is relation to something that doesn't exist,

402
00:18:45.310 --> 00:18:47.960
so we need to make sure that that item is still there.

403
00:18:47.960 --> 00:18:50.010
Otherwise, we're just gonna skip that one

404
00:18:50.920 --> 00:18:54.370
and then we are going to return the tally

405
00:18:54.370 --> 00:18:57.140
times the new amount that we have.

406
00:18:57.140 --> 00:18:58.270
So, let's import that.

407
00:18:58.270 --> 00:19:02.010
Go back up to the top here, import calc

408
00:19:03.170 --> 00:19:04.830
total price

409
00:19:08.302 --> 00:19:10.250
from go up a level into the lib,

410
00:19:10.250 --> 00:19:12.200
and grab the calc total price function,

411
00:19:14.400 --> 00:19:17.540
and we can go back here and just swap out that 10.10

412
00:19:19.410 --> 00:19:22.883
with calc total price and then pass it me.cart.

413
00:19:24.510 --> 00:19:25.343
Bam!

414
00:19:25.343 --> 00:19:26.390
Oh, that's one thing.

415
00:19:26.390 --> 00:19:27.950
It's just showing us the amount in cents,

416
00:19:27.950 --> 00:19:29.490
so we've got to wrap it one more time

417
00:19:29.490 --> 00:19:32.633
in the format money function,

418
00:19:36.310 --> 00:19:38.230
which we have to import just yet.

419
00:19:38.230 --> 00:19:41.450
So, I'll go up to the top, duplicate this line,

420
00:19:41.450 --> 00:19:45.253
and then just use the format money.

421
00:19:47.810 --> 00:19:48.643
There we go!

422
00:19:48.643 --> 00:19:51.710
$22,000 worth of stuff showing in here.

423
00:19:51.710 --> 00:19:52.900
In the next video, what we're gonna do

424
00:19:52.900 --> 00:19:56.220
is we're gonna handle removing of cart items

425
00:19:56.220 --> 00:19:58.620
'cause there's no real way to do that right now.

