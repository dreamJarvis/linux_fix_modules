WEBVTT

1
00:00:00.970 --> 00:00:03.150
<v Wes>Let's flip over to the signup page</v>

2
00:00:03.150 --> 00:00:06.570
where we can make a form to allow people to sign on up.

3
00:00:06.570 --> 00:00:09.230
So, we're gonna go into our sidebar here,

4
00:00:09.230 --> 00:00:12.500
and I'm going to go into the pages

5
00:00:12.500 --> 00:00:16.360
and make a new page called signup.js.

6
00:00:16.360 --> 00:00:19.340
And you can actually just take all of the code

7
00:00:19.340 --> 00:00:22.380
from one of your other pages, paste it in,

8
00:00:22.380 --> 00:00:26.233
and then sort of rejig it to be what you want.

9
00:00:32.650 --> 00:00:34.200
Good, we got our signup page working.

10
00:00:34.200 --> 00:00:35.520
Now we're gonna go into our components

11
00:00:35.520 --> 00:00:38.853
and make a Signup.js component.

12
00:00:42.800 --> 00:00:47.430
And we'll scaffold out a react component, rcc.

13
00:00:47.430 --> 00:00:48.993
And I'm gonna export that.

14
00:00:50.930 --> 00:00:52.260
You're gonna need to import a couple things.

15
00:00:52.260 --> 00:00:54.700
So, first we'll import the mutation component

16
00:00:54.700 --> 00:00:56.093
from react-apollo.

17
00:00:58.460 --> 00:01:03.460
We need to import the GQL from graphql-tag.

18
00:01:04.040 --> 00:01:08.223
Import the form component from our styles directory,

19
00:01:10.300 --> 00:01:15.300
and import the error message from our error directory.

20
00:01:16.230 --> 00:01:20.263
Then, let's go down into here and return a Form tag.

21
00:01:21.660 --> 00:01:23.220
Capital F form.

22
00:01:23.220 --> 00:01:24.973
Inside of that we need a field set.

23
00:01:26.770 --> 00:01:29.960
And inside of that we'll give ourselves an h2 that says,

24
00:01:29.960 --> 00:01:32.763
Sign Up For An Account.

25
00:01:34.830 --> 00:01:37.630
Then we'll go back into our signup page and import that.

26
00:01:39.160 --> 00:01:42.100
And try to use one of those signup components.

27
00:01:42.100 --> 00:01:43.420
Bit of an error here.

28
00:01:43.420 --> 00:01:46.160
Build failed, duplicate declaration Signup.

29
00:01:46.160 --> 00:01:49.890
Oh, so obviously you can't import it as signup

30
00:01:49.890 --> 00:01:51.630
and make a component here.

31
00:01:51.630 --> 00:01:53.540
So let's rename that to SignupPage.

32
00:01:56.220 --> 00:01:58.670
And one more error, module not found,

33
00:01:58.670 --> 00:02:01.520
cannot resolve styles error.

34
00:02:01.520 --> 00:02:05.330
That's cause it's actually just ErrorMessage,

35
00:02:05.330 --> 00:02:06.730
not in the styles directory.

36
00:02:07.780 --> 00:02:10.620
Awesome, so I wanna have three of these side by side.

37
00:02:10.620 --> 00:02:13.620
I want a sign up for an account, I want a sign in form,

38
00:02:13.620 --> 00:02:15.410
and I want a reset your password form.

39
00:02:15.410 --> 00:02:17.610
So, what we're gonna do is go back to our signup form,

40
00:02:17.610 --> 00:02:18.680
and right now let's just duplicate

41
00:02:18.680 --> 00:02:20.563
that signup three times over.

42
00:02:21.900 --> 00:02:24.040
And then we're gonna make this div here into columns.

43
00:02:24.040 --> 00:02:26.450
So we'll import style components

44
00:02:26.450 --> 00:02:28.150
and then make a columns component.

45
00:02:30.970 --> 00:02:32.653
Use a little bit of CSS grid.

46
00:02:35.860 --> 00:02:37.360
And then we'll take this columns component

47
00:02:37.360 --> 00:02:39.480
and replace it with that div.

48
00:02:39.480 --> 00:02:42.580
Beautiful, now we have three columns showing up.

49
00:02:42.580 --> 00:02:45.410
And what's nice about that, is if I remove one of them,

50
00:02:45.410 --> 00:02:47.210
we just get two columns side by side.

51
00:02:47.210 --> 00:02:49.670
If I were to add in a couple more,

52
00:02:49.670 --> 00:02:50.880
at a certain point they're gonna break

53
00:02:50.880 --> 00:02:53.720
that 300 pixel minimum and wrap onto the next line.

54
00:02:53.720 --> 00:02:56.229
So, let's bring that back to three.

55
00:02:56.229 --> 00:02:59.100
Alright, so what were trying to look for here is,

56
00:02:59.100 --> 00:03:01.820
that we need a, very similar to our add an item,

57
00:03:01.820 --> 00:03:05.050
we need a form that has a whole bunch of input tags.

58
00:03:05.050 --> 00:03:07.640
And we're gonna save that and mirror to state.

59
00:03:07.640 --> 00:03:10.290
So, let's go down here, and we need three.

60
00:03:10.290 --> 00:03:15.247
We need one for email, one for name, and one for password.

61
00:03:15.247 --> 00:03:18.180
I'm gonna try that, do this as long as I can.

62
00:03:18.180 --> 00:03:23.180
So we'll have a label that is html for the email,

63
00:03:26.830 --> 00:03:31.250
then inside of that we want to put the title of it,

64
00:03:31.250 --> 00:03:33.033
so I think we can title.

65
00:03:34.410 --> 00:03:36.363
You wanna uppercase the first letter.

66
00:03:37.940 --> 00:03:41.830
Good, and then we need an input type of text

67
00:03:43.420 --> 00:03:45.763
and we'll actually update that on each one.

68
00:03:47.170 --> 00:03:49.850
The name of whatever it is that we have.

69
00:03:49.850 --> 00:03:53.003
The placeholder of whatever it is that you want.

70
00:03:54.290 --> 00:03:59.290
The value is going to be this.state. the name of it,

71
00:04:00.030 --> 00:04:02.793
email, password, and name.

72
00:04:03.660 --> 00:04:08.660
And then the onChange is going to be this.saveToState.

73
00:04:13.992 --> 00:04:15.200
Looking good.

74
00:04:15.200 --> 00:04:16.640
Little error here, that's fine.

75
00:04:16.640 --> 00:04:18.470
Just because we haven't actually set our state yet.

76
00:04:18.470 --> 00:04:21.710
Let's go back here and change this input to type="email",

77
00:04:21.710 --> 00:04:25.367
and this input type="password".

78
00:04:26.690 --> 00:04:28.350
Then we'll go up to our component here

79
00:04:28.350 --> 00:04:31.110
and say that the state is going to be equal to

80
00:04:31.110 --> 00:04:35.650
the name is nothing, the password is nothing,

81
00:04:35.650 --> 00:04:38.840
and the email is nothing.

82
00:04:38.840 --> 00:04:40.190
Looks like it's now working.

83
00:04:40.190 --> 00:04:42.263
Oh, we also need a submit button.

84
00:04:44.070 --> 00:04:48.707
So input, I will give a button type="submit".

85
00:04:49.656 --> 00:04:51.283
And call it Sign Up.

86
00:04:52.180 --> 00:04:54.960
Good, now if I try to type in these, it doesn't work.

87
00:04:54.960 --> 00:04:55.793
And that's cause we don't,

88
00:04:55.793 --> 00:04:57.860
haven't written that saveToState yet.

89
00:04:57.860 --> 00:05:01.250
So what we can do here is we'll make that saveToState.

90
00:05:01.250 --> 00:05:02.143
Very similar to how we did the other one,

91
00:05:02.143 --> 00:05:03.790
just a little bit different cause

92
00:05:03.790 --> 00:05:05.750
there's no numbers involved here.

93
00:05:05.750 --> 00:05:07.170
Take the event.

94
00:05:07.170 --> 00:05:10.020
We'll say this.setState, e.target.name,

95
00:05:14.900 --> 00:05:18.980
it's going to be e.target.value.

96
00:05:18.980 --> 00:05:20.940
Now let's open up our dev tools here.

97
00:05:20.940 --> 00:05:24.830
Let's give it a good refresh, and I'm able to type into it.

98
00:05:24.830 --> 00:05:25.670
Looks good.

99
00:05:25.670 --> 00:05:28.363
If I check it out in my React dev tools.

100
00:05:30.810 --> 00:05:33.640
Find the Signup component.

101
00:05:33.640 --> 00:05:37.000
There's that one, you see my state is now being populated

102
00:05:37.000 --> 00:05:39.260
as I change the values in there.

103
00:05:39.260 --> 00:05:42.260
Awesome, now we need to actually write a query

104
00:05:42.260 --> 00:05:44.230
to handle the mutation as well as wrap

105
00:05:44.230 --> 00:05:46.260
this entire thing in a mutation so we can

106
00:05:46.260 --> 00:05:49.040
expose the logic to submit it.

107
00:05:49.040 --> 00:05:52.000
Let's scroll up top here and write our actual mutation.

108
00:05:52.000 --> 00:05:56.173
So const SIGNUP_MUTATION = gql.

109
00:05:57.560 --> 00:05:59.510
And, inside of that we will write

110
00:05:59.510 --> 00:06:02.300
the mutation called SIGNUP_MUTATION.

111
00:06:02.300 --> 00:06:06.350
That takes in the email, the name, and the password.

112
00:06:06.350 --> 00:06:09.713
All of which will be strings.

113
00:06:13.720 --> 00:06:17.040
That will then run our schema called signup,

114
00:06:17.040 --> 00:06:21.193
which we will call it with email, which is the $email,

115
00:06:22.220 --> 00:06:25.140
the name which is the $name,

116
00:06:25.140 --> 00:06:29.633
and the password which is the $password.

117
00:06:31.925 --> 00:06:35.380
And from that we'll turn the ID, the email,

118
00:06:35.380 --> 00:06:38.183
and the name from that mutation.

119
00:06:39.520 --> 00:06:43.345
Then, we want to go into our render and

120
00:06:43.345 --> 00:06:45.290
make a mutation component.

121
00:06:45.290 --> 00:06:47.980
That mutation takes the mutation option

122
00:06:47.980 --> 00:06:50.143
which is going to be the SIGNUP_MUTATION,

123
00:06:51.450 --> 00:06:54.640
and then the variables of that

124
00:06:54.640 --> 00:06:57.170
that need to be passed along is just going to be state.

125
00:06:57.170 --> 00:06:59.520
Whatever is in state; name, password and email.

126
00:07:01.000 --> 00:07:06.000
Go inside this mutation, and write a little function here.

127
00:07:06.480 --> 00:07:10.110
Curly brackets, arrow function.

128
00:07:10.110 --> 00:07:11.550
That function gives us two things.

129
00:07:11.550 --> 00:07:14.190
First the actual function to call, so signup.

130
00:07:14.190 --> 00:07:16.660
And second we can get the error

131
00:07:17.690 --> 00:07:19.900
and the loading states that we need to do

132
00:07:19.900 --> 00:07:21.950
and we're destructuring that second argument

133
00:07:21.950 --> 00:07:23.640
of the function into their own variables

134
00:07:23.640 --> 00:07:25.620
called error and loading.

135
00:07:25.620 --> 00:07:29.970
Then we'll take this closing curly bracket and this mutation

136
00:07:29.970 --> 00:07:31.760
and I'm gonna put it all the way

137
00:07:31.760 --> 00:07:34.823
at the bottom of the form tag.

138
00:07:36.840 --> 00:07:40.040
And then I'm also going to return,

139
00:07:40.040 --> 00:07:42.850
and put a parenthesis around the opening form tag,

140
00:07:42.850 --> 00:07:46.290
and then a closing parenthesis behind that.

141
00:07:46.290 --> 00:07:48.110
Give that a save, you see my Prettier turned it

142
00:07:48.110 --> 00:07:49.630
into an implicit return and

143
00:07:49.630 --> 00:07:51.690
in this case it's actually totally fine

144
00:07:51.690 --> 00:07:54.670
because both the error and the loading state,

145
00:07:54.670 --> 00:07:58.190
these are going to be part of the form tag itself.

146
00:07:58.190 --> 00:08:00.810
So what were gonna do here is we'll go to our field set,

147
00:08:00.810 --> 00:08:01.980
and just like we did before

148
00:08:01.980 --> 00:08:04.700
the field set will take it disabled attribute,

149
00:08:04.700 --> 00:08:07.250
that will be set to the loading bouillon,

150
00:08:07.250 --> 00:08:11.510
and then it will also take in aria-busy attribute

151
00:08:11.510 --> 00:08:13.010
which is going to be set to the loading.

152
00:08:13.010 --> 00:08:14.790
And that's going to both disable the form

153
00:08:14.790 --> 00:08:16.910
as well as show loading indicator

154
00:08:16.910 --> 00:08:18.773
while things are happening.

155
00:08:18.773 --> 00:08:21.180
Then we also want to just display

156
00:08:21.180 --> 00:08:23.780
the error if there actually is an error.

157
00:08:23.780 --> 00:08:25.380
So we can take our error component

158
00:08:25.380 --> 00:08:27.010
that we inputted earlier,

159
00:08:27.010 --> 00:08:28.840
and pass it the error.

160
00:08:28.840 --> 00:08:33.020
And then if any errors come back from this mutation,

161
00:08:33.020 --> 00:08:35.517
it's going to just display them to the top of the user,

162
00:08:35.517 --> 00:08:38.060
but we still want to show them the labels and the inputs

163
00:08:38.060 --> 00:08:41.510
so that they can fix that error, and resubmit it.

164
00:08:41.510 --> 00:08:43.550
The last piece of the puzzle that we need here

165
00:08:43.550 --> 00:08:46.070
is we actually need to handle the submit of this form.

166
00:08:46.070 --> 00:08:47.340
So let's go into this form tag

167
00:08:47.340 --> 00:08:48.350
and were add a couple things.

168
00:08:48.350 --> 00:08:51.380
First, the method of your form needs to be post.

169
00:08:51.380 --> 00:08:52.610
And that has nothing to do

170
00:08:52.610 --> 00:08:55.210
with this actual sign up from happening,

171
00:08:55.210 --> 00:08:58.270
but what actually happens is that if you leave that off,

172
00:08:58.270 --> 00:09:00.000
let me show you what's gonna happen.

173
00:09:00.000 --> 00:09:02.120
If I leave that off and I put in my password

174
00:09:02.120 --> 00:09:03.563
as like something, like,

175
00:09:05.300 --> 00:09:07.843
really cute, and hit Sign Up.

176
00:09:08.950 --> 00:09:10.250
Oh, and the email address.

177
00:09:12.990 --> 00:09:16.330
You'll see that, by default, form elements are get,

178
00:09:16.330 --> 00:09:20.310
and if for some reason java script breaks on your page,

179
00:09:20.310 --> 00:09:24.290
your form is just gonna fall back to regular form submission

180
00:09:24.290 --> 00:09:28.220
and it's going to post it as, it's going to get it as a URL.

181
00:09:28.220 --> 00:09:30.230
And that's a big problem, because you never ever

182
00:09:30.230 --> 00:09:34.030
want to have peoples passwords stored in the URL bar.

183
00:09:34.030 --> 00:09:35.530
Because that goes into their history,

184
00:09:35.530 --> 00:09:38.800
that could possibly go into server logs, then your server.

185
00:09:38.800 --> 00:09:40.050
It's gonna be a bit of an issue.

186
00:09:40.050 --> 00:09:42.590
So, as sort of a nice little fall back,

187
00:09:42.590 --> 00:09:44.120
either don't use a form tag

188
00:09:44.120 --> 00:09:45.728
and just use a collection of inputs.

189
00:09:45.728 --> 00:09:50.728
Or, set the method of the form to be post.

190
00:09:51.410 --> 00:09:54.260
Next what we want to do is listen to the onSubmit event,

191
00:09:54.260 --> 00:09:56.840
and when that happens we're gonna get the event,

192
00:09:56.840 --> 00:09:58.530
and this is gonna be pretty simple here.

193
00:09:58.530 --> 00:10:01.110
We simply just call it e.preventDefault

194
00:10:01.110 --> 00:10:04.020
and then we run the signup function.

195
00:10:04.020 --> 00:10:06.010
So give it a save here.

196
00:10:06.010 --> 00:10:07.810
I'm gonna give it a fresh refresh

197
00:10:07.810 --> 00:10:10.680
just to make sure there's no funny business going on here.

198
00:10:10.680 --> 00:10:15.463
I'm gonna give it a wesbos+2@gmail.com.

199
00:10:18.200 --> 00:10:20.310
And I'm gonna have it as dogs.

200
00:10:20.310 --> 00:10:21.503
Click on Sign Up.

201
00:10:23.130 --> 00:10:24.710
And you see that it temporarily

202
00:10:24.710 --> 00:10:27.870
went to that loading state and came back.

203
00:10:27.870 --> 00:10:29.810
And nothing seems to have happened

204
00:10:29.810 --> 00:10:31.100
but I think it actually worked

205
00:10:31.100 --> 00:10:33.370
because, and the way we can test that

206
00:10:33.370 --> 00:10:35.510
is if we go to our console.

207
00:10:35.510 --> 00:10:37.290
Load up this console, here.

208
00:10:37.290 --> 00:10:38.670
Open up my Sick Fits.

209
00:10:38.670 --> 00:10:41.360
Go to my users and you can see there

210
00:10:41.360 --> 00:10:44.800
that's the second user that I have then created.

211
00:10:44.800 --> 00:10:45.960
One thing we could do here is

212
00:10:45.960 --> 00:10:47.910
actually capture the result of signup,

213
00:10:47.910 --> 00:10:50.180
and if everything went okay we can clear the form.

214
00:10:50.180 --> 00:10:54.380
So let's just say const res = await signup.

215
00:10:54.380 --> 00:10:56.280
And we'll make this an async function.

216
00:10:58.160 --> 00:11:00.950
And then let's just console log the response,

217
00:11:00.950 --> 00:11:02.540
just to see what we've got there.

218
00:11:02.540 --> 00:11:04.240
And then we'll clear out state.

219
00:11:04.240 --> 00:11:05.923
So it's this.setState.

220
00:11:08.990 --> 00:11:12.570
So, we'll try that again with wesbos+3.

221
00:11:12.570 --> 00:11:13.760
Let's open up our console to see

222
00:11:13.760 --> 00:11:15.363
what's coming back from that.

223
00:11:16.380 --> 00:11:19.080
Sign Up and you see that the data comes back.

224
00:11:19.080 --> 00:11:21.470
Signup and we have our signup there.

225
00:11:21.470 --> 00:11:23.250
What I'm curious about is that,

226
00:11:23.250 --> 00:11:24.740
what happens when I sign up

227
00:11:24.740 --> 00:11:27.840
with an email address that is already existing.

228
00:11:27.840 --> 00:11:28.823
Click on Sign Up.

229
00:11:29.690 --> 00:11:31.670
You see that it says, shoot a unique constraint

230
00:11:31.670 --> 00:11:34.820
would be violated on User.Details: Field name.

231
00:11:34.820 --> 00:11:37.270
You could write some, you could intercept that

232
00:11:37.270 --> 00:11:39.910
and write some better more user friendly one,

233
00:11:39.910 --> 00:11:41.310
but we'll leave it as is there.

234
00:11:41.310 --> 00:11:43.380
And you can see that because this

235
00:11:43.380 --> 00:11:47.300
did not resolve properly, it actually threw an error.

236
00:11:47.300 --> 00:11:49.220
We actually never did get to the setState

237
00:11:49.220 --> 00:11:50.700
and nothing was console.log.

238
00:11:50.700 --> 00:11:52.700
So you can simply just avoid it

239
00:11:52.700 --> 00:11:55.420
and you don't even need the response in here.

240
00:11:55.420 --> 00:11:56.820
Unless you wanted to make some sort of

241
00:11:56.820 --> 00:11:59.550
custom success message to the user.

242
00:11:59.550 --> 00:12:01.280
What were gonna do in the next video

243
00:12:01.280 --> 00:12:05.110
is to be able to show the user's logged in state in here,

244
00:12:05.110 --> 00:12:06.407
so once the user signs up here,

245
00:12:06.407 --> 00:12:10.650
they'll automatically have that signed in up here refreshed.

246
00:12:10.650 --> 00:12:12.350
So I'll see you in the next video.

