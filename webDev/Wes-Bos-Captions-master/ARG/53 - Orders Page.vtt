WEBVTT

1
00:00:00.007 --> 00:00:01.060
(quick swishing)

2
00:00:01.060 --> 00:00:01.910
<v Wes>Right now, when we click</v>

3
00:00:01.910 --> 00:00:03.940
on the Orders page, you'll see that

4
00:00:03.940 --> 00:00:05.740
we don't have anything so let's go ahead

5
00:00:05.740 --> 00:00:06.700
and make that page.

6
00:00:06.700 --> 00:00:07.980
Actually, this is probably

7
00:00:07.980 --> 00:00:09.760
a very straightforward one

8
00:00:09.760 --> 00:00:11.300
and I challenge you to code

9
00:00:11.300 --> 00:00:12.662
this one up yourself.

10
00:00:12.662 --> 00:00:13.790
Right, you gotta the page.

11
00:00:13.790 --> 00:00:15.760
You gotta make the ordered list component

12
00:00:15.760 --> 00:00:18.070
that's gotta have a query to the backend.

13
00:00:18.070 --> 00:00:20.460
You gotta write the query in the resolver

14
00:00:20.460 --> 00:00:21.790
on the backend and, then, once

15
00:00:21.790 --> 00:00:24.040
you have the data you gotta loop

16
00:00:24.040 --> 00:00:25.370
through it and display it on the page.

17
00:00:25.370 --> 00:00:28.190
So, try to do this one yourself

18
00:00:28.190 --> 00:00:29.733
and, then, watch the video.

19
00:00:30.780 --> 00:00:32.270
Welcome back, here we are.

20
00:00:32.270 --> 00:00:33.873
Let's get ready to do it.

21
00:00:35.150 --> 00:00:36.890
We're gonna go to our page here

22
00:00:36.890 --> 00:00:40.380
and make a lower case orders with an s.js.

23
00:00:40.380 --> 00:00:44.240
I'm just gonna open up my order.js

24
00:00:44.240 --> 00:00:45.610
and take everything from there.

25
00:00:45.610 --> 00:00:46.880
Paste it into there.

26
00:00:46.880 --> 00:00:49.810
We're going to make an orderList component.

27
00:00:49.810 --> 00:00:51.870
That's gonna come from OrderList

28
00:00:51.870 --> 00:00:53.420
and, then, when we actually put out

29
00:00:53.420 --> 00:00:56.380
the component, it's going to just be OrderList.

30
00:00:56.380 --> 00:00:57.920
It doesn't need any props passed to it

31
00:00:57.920 --> 00:00:59.840
because it's going to query the currently

32
00:00:59.840 --> 00:01:02.363
logged in user in order to get that.

33
00:01:03.290 --> 00:01:05.680
Okay, now, what we need to do is

34
00:01:05.680 --> 00:01:07.900
make a new component called OrderList.

35
00:01:07.900 --> 00:01:09.310
So, we'll go under our components directory.

36
00:01:09.310 --> 00:01:11.770
Make a new file capital o, order, capital l,

37
00:01:11.770 --> 00:01:14.110
list.js.

38
00:01:14.110 --> 00:01:15.760
We'll make our component in here.

39
00:01:28.160 --> 00:01:29.620
At the top, we're gonna need a couple things.

40
00:01:29.620 --> 00:01:32.323
So, let's import Query from react-apollo.

41
00:01:33.240 --> 00:01:36.893
We need formatDistance from date f functions.

42
00:01:39.650 --> 00:01:44.650
Gonna import the Link from next/link

43
00:01:44.890 --> 00:01:46.473
from styled-components,

44
00:01:50.330 --> 00:01:52.553
gql from graphql-tag,

45
00:01:54.050 --> 00:01:54.883
formatMoney

46
00:01:56.230 --> 00:01:57.510
and, finally, some styles

47
00:01:57.510 --> 00:02:02.510
called OrderItemStyles from styles directory,

48
00:02:04.035 --> 00:02:05.368
OrderItemStyles.

49
00:02:07.740 --> 00:02:11.240
Something's goofing up, form, from.

50
00:02:11.240 --> 00:02:12.360
There we go.

51
00:02:12.360 --> 00:02:13.860
Let's just get everything working.

52
00:02:13.860 --> 00:02:15.320
We'll put a paragraph tag on here.

53
00:02:15.320 --> 00:02:17.800
So, that's Order List and we're gonna

54
00:02:17.800 --> 00:02:18.633
get an error.

55
00:02:18.633 --> 00:02:21.620
Cannot resolve /styles/OrderItemStyles.

56
00:02:21.620 --> 00:02:22.453
Why not?

57
00:02:25.320 --> 00:02:27.950
Oh, it's not up a level.

58
00:02:27.950 --> 00:02:29.350
It's in a level.

59
00:02:29.350 --> 00:02:30.250
There we go.

60
00:02:30.250 --> 00:02:31.770
So, we've got the component showing up

61
00:02:31.770 --> 00:02:32.840
on the page.

62
00:02:32.840 --> 00:02:34.760
Next up, we need to write a query

63
00:02:34.760 --> 00:02:36.890
to pull all of the user's order.

64
00:02:36.890 --> 00:02:38.720
So, let's head to our backend here.

65
00:02:38.720 --> 00:02:40.350
Open up our schema.

66
00:02:40.350 --> 00:02:43.530
We're going to get the orders and the input

67
00:02:43.530 --> 00:02:45.870
for the orders is actually going to have

68
00:02:45.870 --> 00:02:48.240
one of the inputs that have on the server side.

69
00:02:48.240 --> 00:02:49.997
So, if we look real quick at our generated

70
00:02:49.997 --> 00:02:53.770
prisma.graphql and we look open, look at

71
00:02:53.770 --> 00:02:56.900
our type Query, you'll see that we have

72
00:02:56.900 --> 00:02:58.613
our orders on here somewhere.

73
00:03:03.358 --> 00:03:05.330
There we go and all of the different inputs

74
00:03:05.330 --> 00:03:06.500
are you can have where.

75
00:03:06.500 --> 00:03:07.670
So, you could filter them based on

76
00:03:07.670 --> 00:03:09.380
what you want.

77
00:03:09.380 --> 00:03:10.930
You could order them.

78
00:03:10.930 --> 00:03:12.770
You could OrderOrder you inputs.

79
00:03:12.770 --> 00:03:14.840
You could skip a whole bunch et cetera, et cetera.

80
00:03:14.840 --> 00:03:17.370
You can just take this entire line right here,

81
00:03:17.370 --> 00:03:19.850
and paste it over top of here, but really

82
00:03:19.850 --> 00:03:21.960
the only one that we care about here

83
00:03:21.960 --> 00:03:23.347
is the orderBy.

84
00:03:23.347 --> 00:03:25.410
It's worth maybe leaving it in

85
00:03:25.410 --> 00:03:27.120
if you would like to have some more powerful

86
00:03:27.120 --> 00:03:29.440
queries in the future, but I'm gonna take it out

87
00:03:29.440 --> 00:03:30.840
just 'cause I know that this application

88
00:03:30.840 --> 00:03:32.990
doesn't need any of these.

89
00:03:32.990 --> 00:03:34.480
I just wanna grab all of the orders.

90
00:03:34.480 --> 00:03:36.110
Maybe, if the user had hundreds of orders,

91
00:03:36.110 --> 00:03:38.040
you might wanna paginate it and get into that,

92
00:03:38.040 --> 00:03:41.040
but I'm not worrying about that right now.

93
00:03:41.040 --> 00:03:41.940
So, we have these orders.

94
00:03:41.940 --> 00:03:44.970
Let's go into our Query.js

95
00:03:44.970 --> 00:03:47.817
and write a resolver for that

96
00:03:57.433 --> 00:03:59.190
and at this one it's pretty simple.

97
00:03:59.190 --> 00:04:01.190
So, first we're gonna get the user's id.

98
00:04:01.190 --> 00:04:03.140
So, let's pull it out, userId.

99
00:04:03.140 --> 00:04:04.853
We'll pull it out of the request.

100
00:04:06.890 --> 00:04:08.700
Now, we'll check if they're logged in

101
00:04:10.610 --> 00:04:12.315
and then, finally, we just have to return

102
00:04:12.315 --> 00:04:15.690
ctx.db.query.orders.

103
00:04:15.690 --> 00:04:18.320
The where is going to be the user.

104
00:04:18.320 --> 00:04:23.320
The id is equal to userId and, then,

105
00:04:23.350 --> 00:04:25.640
we'll pass along the info as well.

106
00:04:25.640 --> 00:04:27.570
Now, we'll head back to our client side

107
00:04:27.570 --> 00:04:29.773
OrderList and write up that query.

108
00:04:33.190 --> 00:04:35.210
It's equal to gql.

109
00:04:35.210 --> 00:04:36.689
Inside of that we'll have a query called

110
00:04:36.689 --> 00:04:38.189
USER_ORDERS_QUERY.

111
00:04:39.960 --> 00:04:42.020
Inside of that, we'll grab the orders.

112
00:04:42.020 --> 00:04:45.213
We will orderBy createdAt_ descending.

113
00:04:48.630 --> 00:04:51.390
So, we'll have the newest ones first

114
00:04:51.390 --> 00:04:53.030
and, then, inside of that for each order

115
00:04:53.030 --> 00:04:57.090
we just want the id, the total,

116
00:04:57.090 --> 00:05:02.090
the createdAt and, for each item that we have

117
00:05:02.190 --> 00:05:07.070
we want the id, the title, the price,

118
00:05:07.070 --> 00:05:10.170
description, quantity

119
00:05:13.100 --> 00:05:17.320
and the image and, of course, we can go here

120
00:05:18.300 --> 00:05:22.920
and write up a Query and the query is equal to

121
00:05:22.920 --> 00:05:24.530
the USER_ORDERS_QUERY.

122
00:05:24.530 --> 00:05:27.200
There's no variables that need to be passed here.

123
00:05:27.200 --> 00:05:29.300
Give yourself and arrow function.

124
00:05:29.300 --> 00:05:32.530
We'll destructure data and we'll destructure

125
00:05:32.530 --> 00:05:34.583
that one level deeper into the orders.

126
00:05:35.590 --> 00:05:38.670
Then, we'll also grab the loading in the error.

127
00:05:38.670 --> 00:05:41.360
Inside of here, we'll say if loading

128
00:05:41.360 --> 00:05:44.980
return, loading...

129
00:05:45.820 --> 00:05:49.993
that's if (error) return &lt;Error.

130
00:05:52.930 --> 00:05:55.193
I don't believe we imported error did we?

131
00:05:56.550 --> 00:05:57.383
Nope.

132
00:06:04.640 --> 00:06:07.440
Otherwise, let's console.log the orders

133
00:06:08.410 --> 00:06:10.500
and let's just put a paragraph tag in there.

134
00:06:10.500 --> 00:06:14.713
You have order.length orders.

135
00:06:15.950 --> 00:06:17.630
Cannot read property 'me'.

136
00:06:17.630 --> 00:06:21.023
I think we broke something on the backend.

137
00:06:22.160 --> 00:06:25.850
It's telling us that we have

138
00:06:25.850 --> 00:06:28.750
something has defined in resolvers

139
00:06:28.750 --> 00:06:30.730
but not in our schema.

140
00:06:30.730 --> 00:06:33.640
So, we defined orders here in our resolver

141
00:06:33.640 --> 00:06:38.030
but we didn't define it in, yes we did.

142
00:06:38.030 --> 00:06:40.020
Maybe I just have to save it.

143
00:06:40.020 --> 00:06:42.500
Ah, I accidentally deleted order.

144
00:06:42.500 --> 00:06:45.720
That took in an id and returned an Order.

145
00:06:45.720 --> 00:06:47.380
So, when I was writing orders,

146
00:06:47.380 --> 00:06:49.510
I accidentally replaced by other one

147
00:06:49.510 --> 00:06:53.320
and it was finding the order resolver here

148
00:06:53.320 --> 00:06:55.840
and saying hey that's not in the schema.

149
00:06:55.840 --> 00:06:56.893
So, that's helpful.

150
00:07:00.040 --> 00:07:01.493
One more error here.

151
00:07:03.440 --> 00:07:05.550
Cannot read 'orders' of undefined.

152
00:07:05.550 --> 00:07:08.170
So, they way that I will debug this

153
00:07:08.170 --> 00:07:12.220
is we'll take the destructing out,

154
00:07:12.220 --> 00:07:15.630
console.log d, data and just return

155
00:07:17.474 --> 00:07:19.923
and then delete the orders.length from here.

156
00:07:24.300 --> 00:07:25.410
Now, we'll see what kind of data

157
00:07:25.410 --> 00:07:26.810
we're actually getting back.

158
00:07:29.930 --> 00:07:33.683
Expected order type found createdAt_ descending.

159
00:07:37.520 --> 00:07:40.030
Ah, I see.

160
00:07:40.030 --> 00:07:41.230
We forget the d.

161
00:07:41.230 --> 00:07:42.080
Isn't that awesome?

162
00:07:42.080 --> 00:07:43.470
Did you mean createdAt?

163
00:07:43.470 --> 00:07:45.193
I forget the d at created.

164
00:07:46.250 --> 00:07:50.780
So, nothing was returned from rendor.

165
00:07:50.780 --> 00:07:52.763
That's probably fine.

166
00:07:53.620 --> 00:07:55.470
Guess we wanted to put a return here.

167
00:07:57.050 --> 00:07:58.210
Now, you see that there's

168
00:07:58.210 --> 00:07:59.300
an array of our order.

169
00:07:59.300 --> 00:08:01.870
So, we can take this data and put it back

170
00:08:01.870 --> 00:08:05.430
and destructure it into a variable

171
00:08:05.430 --> 00:08:06.523
called orders.

172
00:08:07.860 --> 00:08:10.430
We can console.log the orders here,

173
00:08:10.430 --> 00:08:13.433
and, then, we can return the orders.length.

174
00:08:15.280 --> 00:08:16.113
There we go.

175
00:08:16.113 --> 00:08:17.220
You have four orders.

176
00:08:17.220 --> 00:08:19.100
All right, we're in good shape.

177
00:08:19.100 --> 00:08:20.260
So, we have the query.

178
00:08:20.260 --> 00:08:23.110
Everything seems to be working just fine.

179
00:08:23.110 --> 00:08:25.700
At this point, now, it's just the ability

180
00:08:25.700 --> 00:08:27.430
to loop over all of our data.

181
00:08:27.430 --> 00:08:29.600
So, let's get into that now,

182
00:08:29.600 --> 00:08:31.280
and we'll just return.

183
00:08:31.280 --> 00:08:33.460
Inside of that we'll have a div and, then,

184
00:08:33.460 --> 00:08:38.460
h2 that says you have orders.length orders.

185
00:08:43.340 --> 00:08:44.680
Then, I'm just gonna make a quick

186
00:08:44.680 --> 00:08:46.800
little grid up here.

187
00:08:46.800 --> 00:08:48.090
So, const

188
00:08:51.084 --> 00:08:54.343
orderUL is equal to styled.ul.

189
00:08:55.980 --> 00:08:58.113
Inside of that, we'll display grid,

190
00:09:00.180 --> 00:09:02.400
grid-gap 4rem

191
00:09:04.330 --> 00:09:06.163
and grid-template-columns.

192
00:09:10.010 --> 00:09:12.673
Gonna be repeat auto-fit,

193
00:09:19.740 --> 00:09:23.787
minmax 40% 1fr.

194
00:09:26.810 --> 00:09:29.400
Okay, then we go down here and take that

195
00:09:29.400 --> 00:09:32.363
Ul that we just made and loop over them all.

196
00:09:43.967 --> 00:09:47.686
For each one, we want OrderItemStyles.

197
00:09:47.686 --> 00:09:48.920
That's just gonna be a list item

198
00:09:48.920 --> 00:09:50.090
that I've already defined

199
00:09:50.090 --> 00:09:52.110
in the styles directory.

200
00:09:52.110 --> 00:09:53.840
Then, we want a link tag.

201
00:09:53.840 --> 00:09:57.590
That's next link that will have a href

202
00:09:59.410 --> 00:10:04.410
that has a pathname of /order

203
00:10:04.830 --> 00:10:08.853
and a query id of order.id.

204
00:10:10.790 --> 00:10:12.560
Inside your link, you always need

205
00:10:12.560 --> 00:10:15.603
an anchor tag that has no href on it.

206
00:10:21.969 --> 00:10:26.140
Let's just output hi inside there.

207
00:10:26.140 --> 00:10:28.470
So, if this works, I should get,

208
00:10:28.470 --> 00:10:29.950
OrderUL is not defined.

209
00:10:29.950 --> 00:10:31.313
What did I name it up here?

210
00:10:38.633 --> 00:10:39.841
There we go.

211
00:10:39.841 --> 00:10:40.674
There we go.

212
00:10:40.674 --> 00:10:42.260
So, I've got four orders that I've made so far.

213
00:10:42.260 --> 00:10:44.070
You might have more or less.

214
00:10:44.070 --> 00:10:45.550
Doesn't really matter, but you see that

215
00:10:45.550 --> 00:10:47.870
for every order that we have, it's looping out

216
00:10:47.870 --> 00:10:49.270
and outputting hi.

217
00:10:49.270 --> 00:10:51.210
So, for each of the order, now we just need

218
00:10:51.210 --> 00:10:53.460
to output all of the data about it.

219
00:10:53.460 --> 00:10:55.060
So, I'm gonna give myself a div.

220
00:11:01.900 --> 00:11:03.500
So I'm gonna go inside this link here

221
00:11:03.500 --> 00:11:05.290
and give myself a div

222
00:11:05.290 --> 00:11:08.463
with the className order-meta.

223
00:11:11.220 --> 00:11:13.163
Inside of that, a paragraph tag,

224
00:11:15.090 --> 00:11:16.930
and it's gonna tell us how many items we have.

225
00:11:16.930 --> 00:11:20.430
So, we can take the order.items.reduce,

226
00:11:20.430 --> 00:11:22.250
and I'm just gonna use a,b in place

227
00:11:22.250 --> 00:11:24.133
of item and tally here.

228
00:11:32.051 --> 00:11:35.218
I'm gonna return a + b. Quantity.

229
00:11:36.900 --> 00:11:38.053
Start with zero.

230
00:11:39.700 --> 00:11:40.890
That tells me how many items are

231
00:11:40.890 --> 00:11:41.723
in each order.

232
00:11:41.723 --> 00:11:42.950
This one has 15 items.

233
00:11:42.950 --> 00:11:47.950
The rest just have one item, and then below

234
00:11:48.470 --> 00:11:49.793
that I could say items.

235
00:11:51.090 --> 00:11:53.100
Before we forget, we're gonna put

236
00:11:53.100 --> 00:11:56.353
a key on here of order.id,

237
00:12:00.640 --> 00:12:05.190
and I believe that if we click on them

238
00:12:05.190 --> 00:12:07.523
they should go the individual order page.

239
00:12:08.740 --> 00:12:10.500
That didn't work.

240
00:12:10.500 --> 00:12:12.163
Oh, I think it's lowercase n.

241
00:12:13.060 --> 00:12:14.610
These little things'll get you.

242
00:12:16.760 --> 00:12:18.330
Oh oh, look at this.

243
00:12:18.330 --> 00:12:20.270
Beautiful, that's showing us how

244
00:12:20.270 --> 00:12:21.530
many items are in it.

245
00:12:21.530 --> 00:12:23.680
If I go back, I see all of my orders, good.

246
00:12:23.680 --> 00:12:25.663
Let's keep on templating out.

247
00:12:27.090 --> 00:12:29.340
Below this paragraph, we'll have a p

248
00:12:31.089 --> 00:12:33.803
that says order.item.length.

249
00:12:34.890 --> 00:12:36.920
Another paragraph, we will use

250
00:12:36.920 --> 00:12:40.850
our formatDistance function

251
00:12:42.980 --> 00:12:45.400
and we'll pass, formatDistance will

252
00:12:45.400 --> 00:12:47.400
tell you like how long ago something happened.

253
00:12:47.400 --> 00:12:48.900
So, we'll say order.createdAt.

254
00:12:50.270 --> 00:12:51.380
That's when it was happened,

255
00:12:51.380 --> 00:12:53.390
and then we can just pass that new date

256
00:12:53.390 --> 00:12:54.500
and that's right now.

257
00:12:54.500 --> 00:12:56.700
Then, should tell us in human readable,

258
00:12:56.700 --> 00:12:58.600
hey this happened two days ago.

259
00:12:58.600 --> 00:13:01.150
The other ones happened two or three hours ago.

260
00:13:01.150 --> 00:13:01.983
That's really nice.

261
00:13:01.983 --> 00:13:03.250
I love that date functions library.

262
00:13:03.250 --> 00:13:04.370
I use it all the time.

263
00:13:04.370 --> 00:13:08.343
Next, we will take our formatMoney function,

264
00:13:09.670 --> 00:13:11.453
and pass the order.total.

265
00:13:14.253 --> 00:13:15.610
So, that's all the data about

266
00:13:15.610 --> 00:13:18.330
that specific order, and then below

267
00:13:18.330 --> 00:13:21.190
that we can also show some images that we have.

268
00:13:21.190 --> 00:13:22.590
So, right below this div give yourself

269
00:13:22.590 --> 00:13:26.613
another div that have a class of images,

270
00:13:28.520 --> 00:13:31.160
and we'll take the order.items and map over

271
00:13:31.160 --> 00:13:33.040
each of the item inside of it.

272
00:13:33.040 --> 00:13:35.940
Gonna take the item and, for each one

273
00:13:35.940 --> 00:13:38.170
of those, we'll return an image tag.

274
00:13:38.170 --> 00:13:39.490
First, we'll give it a key

275
00:13:40.530 --> 00:13:41.623
that's item.id.

276
00:13:44.520 --> 00:13:47.440
Source is gonna be the item.image

277
00:13:47.440 --> 00:13:50.223
and the alt is gonna be the item.title.

278
00:13:55.820 --> 00:13:59.170
Boom and I have some CSS that, regardless

279
00:13:59.170 --> 00:14:01.111
of how many items you actually have in here,

280
00:14:01.111 --> 00:14:04.200
it will nicely stretch them all the way across.

281
00:14:04.200 --> 00:14:06.140
So, that's our Orders page showing us

282
00:14:06.140 --> 00:14:07.380
how many order we have.

283
00:14:07.380 --> 00:14:08.840
If we want, we can click through

284
00:14:08.840 --> 00:14:10.780
to those and see all of the information

285
00:14:10.780 --> 00:14:13.343
in a little bit detail on that specific order.

286
00:14:14.230 --> 00:14:16.340
So, that's it for displaying orders on the page.

287
00:14:16.340 --> 00:14:18.190
Let's jump into the next section now.

