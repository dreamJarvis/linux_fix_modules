WEBVTT

1
00:00:00.870 --> 00:00:01.940
<v Wes>Let's jump over to the front end</v>

2
00:00:01.940 --> 00:00:04.730
and build the actual form to request a reset.

3
00:00:04.730 --> 00:00:08.370
So what I want you to do is open up the sign

4
00:00:09.340 --> 00:00:11.120
in.js component.

5
00:00:11.120 --> 00:00:14.800
I want you just to save that as RequestReset

6
00:00:14.800 --> 00:00:15.920
in your Components folder.

7
00:00:15.920 --> 00:00:17.800
Capital R, R.

8
00:00:17.800 --> 00:00:18.810
Then we're gonna do a few things.

9
00:00:18.810 --> 00:00:20.280
First we don't need that.

10
00:00:20.280 --> 00:00:24.040
And this SIGNIN_MUTATION is going to be called

11
00:00:26.114 --> 00:00:28.031
REQUEST_RESET_MUTATION.

12
00:00:29.670 --> 00:00:33.830
That REQUEST_RESET_MUTATION gets passed to here.

13
00:00:33.830 --> 00:00:36.496
There is no refetch query that gets passed here.

14
00:00:36.496 --> 00:00:39.490
Our state only needs an email address.

15
00:00:39.490 --> 00:00:41.830
The REQUEST_RESET_MUTATION only needs

16
00:00:41.830 --> 00:00:43.600
an email address passed to it.

17
00:00:43.600 --> 00:00:47.480
It then needs to call requestReset function,

18
00:00:47.480 --> 00:00:49.203
only passing in email.

19
00:00:51.410 --> 00:00:53.690
And back from that what does that return to us?

20
00:00:53.690 --> 00:00:56.550
What we can tell is we can just take a look at our schema

21
00:00:56.550 --> 00:00:58.840
and requestReset is a success message.

22
00:00:58.840 --> 00:01:01.453
So back from that we just want a message.

23
00:01:02.450 --> 00:01:03.690
Good.

24
00:01:03.690 --> 00:01:06.570
Got that, saveToState, we got our mutation.

25
00:01:06.570 --> 00:01:07.590
Buh buh buh buh.

26
00:01:07.590 --> 00:01:09.400
Okay, when we do have the mutation

27
00:01:09.400 --> 00:01:10.970
this is not gonna be called signup,

28
00:01:10.970 --> 00:01:13.460
it's gonna be called reset.

29
00:01:13.460 --> 00:01:16.950
Then when someone submits it we're going to prevent default

30
00:01:16.950 --> 00:01:19.113
and call reset.

31
00:01:20.120 --> 00:01:23.280
And then we just need to set the email to be nothing.

32
00:01:23.280 --> 00:01:26.003
Change this to say request a password reset.

33
00:01:31.170 --> 00:01:33.793
And we obviously don't need the password.

34
00:01:36.490 --> 00:01:40.163
And the buttons should say Request Reset.

35
00:01:41.000 --> 00:01:43.814
Let's try, go to our page called signup,

36
00:01:43.814 --> 00:01:45.323
and let's import that.

37
00:01:52.170 --> 00:01:53.700
And we now have this showing up.

38
00:01:53.700 --> 00:01:55.020
The one thing we don't have is

39
00:01:55.020 --> 00:01:57.140
how do we tell if it's been called or not?

40
00:01:57.140 --> 00:01:58.270
And there's two options here.

41
00:01:58.270 --> 00:02:01.630
First, we could either capture the success message

42
00:02:01.630 --> 00:02:04.230
that comes back from this right here.

43
00:02:04.230 --> 00:02:08.620
So we could say like const success

44
00:02:10.020 --> 00:02:11.660
is equal to await reset.

45
00:02:11.660 --> 00:02:13.940
And then we could take the success message,

46
00:02:13.940 --> 00:02:17.690
set it to state, and then display it somewhere down here.

47
00:02:17.690 --> 00:02:19.611
Or another way we can do it,

48
00:02:19.611 --> 00:02:20.760
and this is the way we're gonna be doing it now,

49
00:02:20.760 --> 00:02:22.690
is in addition to error and loading

50
00:02:22.690 --> 00:02:25.370
it will also pass you a called property,

51
00:02:25.370 --> 00:02:27.160
and the called property will be a Boolean

52
00:02:27.160 --> 00:02:29.670
whether or not this mutation has been called yet.

53
00:02:29.670 --> 00:02:32.350
So what we can do down here right below error

54
00:02:32.350 --> 00:02:34.773
we'll check if there's no error.

55
00:02:36.750 --> 00:02:39.163
And it's not loading.

56
00:02:41.120 --> 00:02:43.403
And it's being called.

57
00:02:44.850 --> 00:02:47.055
Then we're gonna have to give

58
00:02:47.055 --> 00:02:48.605
ourselves a paragraph, success.

59
00:02:50.210 --> 00:02:54.653
Check your email for a reset link.

60
00:02:58.060 --> 00:03:00.623
Now we'll go here, request a reset.

61
00:03:02.610 --> 00:03:04.817
It went, success, check your email for a reset link.

62
00:03:04.817 --> 00:03:08.940
And we check our terminal here.

63
00:03:08.940 --> 00:03:10.780
You see this is the ID.

64
00:03:10.780 --> 00:03:12.190
It's being logged, why?

65
00:03:12.190 --> 00:03:14.092
Let's flip over to our backend real quick,

66
00:03:14.092 --> 00:03:16.250
open up our mutation.

67
00:03:16.250 --> 00:03:17.610
You'll see that we've got the console.log,

68
00:03:17.610 --> 00:03:18.720
which is what this is.

69
00:03:18.720 --> 00:03:21.830
You generally don't want to console.log any of this,

70
00:03:21.830 --> 00:03:22.990
especially in production,

71
00:03:22.990 --> 00:03:25.790
because that way there's a potential

72
00:03:25.790 --> 00:03:28.140
that you're reset token, which is sensitive,

73
00:03:28.140 --> 00:03:31.071
you have to treat that as a password.

74
00:03:31.071 --> 00:03:34.170
That should never be in like server logs

75
00:03:34.170 --> 00:03:35.220
or things like that.

76
00:03:35.220 --> 00:03:37.690
So we wanna take that out of there

77
00:03:37.690 --> 00:03:39.510
so that it doesn't actually accidentally

78
00:03:39.510 --> 00:03:41.390
get into the wrong hands,

79
<<<<<<< HEAD
00:03:41.390 --> 00:03:45.870
and we are in good shape on the front end.
=======
00:03:49.090 --> 00:03:52.810
And I'm just gonna open up the sell.js.
>>>>>>> fe5715794962d2fe921d28b846e9dc0896d35c74

80
00:03:45.870 --> 00:03:49.200
Awesome, now we need to actually hit the reset page,

81
00:03:49.200 --> 00:03:51.373
so we need to have a new page.

82
00:03:52.360 --> 00:03:54.570
Let's go to our pages folder,

83
00:03:54.570 --> 00:03:58.270
and I'm just gonna open up the sell.js,

84
00:03:58.270 --> 00:04:01.450
resave that as reset.js.

85
00:04:01.450 --> 00:04:02.900
And let's just put a paragraph,

86
00:04:02.900 --> 00:04:05.810
Reset Your Password,

87
00:04:05.810 --> 00:04:08.523
and we should be able to visit /reset.

88
00:04:10.680 --> 00:04:12.028
There we go.

89
00:04:12.028 --> 00:04:12.861
It says reset your password.

90
00:04:12.861 --> 00:04:14.440
Now you see that I have,

91
00:04:14.440 --> 00:04:17.530
I'm just gonna go and grab an updated token here,

92
00:04:17.530 --> 00:04:20.380
and I'm gonna pass that as a resetToken,

93
00:04:20.380 --> 00:04:23.160
capital T, via query param.

94
00:04:23.160 --> 00:04:24.110
And let's just double check

95
00:04:24.110 --> 00:04:25.640
that we can display that on the page.

96
00:04:25.640 --> 00:04:28.793
So props.url.query.resetToken.

97
00:04:33.110 --> 00:04:35.030
And oh, a bit of an error there.

98
00:04:35.030 --> 00:04:36.773
Maybe it's just props.query.

99
00:04:38.500 --> 00:04:40.530
There we go, props.query.resetToken.

100
00:04:40.530 --> 00:04:42.640
That's how we have it, so what we're gonna do,

101
00:04:42.640 --> 00:04:46.500
is we're gonna create another component called reset.

102
00:04:46.500 --> 00:04:51.100
So go under components, make a capital R, reset.js.

103
00:04:51.100 --> 00:04:53.400
So I'm just gonna go ahead and take everything

104
00:04:53.400 --> 00:04:57.570
from our requestRest.js and paste it into Reset.js

105
00:04:57.570 --> 00:04:59.750
'cause they are going to be fairly similar.

106
00:04:59.750 --> 00:05:02.200
We wanna change this mutation here,

107
00:05:02.200 --> 00:05:04.350
there's three different spots?

108
00:05:04.350 --> 00:05:07.160
Yeah, three different spots that we are referencing it,

109
00:05:07.160 --> 00:05:09.633
and that's just going to be called RESET_MUTATION.

110
00:05:11.100 --> 00:05:14.180
That RESET_MUTATION is going to take in three arguments.

111
00:05:14.180 --> 00:05:16.230
So we no longer need to take in an email,

112
00:05:16.230 --> 00:05:19.530
we just need to take in the resetToken.

113
00:05:19.530 --> 00:05:22.250
That's the thing that's coming in via the URL here,

114
00:05:22.250 --> 00:05:24.480
and that is a string that is required.

115
00:05:24.480 --> 00:05:26.810
We also wanna take in the user's new password,

116
00:05:26.810 --> 00:05:30.550
which is password that is a string that is required.

117
00:05:30.550 --> 00:05:33.600
And then we also wanna take in the confirmPassword,

118
00:05:33.600 --> 00:05:35.140
'cause we're gonna ask them to pass a password

119
00:05:35.140 --> 00:05:37.740
and then confirm it so they don't goof that up.

120
00:05:37.740 --> 00:05:40.800
The reason why I am passing the confirmPassword

121
00:05:40.800 --> 00:05:43.840
to the backend is that I'm building an API,

122
00:05:43.840 --> 00:05:46.810
and regardless of where this API is being used,

123
00:05:46.810 --> 00:05:49.130
I always wanna make sure that the user confirms the password

124
00:05:49.130 --> 00:05:50.470
and we check it on the server,

125
00:05:50.470 --> 00:05:52.940
and this is not just a client-side check that I wanna do.

126
00:05:52.940 --> 00:05:54.490
You could do it on the client side,

127
00:05:54.490 --> 00:05:58.200
but that means if you ever were to have a reset mutation

128
00:05:58.200 --> 00:06:00.020
anywhere else in the application

129
00:06:00.020 --> 00:06:01.740
you would also need to do that.

130
00:06:01.740 --> 00:06:04.260
So I prefer to do it on the server side.

131
00:06:04.260 --> 00:06:07.548
Then here we are going to change the function from reset,

132
00:06:07.548 --> 00:06:09.243
requestRest to resetPassword.

133
00:06:11.770 --> 00:06:13.407
And that is going to take in

134
00:06:13.407 --> 00:06:16.070
these three variables that we have here,

135
00:06:16.070 --> 00:06:19.470
let me see if I can just fancy copy them.

136
00:06:19.470 --> 00:06:21.517
So the resetToken

137
00:06:24.920 --> 00:06:26.170
without the dollar sign is going

138
00:06:26.170 --> 00:06:28.380
to be equal to the variable there.

139
00:06:28.380 --> 00:06:31.070
The password is going to be equal to the password,

140
00:06:31.070 --> 00:06:35.653
and the confirmPassword is equal to the $confirmPassword.

141
00:06:37.530 --> 00:06:39.910
Good, back from that we are gonna return a user.

142
00:06:39.910 --> 00:06:42.750
So we wanna get their ID, we want their email,

143
00:06:42.750 --> 00:06:44.299
and we want their name.

144
00:06:44.299 --> 00:06:47.750
And that information's gonna be helpful in refetching

145
00:06:47.750 --> 00:06:49.430
the currently logged in user.

146
00:06:49.430 --> 00:06:51.360
Next, let's rename this Signin,

147
00:06:51.360 --> 00:06:53.850
both at the export and the definition,

148
00:06:53.850 --> 00:06:55.483
and we'll call that Reset.

149
00:06:56.660 --> 00:07:00.653
The state of this is going to take in just a password,

150
00:07:01.510 --> 00:07:03.020
which is set to nothing,

151
00:07:03.020 --> 00:07:06.540
and a confirmPassword, which is also set to nothing.

152
00:07:06.540 --> 00:07:07.810
We'll leave this saveToState

153
00:07:07.810 --> 00:07:09.710
'cause that's gonna be helpful for us.

154
00:07:10.870 --> 00:07:14.070
Then inside of our render we have this mutation

155
00:07:14.070 --> 00:07:15.470
which is a RESET_MUTATION.

156
00:07:15.470 --> 00:07:18.070
Our variables is not going to be this.state,

157
00:07:18.070 --> 00:07:20.100
but let's actually pass in object literal.

158
00:07:20.100 --> 00:07:21.300
So remove that.

159
00:07:21.300 --> 00:07:23.970
The three things that are needed to pass?

160
00:07:23.970 --> 00:07:26.817
Well, we need the resetToken, we need the password,

161
00:07:26.817 --> 00:07:28.540
and we need the confirmPassword.

162
00:07:28.540 --> 00:07:31.300
So if we go down here and run those,

163
00:07:31.300 --> 00:07:33.653
it's gonna be equal to this.props.resetToken.

164
00:07:35.240 --> 00:07:37.040
And remember, that's coming from the URL.

165
00:07:37.040 --> 00:07:38.230
So let's double check.

166
00:07:38.230 --> 00:07:41.720
Let's go back to our page, which is called resetToken,

167
00:07:41.720 --> 00:07:43.330
and we're not actually rendering

168
00:07:43.330 --> 00:07:45.020
it out on this page just yet.

169
00:07:45.020 --> 00:07:49.020
But it is going to be passed down to this one via props.

170
00:07:49.020 --> 00:07:52.143
The password is this.state.password.

171
00:07:53.140 --> 00:07:57.357
And the confirm password is this.state.confirmPassword.

172
00:07:58.370 --> 00:08:01.000
We can add a quick prop type for this reset token.

173
00:08:01.000 --> 00:08:03.960
I'll go up to the top here, say static

174
00:08:03.960 --> 00:08:07.223
propTypes is equal to.

175
00:08:08.390 --> 00:08:09.900
The one thing that is getting passed in

176
00:08:09.900 --> 00:08:11.360
is called a resetToken,

177
00:08:13.112 --> 00:08:16.057
and it's going to be propTypes.string.isRequired.

178
00:08:22.260 --> 00:08:24.330
And we need to import propTypes.

179
00:08:37.270 --> 00:08:38.530
So we've got our mutation.

180
00:08:38.530 --> 00:08:41.330
We are passing our variables successfully.

181
00:08:41.330 --> 00:08:44.050
Inside this field set now we are going to

182
00:08:44.050 --> 00:08:46.920
not say request a reset password reset,

183
00:08:46.920 --> 00:08:49.823
but we're going to say Reset Your Password.

184
00:08:51.290 --> 00:08:52.930
We'll have our error, that is good.

185
00:08:52.930 --> 00:08:55.640
We can get rid of this check here where error loading.

186
00:08:55.640 --> 00:08:57.790
So remove that.

187
00:08:57.790 --> 00:09:00.540
We no longer need the email

188
00:09:00.540 --> 00:09:02.950
because it's going to be a password.

189
00:09:02.950 --> 00:09:07.950
So I'm just going to change this over to password.

190
00:09:10.600 --> 00:09:13.030
Change this to password.

191
00:09:13.030 --> 00:09:14.970
So label for password.

192
00:09:14.970 --> 00:09:17.200
Type as well password, name is password,

193
00:09:17.200 --> 00:09:19.250
placeholder is password.

194
00:09:19.250 --> 00:09:21.890
Value, this.state.password.

195
00:09:21.890 --> 00:09:24.530
And onChange, saveToState, good.

196
00:09:24.530 --> 00:09:26.380
And then we need to just duplicate that

197
00:09:26.380 --> 00:09:28.240
for the confirmPassword.

198
00:09:28.240 --> 00:09:31.993
So, Confirm Your Password.

199
00:09:32.980 --> 00:09:37.733
I'll change all of these to, what did we call it in state?

200
00:09:39.093 --> 00:09:40.426
ConfirmPassword.

201
00:09:45.260 --> 00:09:47.060
And then we'll change the button that says

202
00:09:47.060 --> 00:09:50.593
Reset Your Password.

203
00:09:51.825 --> 00:09:53.050
I think that's good.

204
00:09:53.050 --> 00:09:55.290
Let's get it showing up on this page here.

205
00:09:55.290 --> 00:09:57.880
So we'll go back to our actual reset page

206
00:09:57.880 --> 00:09:59.430
and import that component.

207
00:09:59.430 --> 00:10:03.163
So, and we can actually just reuse this to Reset.

208
00:10:04.773 --> 00:10:07.680
And then we can go ahead and use the Reset component.

209
00:10:07.680 --> 00:10:10.900
And of course we need to pass the resetToken as a prop,

210
00:10:10.900 --> 00:10:13.750
'cause remember, we're expecting it to be passed in.

211
00:10:13.750 --> 00:10:16.730
That's why we went ahead and did a propType there.

212
00:10:16.730 --> 00:10:19.933
And we can pass it in by saying props.query.resetToken.

213
00:10:22.060 --> 00:10:24.530
Let's go ahead and give it a shot.

214
00:10:24.530 --> 00:10:27.580
So when we submit this form it is going to call

215
00:10:27.580 --> 00:10:31.470
the onSubmit, which will, in turn, prevent the default.

216
00:10:31.470 --> 00:10:33.920
It will run our mutation, which is called reset.

217
00:10:33.920 --> 00:10:36.240
And oh, actually, we do not need this.

218
00:10:36.240 --> 00:10:39.580
The setState actually can be changed to password.

219
00:10:39.580 --> 00:10:43.920
We can reset that and confirmPassword is nothing.

220
00:10:43.920 --> 00:10:45.860
So let's see if it worked.

221
00:10:45.860 --> 00:10:47.760
I'm gonna change my new password to wes,

222
00:10:47.760 --> 00:10:50.870
and oh-ho, a bit of an issue there.

223
00:10:50.870 --> 00:10:53.370
The type is not confirmPassword.

224
00:10:53.370 --> 00:10:54.720
The type is still password.

225
00:10:55.749 --> 00:10:56.582
There we go.

226
00:10:56.582 --> 00:10:58.420
And ready, cross your fingers, it might not work,

227
00:10:58.420 --> 00:10:59.343
probably not.

228
00:11:00.370 --> 00:11:01.203
Baaa.

229
00:11:01.203 --> 00:11:02.840
Shoot, this token is either invalid,

230
00:11:02.840 --> 00:11:05.150
oh, you know why, it's 'cause I had lunch.

231
00:11:05.150 --> 00:11:06.586
I had lunch in between.

232
00:11:06.586 --> 00:11:09.010
So that's the problem.

233
00:11:09.010 --> 00:11:12.228
But what we do need to do is go ahead

234
00:11:12.228 --> 00:11:14.620
and make a new token for ourselves.

235
00:11:14.620 --> 00:11:17.480
So yours might have worked, but let's hold on a second.

236
00:11:17.480 --> 00:11:19.040
I'm gonna go ahead and make a new token.

237
00:11:19.040 --> 00:11:23.483
So go back to that signup page.

238
00:11:24.970 --> 00:11:26.253
Put my email in.

239
00:11:28.207 --> 00:11:29.040
Request a reset.

240
00:11:29.040 --> 00:11:31.720
Good, obviously we haven't hooked up or email yet,

241
00:11:31.720 --> 00:11:34.470
so I need to go either into the console

242
00:11:34.470 --> 00:11:36.824
or into my database to get that token.

243
00:11:36.824 --> 00:11:39.383
So we'll do that now.

244
00:11:47.610 --> 00:11:51.023
So we're gonna go back and swap out that reset token.

245
00:11:52.570 --> 00:11:53.403
Good.

246
00:11:53.403 --> 00:11:55.233
Now I'm gonna change my password to wes.

247
00:11:56.067 --> 00:11:58.568
Reset your password, boom, looks like it worked.

248
00:11:58.568 --> 00:12:00.670
I don't really know if it worked

249
00:12:00.670 --> 00:12:03.480
because we didn't provide any success message.

250
00:12:03.480 --> 00:12:06.730
But what is actually gonna happen is if it worked properly

251
00:12:06.730 --> 00:12:08.490
it's actually gonna log us in.

252
00:12:08.490 --> 00:12:10.787
So if we go ahead and sign out here

253
00:12:10.787 --> 00:12:13.630
and try to sign in it looks like

254
00:12:13.630 --> 00:12:14.830
we are immediately signed in there,

255
00:12:14.830 --> 00:12:17.160
and that's the kind of same idea I wanna have

256
00:12:17.160 --> 00:12:18.500
when you request a reset.

257
00:12:18.500 --> 00:12:21.190
So how do we do that?

258
00:12:21.190 --> 00:12:22.750
Well the answer to that is we use something

259
00:12:22.750 --> 00:12:26.600
called a refetch query in our mutation.

260
00:12:26.600 --> 00:12:29.230
So if we open up our user component,

261
00:12:29.230 --> 00:12:31.704
and you'll see that we have this CURRENT_USER_QUERY,

262
00:12:31.704 --> 00:12:34.030
we actually want to refetch the current user query

263
00:12:34.030 --> 00:12:36.660
so that if the person has changed,

264
00:12:36.660 --> 00:12:38.600
if the currently logged in person has changed,

265
00:12:38.600 --> 00:12:41.050
then Apollo will automatically go back to the server

266
00:12:41.050 --> 00:12:43.100
and refetch who is currently signed in.

267
00:12:43.100 --> 00:12:44.360
It's exactly what we wanna do.

268
00:12:44.360 --> 00:12:47.470
So we'll go back to our reset.js,

269
00:12:47.470 --> 00:12:51.120
go up to the top, and we'll import the,

270
00:12:51.120 --> 00:12:52.647
what was it called?

271
00:12:52.647 --> 00:12:53.700
CURRENT_USER_QUERY.

272
00:12:53.700 --> 00:12:55.330
And the reason why we can import it

273
00:12:55.330 --> 00:12:57.630
is because if you go to the bottom of user.js

274
00:12:57.630 --> 00:13:01.000
you'll see that we've exported it as a named export.

275
00:13:01.000 --> 00:13:05.790
So import current user query from the User component.

276
00:13:05.790 --> 00:13:08.770
And then we can go down to our mutation here,

277
00:13:08.770 --> 00:13:12.640
and we can say refetch queries is equal to,

278
00:13:12.640 --> 00:13:14.460
and it's an array of queries

279
00:13:14.460 --> 00:13:16.070
'cause it could be multiple.

280
00:13:16.070 --> 00:13:18.987
And the query that we want to refetch

281
00:13:20.200 --> 00:13:23.467
is going to be called the CURRENT_USER_QUERY.

282
00:13:24.840 --> 00:13:29.840
So what this means is that when this mutation

283
00:13:29.970 --> 00:13:32.200
has successfully been called,

284
00:13:32.200 --> 00:13:35.660
are there other queries that should be refetched

285
00:13:35.660 --> 00:13:37.410
and refreshed of their data.

286
00:13:37.410 --> 00:13:40.130
And of course, we want to refresh the CURRENT_USER_QUERY.

287
00:13:40.130 --> 00:13:44.163
So, let's try the whole sort of roundtrip once more.

288
00:13:45.620 --> 00:13:46.983
Gonna reset my password.

289
00:13:48.281 --> 00:13:50.433
Gonna go here and refresh the data.

290
00:13:51.600 --> 00:13:53.480
Gonna open it up.

291
00:13:53.480 --> 00:13:55.630
Gonna grab my token.

292
00:13:55.630 --> 00:13:59.702
Gonna go to the reset page and pass in my new token.

293
00:13:59.702 --> 00:14:02.940
You see, oh, make sure that you're signed out.

294
00:14:02.940 --> 00:14:05.023
And then I'm gonna reset my new password.

295
00:14:06.270 --> 00:14:09.560
Run it and bam you see that this automatically changed.

296
00:14:09.560 --> 00:14:10.920
I find that that's probably the best way

297
00:14:10.920 --> 00:14:12.480
to show the user that it worked,

298
00:14:12.480 --> 00:14:14.710
because you're automatically signed in.

299
00:14:14.710 --> 00:14:17.250
You could put some sort of success message here as well,

300
00:14:17.250 --> 00:14:18.500
but I find that just clearing it.

301
00:14:18.500 --> 00:14:21.080
You could also just route to the homepage

302
00:14:21.080 --> 00:14:23.005
and show the user that they're signed in.

303
00:14:23.005 --> 00:14:24.540
That's really, really nice.

304
00:14:24.540 --> 00:14:27.030
You see that there's no refreshing of the page

305
00:14:27.030 --> 00:14:30.130
or telling the user to check their email or something

306
00:14:30.130 --> 00:14:33.565
or to relog in because if they have this token

307
00:14:33.565 --> 00:14:35.960
there's no reason why you couldn't

308
00:14:35.960 --> 00:14:37.027
just immediately log them in,

309
00:14:37.027 --> 00:14:38.680
and that's exactly what we're doing here.

310
00:14:38.680 --> 00:14:42.240
So that whole reset flow seems to be working.

311
00:14:42.240 --> 00:14:43.990
The missing piece that we have now

312
00:14:43.990 --> 00:14:45.810
is that I have to go into the database

313
00:14:45.810 --> 00:14:47.853
and copy this token right here.

314
00:14:47.853 --> 00:14:49.360
What we're gonna do in the next video

315
00:14:49.360 --> 00:14:51.840
is actually email this token to the user

316
00:14:51.840 --> 00:14:53.630
so that we can confirm that

317
00:14:53.630 --> 00:14:55.510
if they are resetting their password

318
00:14:55.510 --> 00:14:57.810
then they must have access to that email address,

319
00:14:57.810 --> 00:15:00.110
otherwise, they shouldn't be allowed to do so.

