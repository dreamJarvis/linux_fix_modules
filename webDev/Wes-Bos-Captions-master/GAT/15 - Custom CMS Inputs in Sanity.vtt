WEBVTT

1
00:00:01.120 --> 00:00:04.290
(upbeat music)

2
00:00:04.290 --> 00:00:06.350
<v Instructor>Take a look at this price input here</v>

3
00:00:06.350 --> 00:00:08.750
and we're just inputting cents

4
00:00:08.750 --> 00:00:10.960
and that's often confusing to editors.

5
00:00:10.960 --> 00:00:14.680
So what would be nice is as we type the data here,

6
00:00:14.680 --> 00:00:17.710
it would display the actual price to the user

7
00:00:18.550 --> 00:00:20.730
or to the, sorry, the editor, not the end user.

8
00:00:20.730 --> 00:00:23.370
That's gonna happen on the front end

9
00:00:23.370 --> 00:00:24.640
and then they would be able to say,

10
00:00:24.640 --> 00:00:26.790
okay, I'm typing this correctly.

11
00:00:26.790 --> 00:00:29.830
And this is the perfect use case for custom input components

12
00:00:29.830 --> 00:00:34.830
in Gatsby so even though this thing looks like Gatsby CMS,

13
00:00:35.120 --> 00:00:38.490
it's just a react based CMS called sanity studio

14
00:00:38.490 --> 00:00:40.340
and we're actually hosting it ourselves.

15
00:00:40.340 --> 00:00:42.530
So you will be able to deploy it to sanity

16
00:00:42.530 --> 00:00:44.920
and host it on sanity.io

17
00:00:44.920 --> 00:00:47.930
but we have full control over the code that runs here.

18
00:00:47.930 --> 00:00:51.670
Our hands are not tied, so that's pretty cool.

19
00:00:51.670 --> 00:00:55.120
So actually one more thing, this is kind of unrelated,

20
00:00:55.120 --> 00:00:57.560
but I thought this would be kind of a cool challenge

21
00:00:57.560 --> 00:01:01.670
to somebody is if you want to have a little bit more work

22
00:01:01.670 --> 00:01:04.250
in sanity studio, I think it would be really cool is

23
00:01:04.250 --> 00:01:09.250
if you could put the little vegetarian symbol

24
00:01:09.310 --> 00:01:13.760
next to the pizza name, if all of the toppings of a pizza

25
00:01:13.760 --> 00:01:17.000
are vegetarian, so you'd have to go into the preview,

26
00:01:17.000 --> 00:01:19.840
select all the toppings and loop over them

27
00:01:19.840 --> 00:01:21.900
and make sure all of them are.

28
00:01:21.900 --> 00:01:23.140
That'd be kind of a cool little challenge.

29
00:01:23.140 --> 00:01:26.000
It's not part of this course, but if you're looking for

30
00:01:26.000 --> 00:01:27.800
trying to do something off on your own

31
00:01:27.800 --> 00:01:31.410
I suggest that you try that.

32
00:01:31.410 --> 00:01:35.130
All right, let's go into, we're still in sanity

33
00:01:35.130 --> 00:01:39.220
and we are going to, I think, we'll create a new folder.

34
00:01:39.220 --> 00:01:42.520
You might have a folder here called components.

35
00:01:42.520 --> 00:01:45.590
If you do not have a folder called components like me

36
00:01:45.590 --> 00:01:49.130
create a folder called components and this is the folder

37
00:01:49.130 --> 00:01:51.750
where we're going to put all of our custom input components

38
00:01:51.750 --> 00:01:53.230
for sanity studio.

39
00:01:53.230 --> 00:01:57.096
Then inside of that, we'll make a PriceInput,

40
00:01:57.096 --> 00:02:00.990
capital P capital I dot js

41
00:02:02.040 --> 00:02:05.960
and we will import react from react

42
00:02:05.960 --> 00:02:10.960
and then we'll make our export default function, PriceInput

43
00:02:13.820 --> 00:02:16.150
and then just return from that.

44
00:02:16.150 --> 00:02:21.150
Let's just return a div and a paragraph.

45
00:02:21.280 --> 00:02:25.083
Maybe let's do an h2, that says the price.

46
00:02:26.870 --> 00:02:29.050
I like to just do a very basic component

47
00:02:29.050 --> 00:02:30.700
and then get it showing up in here

48
00:02:30.700 --> 00:02:32.660
and then I'll come back and we'll actually hook up

49
00:02:32.660 --> 00:02:34.120
all of our details so.

50
00:02:34.120 --> 00:02:36.840
Next thing we need to do is go into our schema,

51
00:02:36.840 --> 00:02:40.820
go into pizza.js and we wanna import that price component

52
00:02:40.820 --> 00:02:42.030
up at the top here.

53
00:02:42.030 --> 00:02:45.740
So import price input from,

54
00:02:45.740 --> 00:02:50.660
I got to go up a level into the components folder

55
00:02:50.660 --> 00:02:52.143
and grab price input.

56
00:02:53.170 --> 00:02:58.170
And then we go to our config of that schema.

57
00:02:58.390 --> 00:03:01.230
And so you say input component

58
00:03:03.480 --> 00:03:05.943
is going to be our price input.

59
00:03:07.790 --> 00:03:12.090
And by doing this, we are overriding the built in component

60
00:03:12.090 --> 00:03:15.270
from sanity and saying, no, no, no,

61
00:03:15.270 --> 00:03:17.910
I'm gonna bring my own component,

62
00:03:17.910 --> 00:03:22.020
I'll handle the inputting in the saving of data ourselves

63
00:03:22.020 --> 00:03:24.683
and sanity will give us a bunch of helpers for that.

64
00:03:25.580 --> 00:03:29.513
Looks like totally goofed it up.

65
00:03:32.220 --> 00:03:37.220
So now when I go to edit one of them it just says the price.

66
00:03:37.870 --> 00:03:42.870
Looks like I accidentally replaced the entire thing

67
00:03:43.120 --> 00:03:44.100
with its own input.

68
00:03:44.100 --> 00:03:46.610
So you could replace the entire form

69
00:03:46.610 --> 00:03:47.970
and that's not what we wanna do.

70
00:03:47.970 --> 00:03:50.290
I accidentally put that on the entire schema.

71
00:03:50.290 --> 00:03:52.630
We wanna put that on the price input.

72
00:03:52.630 --> 00:03:56.633
So remove that and we'll go down to where it says price

73
00:03:56.633 --> 00:03:57.466
there we go.

74
00:03:57.466 --> 00:03:59.733
To do I even added it to do good.

75
00:04:01.460 --> 00:04:06.460
Now I bet when this re-bundles we see the price, right?

76
00:04:07.050 --> 00:04:10.060
So now it's up to us to render out the input

77
00:04:10.060 --> 00:04:12.010
and everything else that controls

78
00:04:12.010 --> 00:04:14.880
how this one field is done.

79
00:04:14.880 --> 00:04:19.880
So I'll make this smaller again, close up my sidebar.

80
00:04:20.120 --> 00:04:21.660
I would go to our price input

81
00:04:22.550 --> 00:04:25.650
and let's start to scaffold out the markup that we need.

82
00:04:25.650 --> 00:04:30.650
So first, what we want to do is to take the title

83
00:04:32.400 --> 00:04:37.400
of this input type and we can actually grab that

84
00:04:37.400 --> 00:04:40.330
by destructuring the props of the price input.

85
00:04:40.330 --> 00:04:44.500
So when sanity renders out this component for us,

86
00:04:44.500 --> 00:04:47.600
it will pass us a bunch of props.

87
00:04:47.600 --> 00:04:50.500
I can show you that by if we inspect it

88
00:04:50.500 --> 00:04:52.453
and then go to a react dev tools,

89
00:04:53.860 --> 00:04:58.090
you'll see here that there are a bunch of different props

90
00:04:58.090 --> 00:04:59.680
that get passed.

91
00:04:59.680 --> 00:05:02.893
I'm sorry, it's so small let me try to zoom in there.

92
00:05:04.200 --> 00:05:09.200
Says description, price of pizza in cents, input component,

93
00:05:09.450 --> 00:05:12.420
JSON type, name, preview, type.

94
00:05:12.420 --> 00:05:16.240
So all of the data that sanity used to have

95
00:05:16.240 --> 00:05:17.520
to render out the component,

96
00:05:17.520 --> 00:05:20.070
they're actually giving it to you via props.

97
00:05:20.070 --> 00:05:22.590
So what we can do is we can restructure those values

98
00:05:22.590 --> 00:05:23.423
that we need.

99
00:05:23.423 --> 00:05:26.780
We need to restructure the type, the value,

100
00:05:26.780 --> 00:05:30.523
the on change handler and the input component.

101
00:05:33.220 --> 00:05:34.970
And that's a RAF I'll show you how to do that

102
00:05:34.970 --> 00:05:36.380
in just a second.

103
00:05:36.380 --> 00:05:40.710
Okay, then we can go into here and say type.title

104
00:05:46.422 --> 00:05:48.240
and you see that there's price, that's good.

105
00:05:48.240 --> 00:05:50.930
So we don't wanna hard code the word price,

106
00:05:50.930 --> 00:05:55.930
because this input might be used for multiple fields

107
00:05:56.900 --> 00:05:59.700
and if we can make it dynamic by doing this,

108
00:05:59.700 --> 00:06:00.790
that's all better.

109
00:06:00.790 --> 00:06:04.080
Especially like also sometimes I do this stuff for clients

110
00:06:04.080 --> 00:06:07.620
and then they'll be all like hard code something like price

111
00:06:07.620 --> 00:06:09.210
and then they'll come around and be like,

112
00:06:09.210 --> 00:06:12.190
hey, I was using that new component for like another,

113
00:06:12.190 --> 00:06:13.180
another input field

114
00:06:13.180 --> 00:06:16.060
and I don't know where to change this one word.

115
00:06:16.060 --> 00:06:19.350
I can't find it and they go, oh, I hard-coded that.

116
00:06:19.350 --> 00:06:21.800
Sorry about that.(laughs)

117
00:06:21.800 --> 00:06:26.800
Then what we wanna do is give ourselves a paragraph

118
00:06:27.990 --> 00:06:30.140
and we'll say type.description,

119
00:06:30.140 --> 00:06:32.430
just in case there is a description.

120
00:06:32.430 --> 00:06:35.120
And I believe we did put a description on it.

121
00:06:35.120 --> 00:06:36.760
There we go, price of pizza in cents.

122
00:06:36.760 --> 00:06:39.540
One kind of thing about making your own components

123
00:06:39.540 --> 00:06:42.600
is the styling does not perfectly match

124
00:06:42.600 --> 00:06:44.840
that of sanity studio.

125
00:06:44.840 --> 00:06:46.720
And the reasoning behind that is because

126
00:06:46.720 --> 00:06:49.345
sanity studio adds a bunch of classes to it.

127
00:06:49.345 --> 00:06:51.310
There are docs on how to do that

128
00:06:51.310 --> 00:06:53.470
but from how I've seen it,

129
00:06:53.470 --> 00:06:57.570
it's more trouble than it's worth to get into it.

130
00:06:57.570 --> 00:06:59.220
I've talked to them and they said, they're gonna make that

131
00:06:59.220 --> 00:07:00.440
a bit easier in the future.

132
00:07:00.440 --> 00:07:02.910
So that might have changed as well.

133
00:07:02.910 --> 00:07:06.550
Then give yourself as an input, a type of,

134
00:07:06.550 --> 00:07:09.220
actually I was gonna just hard code number,

135
00:07:09.220 --> 00:07:12.650
but I believe we can say, well, I don't know

136
00:07:12.650 --> 00:07:14.823
let's look at a react dev tools component,

137
00:07:16.090 --> 00:07:21.090
price input, type.name or price,

138
00:07:24.850 --> 00:07:26.200
I think type.name.

139
00:07:26.200 --> 00:07:31.200
So let's do it. Type.name, okay?

140
00:07:32.190 --> 00:07:37.190
Then we also want the value to be the value

141
00:07:37.570 --> 00:07:38.770
that would be structured here.

142
00:07:38.770 --> 00:07:43.393
You see that we've already saved this one, so 2256.

143
00:07:44.460 --> 00:07:47.750
And then anytime in react that you put a value

144
00:07:47.750 --> 00:07:52.750
into an input, you must also supply an on change handler.

145
00:07:53.490 --> 00:07:55.540
And here's where we need a little bit of

146
00:07:55.540 --> 00:07:56.960
sanity special sauce.

147
00:07:56.960 --> 00:07:59.810
So far this is just a plain react component

148
00:07:59.810 --> 00:08:03.630
but in order for this react component to work well

149
00:08:03.630 --> 00:08:04.640
with sanity studio,

150
00:08:04.640 --> 00:08:08.230
we need to import a little helper function from sanity.

151
00:08:08.230 --> 00:08:10.260
So we'll go up here and we'll say import

152
00:08:10.260 --> 00:08:13.680
it's called PatchEvent, capital P capital E,

153
00:08:13.680 --> 00:08:18.600
and then we also want these set and unset methods from,

154
00:08:18.600 --> 00:08:21.880
and then here, this is gonna be a little long part colon

155
00:08:21.880 --> 00:08:26.830
at sanity forward slash form dash builder

156
00:08:26.830 --> 00:08:28.950
forward slash patch event.

157
00:08:28.950 --> 00:08:30.290
And I didn't find that out.

158
00:08:30.290 --> 00:08:31.890
I just grabbed it from their example.

159
00:08:31.890 --> 00:08:34.460
So likely you'd just be copying it from this

160
00:08:34.460 --> 00:08:36.370
or from one of their examples.

161
00:08:36.370 --> 00:08:39.850
Then we can do here is go down to our on change handler.

162
00:08:39.850 --> 00:08:41.270
And this is where we start to do

163
00:08:41.270 --> 00:08:43.470
a little bit of special sauce.

164
00:08:43.470 --> 00:08:47.180
So we need to go up here and import a couple of things.

165
00:08:47.180 --> 00:08:49.780
We need this thing called PatchEvent,

166
00:08:49.780 --> 00:08:53.530
and we also need to methods called set and unset.

167
00:08:53.530 --> 00:08:55.570
And we are gonna import that from,

168
00:08:55.570 --> 00:08:58.450
now this is the sanity special web pack import.

169
00:08:58.450 --> 00:09:02.670
So we have to type part colon at sanity, forward slash

170
00:09:02.670 --> 00:09:07.560
form dash builder forward slash patch dash event.

171
00:09:07.560 --> 00:09:09.070
So it's a little bit long,

172
00:09:09.070 --> 00:09:11.650
but I just copied that from one of their examples,

173
00:09:11.650 --> 00:09:14.410
you can go into the docs and find that.

174
00:09:14.410 --> 00:09:16.930
Then what we'll do is we'll make it a little function here

175
00:09:16.930 --> 00:09:19.410
called createPatchFrom(value)

176
00:09:24.110 --> 00:09:25.830
and then what we'll do is

177
00:09:25.830 --> 00:09:30.830
we'll run this patch event function dot from,

178
00:09:32.140 --> 00:09:36.380
and then we check if the value is nothing,

179
00:09:36.380 --> 00:09:38.190
then we will unset it.

180
00:09:38.190 --> 00:09:41.960
And then if the value is something, then we will set it.

181
00:09:41.960 --> 00:09:44.600
And that's just a long way of saying

182
00:09:44.600 --> 00:09:47.210
these two functions here set and unset

183
00:09:47.210 --> 00:09:51.880
allow us to obviously set values or remove them completely

184
00:09:51.880 --> 00:09:54.820
if that value is empty.

185
00:09:54.820 --> 00:09:57.410
Then we need to patch that through to sanity special studio.

186
00:09:57.410 --> 00:09:59.800
So this is the, like, I think the only part

187
00:09:59.800 --> 00:10:01.240
where it gets a little bit custom

188
00:10:01.240 --> 00:10:03.460
and you only need to do this if you wanna create

189
00:10:03.460 --> 00:10:05.440
your own custom input.

190
00:10:05.440 --> 00:10:09.060
So we'll say if the value is equal to nothing,

191
00:10:09.060 --> 00:10:14.060
then question mark we will unset that, we'll delete it.

192
00:10:14.520 --> 00:10:18.790
Otherwise we will set the value that comes in

193
00:10:18.790 --> 00:10:20.430
and we have passed the value.

194
00:10:20.430 --> 00:10:21.800
So what's gonna happen is

195
00:10:21.800 --> 00:10:24.250
we're gonna take whatever the user has typed

196
00:10:24.250 --> 00:10:26.080
into this input box.

197
00:10:26.080 --> 00:10:29.720
We're gonna pass it to this create patch from

198
00:10:29.720 --> 00:10:32.380
it's gonna be like 500 or something like that.

199
00:10:32.380 --> 00:10:34.560
And then we're just gonna quickly check

200
00:10:34.560 --> 00:10:37.480
if that value is nothing, then we're gonna unset it.

201
00:10:37.480 --> 00:10:39.187
And then if it is something we are going to set it.

202
00:10:39.187 --> 00:10:43.130
And the last thing we need to do is just wrap it in number

203
00:10:43.130 --> 00:10:44.870
and the reason we do that is because

204
00:10:44.870 --> 00:10:47.600
even if you have an input type of number,

205
00:10:47.600 --> 00:10:49.380
it still comes in as a string.

206
00:10:49.380 --> 00:10:54.300
So we wanna coerce it into a true number in JavaScript.

207
00:10:54.300 --> 00:10:59.300
Okay, so then what we do as we take our event on change

208
00:10:59.830 --> 00:11:04.393
of this react component, and we run our create patch from,

209
00:11:05.790 --> 00:11:10.790
we pass it, the event.target, which is the input itself,

210
00:11:12.630 --> 00:11:14.630
and then the value in there.

211
00:11:14.630 --> 00:11:15.540
Whoo! All right!

212
00:11:15.540 --> 00:11:20.040
So real quick on change, take the value, pass it to sanity

213
00:11:20.040 --> 00:11:23.290
and then sanity is going to patch it to itself

214
00:11:23.290 --> 00:11:25.990
for things like live updating in live preview.

215
00:11:25.990 --> 00:11:30.280
So it uses its own little internal API and set or unset it.

216
00:11:30.280 --> 00:11:35.103
So if we go down to our actual input now, there we go.

217
00:11:37.530 --> 00:11:39.610
I'm not able to type into it.

218
00:11:39.610 --> 00:11:43.390
And I believe, oh, that's because we forgot one more thing

219
00:11:43.390 --> 00:11:47.170
and that is a ref to the actual input component.

220
00:11:47.170 --> 00:11:50.100
So I'll say ref is equal to input component

221
00:11:50.100 --> 00:11:53.850
and what this does is it tells sanity,

222
00:11:53.850 --> 00:11:57.080
this is the actual input

223
00:11:57.080 --> 00:12:00.210
where the changing of the value happens

224
00:12:00.210 --> 00:12:03.820
and the rest of this stuff is just UI for the component.

225
00:12:03.820 --> 00:12:06.310
This does nothing to do with the actual data

226
00:12:06.310 --> 00:12:07.610
that is saved or unsaved.

227
00:12:07.610 --> 00:12:09.390
So now if I give that a save,

228
00:12:09.390 --> 00:12:12.760
I bet we'll be able to at least get it back

229
00:12:12.760 --> 00:12:15.840
to where we had it before this video started.

230
00:12:15.840 --> 00:12:17.563
So change it to $25

231
00:12:19.950 --> 00:12:21.480
not working for me.

232
00:12:21.480 --> 00:12:24.730
Let me take a quick look at my answer here.

233
00:12:24.730 --> 00:12:27.540
There is an accessibility thing.

234
00:12:27.540 --> 00:12:29.090
I'm not sure if that has anything to do with

235
00:12:29.090 --> 00:12:30.730
our problem here, but let's put it in.

236
00:12:30.730 --> 00:12:35.140
So we need to add a focus state to our price input,

237
00:12:35.140 --> 00:12:40.140
so that if sanity ever needs to focus that input, it can.

238
00:12:40.170 --> 00:12:41.980
So we'll take our price input

239
00:12:42.900 --> 00:12:47.340
and we'll set the focus property of it.

240
00:12:47.340 --> 00:12:52.340
And we'll say that is a function that says this dot

241
00:12:52.550 --> 00:12:56.230
underscore input element.focus.

242
00:12:56.230 --> 00:12:58.720
So whenever sanity needs to focus this method,

243
00:12:58.720 --> 00:13:01.530
essentially all we're doing here is we're exposing

244
00:13:01.530 --> 00:13:03.950
a focus method for sanity to run.

245
00:13:03.950 --> 00:13:05.880
I don't believe that it will be our issue though.

246
00:13:05.880 --> 00:13:06.883
Let's take a look.

247
00:13:10.690 --> 00:13:12.690
Nope, that was not our issue.

248
00:13:12.690 --> 00:13:14.590
There's little arrows. Don't do anything.

249
00:13:14.590 --> 00:13:16.260
All right, so let's debug this real quick.

250
00:13:16.260 --> 00:13:20.053
We've got our type, our value are on change.

251
00:13:23.430 --> 00:13:25.090
One question I have here is

252
00:13:25.090 --> 00:13:28.860
if we were to inspect this price input in our dev tools here

253
00:13:33.040 --> 00:13:36.433
see 2256, now if I were to change that,

254
00:13:38.010 --> 00:13:42.143
it's like the on change handler is not being called.

255
00:13:44.030 --> 00:13:46.420
So what I'll do is I'll go up here.

256
00:13:46.420 --> 00:13:49.403
I'll say console.log. Does it work?

257
00:13:57.350 --> 00:13:58.690
Try to type in here.

258
00:13:58.690 --> 00:14:02.450
Okay, so we know that this is getting called

259
00:14:02.450 --> 00:14:06.000
and I wonder if it's because we didn't return

260
00:14:06.000 --> 00:14:07.970
this patch event from.

261
00:14:07.970 --> 00:14:10.413
Let's try that. That was not it.

262
00:14:12.920 --> 00:14:15.090
You see that this on change is gray.

263
00:14:15.090 --> 00:14:17.270
We didn't actually use it.

264
00:14:17.270 --> 00:14:20.870
So (laughs) it was a little bit more to this.

265
00:14:20.870 --> 00:14:23.060
So if we wrapped this in on change,

266
00:14:23.060 --> 00:14:25.460
that will finally fix it.

267
00:14:25.460 --> 00:14:27.810
Probably not though. Hey, there we go.

268
00:14:27.810 --> 00:14:28.960
All right, you see that

269
00:14:30.070 --> 00:14:35.000
as I'm typing the data as now updating, which is great.

270
00:14:35.000 --> 00:14:39.310
So what I wanna do now is to stick the formatted version

271
00:14:39.310 --> 00:14:43.530
of this price up here so that as people type in it,

272
00:14:43.530 --> 00:14:45.660
they can see a live version of that.

273
00:14:45.660 --> 00:14:47.380
So first thing we'll do

274
00:14:48.640 --> 00:14:53.420
is we'll, let's just stick the in here directly, there we go

275
00:14:53.420 --> 00:14:56.340
and then as I type this, you see as being mirrored here,

276
00:14:56.340 --> 00:15:00.450
but now I wanna go ahead and format that entire thing.

277
00:15:00.450 --> 00:15:04.280
So we'll go up here and we'll make a function

278
00:15:04.280 --> 00:15:06.220
to format the money.

279
00:15:06.220 --> 00:15:11.220
So say const format money is equal to Intl.NumberFormat

280
00:15:17.360 --> 00:15:20.420
and this is just, Intl.NumberFormat

281
00:15:20.420 --> 00:15:21.800
is built into the browser

282
00:15:21.800 --> 00:15:23.980
and it's a great way to format money

283
00:15:23.980 --> 00:15:26.460
based on the locale of the user.

284
00:15:26.460 --> 00:15:28.490
So in my case, I'm in Canada.

285
00:15:28.490 --> 00:15:33.490
So I'm gonna say en-ca you can put your own locale in there

286
00:15:33.720 --> 00:15:38.720
for whatever language and money formatting you're using.

287
00:15:39.600 --> 00:15:41.860
And then the second option is

288
00:15:41.860 --> 00:15:44.000
a couple options for how to format that number.

289
00:15:44.000 --> 00:15:49.000
So we'll say style is currency and the currency is CAD

290
00:15:51.070 --> 00:15:54.920
or USD or whatever currency you're working on there.

291
00:15:54.920 --> 00:15:56.860
And then the,

292
00:15:56.860 --> 00:16:01.670
so what that does is this returns a formatter

293
00:16:01.670 --> 00:16:06.250
and then in the formatter there's a method called .format,

294
00:16:06.250 --> 00:16:10.690
and I've never needed the actual formatter myself

295
00:16:10.690 --> 00:16:14.040
so I almost always just return the format function directly

296
00:16:14.040 --> 00:16:16.333
into a new variable called format money.

297
00:16:17.230 --> 00:16:19.560
And what we should be able to do

298
00:16:19.560 --> 00:16:24.063
is wrap this value in our format money function.

299
00:16:26.150 --> 00:16:27.933
And it will show us the value.

300
00:16:27.933 --> 00:16:32.933
Here we go, $2 trillion. So let's bring that back to 2534.

301
00:16:36.440 --> 00:16:38.820
So you see that I'm using cents here,

302
00:16:38.820 --> 00:16:40.970
but it assume it's using dollars.

303
00:16:40.970 --> 00:16:43.270
So what we'll need to do is take the value

304
00:16:43.270 --> 00:16:44.943
and divide it by 100.

305
00:16:45.810 --> 00:16:48.530
So it brings it back down there we go.

306
00:16:48.530 --> 00:16:51.610
And now there's one more problem is

307
00:16:51.610 --> 00:16:55.690
when I completely remove it, it says, NaN.

308
00:16:55.690 --> 00:16:57.450
So what we can do here is we can say,

309
00:16:57.450 --> 00:17:02.100
if there is a value question mark, then format the money,

310
00:17:02.100 --> 00:17:03.623
otherwise do nothing.

311
00:17:07.838 --> 00:17:10.720
And that should only return something if there is a value.

312
00:17:10.720 --> 00:17:15.720
See here you could also probably use the add in there,

313
00:17:16.390 --> 00:17:19.120
but I like this method right now.

314
00:17:19.120 --> 00:17:21.333
So that's what I'm going to use there.

315
00:17:22.740 --> 00:17:26.320
I believe that is it for this custom input.

316
00:17:26.320 --> 00:17:29.470
Just a pretty simple one, but nice, quick and easy way

317
00:17:29.470 --> 00:17:33.920
to visualize what the cents are in actual dollar value.

318
00:17:33.920 --> 00:17:35.260
And we're gonna be doing that function

319
00:17:35.260 --> 00:17:36.763
on the front end as well.

