WEBVTT

1
00:00:00.116 --> 00:00:02.699
(upbeat music)

2
00:00:04.400 --> 00:00:06.250
<v Narrator>Gone as some CSS real quick,</v>

3
00:00:06.250 --> 00:00:08.180
we want this pizza grid to show up

4
00:00:08.180 --> 00:00:09.710
where they're side by side,

5
00:00:09.710 --> 00:00:11.200
and then additionally I'm gonna show you

6
00:00:11.200 --> 00:00:15.300
something called CSS Subgrid which is fairly new to CSS,

7
00:00:15.300 --> 00:00:16.910
at least at time of recording.

8
00:00:16.910 --> 00:00:19.990
And it's going to be a perfect example

9
00:00:19.990 --> 00:00:20.960
of why we need subgrids.

10
00:00:20.960 --> 00:00:23.773
So, let's open up this pizza list.js,

11
00:00:24.730 --> 00:00:27.080
and let's make a pizza grid style.

12
00:00:27.080 --> 00:00:32.080
So const pizza grid styles is equal to styled.div,

13
00:00:32.410 --> 00:00:35.930
and then we wanna auto import our styled

14
00:00:35.930 --> 00:00:37.970
from styled components,

15
00:00:37.970 --> 00:00:40.373
and in here we'll say display grid.

16
00:00:41.520 --> 00:00:44.213
Grid template columns,

17
00:00:47.100 --> 00:00:49.963
repeat auto-fill.

18
00:00:51.940 --> 00:00:54.330
Then I'll say min max,

19
00:00:54.330 --> 00:00:57.240
minimum I want them to be 300 pixels wide

20
00:00:57.240 --> 00:01:02.240
and maximum I want them to be one FR, one free space unit.

21
00:01:03.980 --> 00:01:05.690
So give that a save and then we'll go ahead

22
00:01:05.690 --> 00:01:08.520
and pop this grid in so right here

23
00:01:08.520 --> 00:01:10.190
where we have our pizza list component,

24
00:01:10.190 --> 00:01:12.930
this div is gonna be replaced with the open

25
00:01:12.930 --> 00:01:15.510
and a close pizza grid styles.

26
00:01:15.510 --> 00:01:19.320
I see now they're starting to show up side by side,

27
00:01:19.320 --> 00:01:22.590
we probably want some grid gap.

28
00:01:22.590 --> 00:01:26.420
Actually, I think we could just use gap now 4rem

29
00:01:26.420 --> 00:01:28.730
cause they added a gap to Flexbox,

30
00:01:28.730 --> 00:01:31.030
so you don't need to say grid dash gap

31
00:01:31.030 --> 00:01:33.070
and if you're supporting the latest browsers,

32
00:01:33.070 --> 00:01:35.810
you can just go ahead and start to use gap.

33
00:01:35.810 --> 00:01:38.110
Then we'll also do the rows.

34
00:01:38.110 --> 00:01:43.110
So, here is the problem with the CSS Grid

35
00:01:45.010 --> 00:01:45.843
that we have right now,

36
00:01:45.843 --> 00:01:49.990
so they're not always lining up perfectly.

37
00:01:49.990 --> 00:01:52.020
You see that the images are not always

38
00:01:53.150 --> 00:01:55.270
like cropped the exact same way

39
00:01:55.270 --> 00:01:57.250
and this is pretty common thing where you get

40
00:01:57.250 --> 00:01:58.830
a client uploading files,

41
00:01:58.830 --> 00:02:03.830
and then also sometimes the toppings right here

42
00:02:04.260 --> 00:02:07.010
will be two lines and then nothing is lined up

43
00:02:07.010 --> 00:02:08.440
and that's really annoying.

44
00:02:08.440 --> 00:02:11.950
So, what we wanna do is we wanna specify

45
00:02:11.950 --> 00:02:13.780
the rows of the grid.

46
00:02:13.780 --> 00:02:16.710
So, row one is going to be the title,

47
00:02:16.710 --> 00:02:18.300
row two will be the ingredients

48
00:02:18.300 --> 00:02:22.230
and row three will be the actual photo of the pizza,

49
00:02:22.230 --> 00:02:23.270
and then we start again.

50
00:02:23.270 --> 00:02:26.680
And now we're not gonna explicitly state those rows

51
00:02:26.680 --> 00:02:30.290
because those are automatically generated rows in CSS Grid,

52
00:02:30.290 --> 00:02:33.650
so we can specify the automatically generated sizes

53
00:02:33.650 --> 00:02:37.717
by saying grid auto rows and we'll say auto,

54
00:02:40.970 --> 00:02:43.020
so the title will be auto height,

55
00:02:43.020 --> 00:02:48.020
the toppings will be auto height,

56
00:02:48.380 --> 00:02:51.633
and then the image will be 500 pixels high.

57
00:02:53.310 --> 00:02:56.320
Okay, so now we see it like that didn't do anything

58
00:02:56.320 --> 00:02:58.670
and the reason behind that is because

59
00:02:58.670 --> 00:03:02.440
we've put the rows on the pizza grid

60
00:03:02.440 --> 00:03:04.780
that surrounds all of the pizzas.

61
00:03:04.780 --> 00:03:08.190
However, the items that we really want to align

62
00:03:08.190 --> 00:03:10.960
are not direct children of our grid,

63
00:03:10.960 --> 00:03:13.410
they are children of a single pizza.

64
00:03:13.410 --> 00:03:15.680
So, this is our grid,

65
00:03:15.680 --> 00:03:17.620
but the items that we want to align

66
00:03:17.620 --> 00:03:22.620
are h2, the paragraph, and the image.

67
00:03:23.070 --> 00:03:26.770
So what we need to do is we need to tell

68
00:03:26.770 --> 00:03:29.490
the h2, the paragraph and the image

69
00:03:29.490 --> 00:03:33.880
to align themselves not based on this,

70
00:03:33.880 --> 00:03:36.793
but based on the parent and that is what Subgrid is.

71
00:03:36.793 --> 00:03:41.730
Subgrid is where children of another child

72
00:03:41.730 --> 00:03:44.990
will align themselves to a grand parent grid.

73
00:03:44.990 --> 00:03:47.420
And actually, I just see one quick issue I have here,

74
00:03:47.420 --> 00:03:51.650
this link tag should be only surrounding the h2,

75
00:03:51.650 --> 00:03:54.270
not the paragraph and the image.

76
00:03:54.270 --> 00:03:55.830
So make sure that you open and close

77
00:03:55.830 --> 00:03:58.173
the link around this h2 tag here.

78
00:03:59.620 --> 00:04:03.200
Okay, now what we'll do is we'll make another style

79
00:04:03.200 --> 00:04:04.500
for a single pizza,

80
00:04:04.500 --> 00:04:08.233
so we'll say const pizza styles,

81
00:04:10.290 --> 00:04:11.363
sequence a style.div.

82
00:04:17.760 --> 00:04:22.350
Then inside of here we'll say display grid again,

83
00:04:22.350 --> 00:04:24.320
and then we'll take this pizza styles

84
00:04:24.320 --> 00:04:27.550
and surround each single pizza

85
00:04:27.550 --> 00:04:30.370
in a open and close pizza style tag.

86
00:04:30.370 --> 00:04:32.500
Okay, so that is starting to work

87
00:04:32.500 --> 00:04:34.850
but now you see another problem that we have is

88
00:04:38.180 --> 00:04:40.050
the height of the pizza image

89
00:04:40.050 --> 00:04:42.190
is not necessarily always the same,

90
00:04:42.190 --> 00:04:45.450
and then we get this like weird, like look at this,

91
00:04:45.450 --> 00:04:46.630
the weird alignment.

92
00:04:46.630 --> 00:04:49.400
This has always been a bit of a shortfall of CSS Grid.

93
00:04:49.400 --> 00:04:54.400
So what we can do here is say grid template rows subgrid,

94
00:04:56.110 --> 00:05:00.550
and what that means we'll put a little comment,

95
00:05:00.550 --> 00:05:05.550
take your row sizing not from the pizza styles div,

96
00:05:09.010 --> 00:05:12.160
but from the, what was this one called?

97
00:05:12.160 --> 00:05:14.363
Pizza styles grid, grid.

98
00:05:18.810 --> 00:05:20.880
And so again, this has nothing to do

99
00:05:20.880 --> 00:05:22.240
with the style components,

100
00:05:22.240 --> 00:05:26.030
this is just a CSS Grid thing which is really cool.

101
00:05:26.030 --> 00:05:30.613
So, give that a save, okay.(laughs)

102
00:05:31.460 --> 00:05:34.450
So now it's looking a little bit funky,

103
00:05:34.450 --> 00:05:35.610
we got a little bit more to do,

104
00:05:35.610 --> 00:05:38.700
we need to say grid row span three,

105
00:05:38.700 --> 00:05:41.340
so meaning that each of these pizzas needs

106
00:05:41.340 --> 00:05:45.963
to span three rows in our CSS Grid.

107
00:05:46.893 --> 00:05:51.497
Here we go, and then we say grid gap, 1rem,

108
00:05:53.730 --> 00:05:58.730
and because we're inheriting the gap from this one now,

109
00:05:59.700 --> 00:06:02.980
we need to overwrite that with this one here.

110
00:06:02.980 --> 00:06:06.540
I'll say h2 and paragraph, margin zero,

111
00:06:06.540 --> 00:06:09.220
take that margin off of each of those.

112
00:06:09.220 --> 00:06:12.080
All right, that's looking pretty good

113
00:06:12.080 --> 00:06:14.633
and now you see how responsive it is.

114
00:06:17.330 --> 00:06:18.790
And as we get smaller,

115
00:06:18.790 --> 00:06:22.000
the images are always going to be the same.

116
00:06:22.000 --> 00:06:24.530
So that's a perfect use case for CSS Subgrid,

117
00:06:24.530 --> 00:06:25.930
now if you're using Chrome,

118
00:06:25.930 --> 00:06:30.270
at least that time of recording, doesn't support Subgrid so,

119
00:06:30.270 --> 00:06:34.490
we can do a little bit of sort of backup

120
00:06:34.490 --> 00:06:36.360
for browsers that don't support Subgrid.

121
00:06:36.360 --> 00:06:39.963
We can just, let's go right above this.

122
00:06:41.420 --> 00:06:43.520
And I'll say add supports,

123
00:06:43.520 --> 00:06:47.110
so this is a CSS thing where you say if it supports

124
00:06:47.110 --> 00:06:49.790
or if it does not support in our case,

125
00:06:49.790 --> 00:06:52.580
and you can just give it a bit of CSS

126
00:06:52.580 --> 00:06:55.730
and say grid template rows sub grid.

127
00:06:55.730 --> 00:06:57.840
So, basically what we can do here is we can say,

128
00:06:57.840 --> 00:07:00.800
hey, take this CSS try run it.

129
00:07:00.800 --> 00:07:05.110
If it doesn't work, then run this backup right here.

130
00:07:05.110 --> 00:07:10.110
So we'll say, grid, template rows, auto auto 1fr,

131
00:07:13.180 --> 00:07:17.490
and that will give us a nice little backup for CSS Grid.

132
00:07:17.490 --> 00:07:20.050
And we can actually even go a little bit further

133
00:07:20.050 --> 00:07:22.600
and change this to a CSS variable,

134
00:07:22.600 --> 00:07:25.670
where instead of saying this we can say,

135
00:07:25.670 --> 00:07:29.793
dash dash rows is equal to auto auto 1fr.

136
00:07:30.960 --> 00:07:34.380
And then we can go here where we actually specify the rows,

137
00:07:34.380 --> 00:07:39.380
say where variable is equal to the rows or Subgrid,

138
00:07:39.430 --> 00:07:41.380
and what this does is to say,

139
00:07:41.380 --> 00:07:43.253
check if this variable exist,

140
00:07:44.640 --> 00:07:48.700
otherwise fall back to this value of Subgrid.

141
00:07:48.700 --> 00:07:50.440
So now it's a little bit confusing,

142
00:07:50.440 --> 00:07:51.960
it's probably maybe the first time

143
00:07:51.960 --> 00:07:54.770
you've ever run into CSS upgrade but,

144
00:07:54.770 --> 00:07:57.270
I ran into that when I was building this and I was like,

145
00:07:57.270 --> 00:08:01.430
this is the perfect use case for CSS Subgrid.

146
00:08:01.430 --> 00:08:02.810
So that's showing up now,

147
00:08:02.810 --> 00:08:05.010
let's get into building our toppings picker.

