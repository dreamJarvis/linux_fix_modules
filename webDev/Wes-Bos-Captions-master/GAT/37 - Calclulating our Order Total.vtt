WEBVTT

1
00:00:00.056 --> 00:00:02.473
(calm music)

2
00:00:04.727 --> 00:00:05.890
<v Man>In this video we're gonna calculate</v>

3
00:00:05.890 --> 00:00:08.180
the order total and display it at the bottom,

4
00:00:08.180 --> 00:00:09.280
as well as create a button

5
00:00:09.280 --> 00:00:11.400
so that when we click that we can set ourselves up

6
00:00:11.400 --> 00:00:14.980
for generating the order and sending that over email.

7
00:00:14.980 --> 00:00:17.853
So let's go and,

8
00:00:18.820 --> 00:00:19.653
let's take a look here.

9
00:00:19.653 --> 00:00:24.110
We've got the very bottom of our field set here.

10
00:00:24.110 --> 00:00:27.573
We should have another field set,

11
00:00:29.170 --> 00:00:31.710
and inside of that we'll have a h3 tag

12
00:00:31.710 --> 00:00:34.150
that says, Your Total Is,

13
00:00:34.150 --> 00:00:38.030
and then that's where we're going to put the order total.

14
00:00:38.030 --> 00:00:42.220
Then we'll also give ourselves a button with a type

15
00:00:42.220 --> 00:00:44.789
of button, don't ever forget that.

16
00:00:44.789 --> 00:00:48.100
And then a, oh no, no, no, no, no, it's not type of button,

17
00:00:48.100 --> 00:00:49.853
it's a type of submit,

18
00:00:50.980 --> 00:00:54.520
and we'll just say Order Ahead.

19
00:00:54.520 --> 00:00:57.380
That won't do anything yet, but we will do it.

20
00:00:57.380 --> 00:01:00.600
Now, your order total is,

21
00:01:00.600 --> 00:01:03.130
what we'll do here is we'll make a new function

22
00:01:03.130 --> 00:01:04.480
called calculateOrderTotal,

23
00:01:06.570 --> 00:01:08.400
and then we'll pass it our order

24
00:01:08.400 --> 00:01:09.930
as well as a list of the pizzas

25
00:01:09.930 --> 00:01:13.290
so that we can grab the price and all that good stuff.

26
00:01:13.290 --> 00:01:16.680
So we need to now create that function.

27
00:01:16.680 --> 00:01:19.090
So let's jump into our utils folder,

28
00:01:19.090 --> 00:01:23.733
we'll make a new file, calculateOrderTotal.js,

29
00:01:25.000 --> 00:01:29.380
and then export default function

30
00:01:32.780 --> 00:01:34.500
calculateOrderTotal.

31
00:01:34.500 --> 00:01:35.480
What does that take in?

32
00:01:35.480 --> 00:01:37.993
It takes in our order and the pizzas.

33
00:01:39.340 --> 00:01:44.340
All right, last thing that we need to do is to import this.

34
00:01:48.150 --> 00:01:52.533
Good, so that function is now being imported right here,

35
00:01:55.050 --> 00:01:58.140
and whatever we return from this function

36
00:02:00.300 --> 00:02:04.690
should show up right here.

37
00:02:04.690 --> 00:02:06.560
Your order total is ASDF.

38
00:02:06.560 --> 00:02:08.500
Okay, cool.

39
00:02:08.500 --> 00:02:10.470
So what do we wanna do inside of here?

40
00:02:10.470 --> 00:02:15.320
Well, we need to loop over every single item in the pizza.

41
00:02:15.320 --> 00:02:19.540
Let's actually write this down so we see what we want.

42
00:02:19.540 --> 00:02:24.140
Let's start, say loop over each item

43
00:02:25.520 --> 00:02:27.300
in the order.

44
00:02:27.300 --> 00:02:30.520
Calc the total

45
00:02:30.520 --> 00:02:32.133
for that pizza.

46
00:02:33.040 --> 00:02:35.520
Add that total to the

47
00:02:37.120 --> 00:02:39.590
running total.

48
00:02:39.590 --> 00:02:42.770
All right, so this is a really good use case for reduce.

49
00:02:42.770 --> 00:02:46.110
A reduce is where you take an aray of things

50
00:02:46.110 --> 00:02:49.200
and reduce it down into something else.

51
00:02:49.200 --> 00:02:51.620
So in our case we're gonna take an aray of orders

52
00:02:51.620 --> 00:02:54.770
and we're gonna reduce it down into a single number

53
00:02:54.770 --> 00:02:55.603
that we have.

54
00:02:55.603 --> 00:02:59.150
So what we'll do here is say, we'll say const

55
00:02:59.150 --> 00:03:01.480
total is equal to, we'll take the order

56
00:03:01.480 --> 00:03:02.793
and when we reduce it,

57
00:03:03.690 --> 00:03:06.050
the reduce takes two things.

58
00:03:06.050 --> 00:03:08.590
It takes a callback function

59
00:03:08.590 --> 00:03:11.360
where that callback function gives us the accumulator,

60
00:03:11.360 --> 00:03:15.970
I like to use acc, and the single item in the order.

61
00:03:15.970 --> 00:03:18.830
So this is similar to how map and for each

62
00:03:18.830 --> 00:03:21.500
will give us a single item of the aray.

63
00:03:21.500 --> 00:03:24.420
In this case, reduce gives that to us.

64
00:03:24.420 --> 00:03:25.563
Then, from that,

65
00:03:26.680 --> 00:03:30.570
we need to figure out, oh other thing

66
00:03:30.570 --> 00:03:31.470
is the second argument.

67
00:03:31.470 --> 00:03:32.830
Sorry, a second argument of reduce

68
00:03:32.830 --> 00:03:33.790
is what do you start with?

69
00:03:33.790 --> 00:03:36.350
In our case we're gonna start with zero.

70
00:03:36.350 --> 00:03:40.990
And then, we'll say const pizza is equal to pizzas.find.

71
00:03:42.160 --> 00:03:44.853
So we're gonna find the pizza that we're working with.

72
00:03:44.853 --> 00:03:48.882
Pizza, pizza.id is equal to order

73
00:03:48.882 --> 00:03:51.400
singleOrder.id.

74
00:03:51.400 --> 00:03:54.420
So that will find the pizza in the pizza aray.

75
00:03:54.420 --> 00:03:56.980
We did something similar to that already

76
00:03:56.980 --> 00:03:59.460
when we were listing it out here.

77
00:03:59.460 --> 00:04:04.040
And then we just gonna need to return the running total.

78
00:04:04.040 --> 00:04:07.108
Actually, let's call that runningTotal,

79
00:04:07.108 --> 00:04:09.800
runningTotal instead of accumulator.

80
00:04:09.800 --> 00:04:13.170
So return the runningTotal plus

81
00:04:14.030 --> 00:04:18.620
the actual value of the current pizza that we are on.

82
00:04:18.620 --> 00:04:22.280
So we need to use that function that we made before

83
00:04:22.280 --> 00:04:23.630
called calculatePizzaPrice,

84
00:04:25.373 --> 00:04:26.623
and we have to import it.

85
00:04:29.410 --> 00:04:33.100
And, import didn't work, boom, there we go.

86
00:04:33.100 --> 00:04:34.690
Import calculate pizza price,

87
00:04:34.690 --> 00:04:38.160
and we need to pass that the pizza.price

88
00:04:38.160 --> 00:04:41.143
and the singleOrder.size.

89
00:04:43.790 --> 00:04:46.360
Okay, and then I believe we just need to return

90
00:04:46.360 --> 00:04:47.433
the total from here.

91
00:04:49.500 --> 00:04:54.500
And now, there we go, now as we add items to our order

92
00:04:54.590 --> 00:04:58.550
That value then goes ahead and climbs.

93
00:04:58.550 --> 00:05:00.750
We could also, instead of making a variable

94
00:05:00.750 --> 00:05:04.520
and returning it, we could simply just return

95
00:05:04.520 --> 00:05:06.453
that in one go.

96
00:05:07.611 --> 00:05:08.940
So I'm gonna remove these comments

97
00:05:08.940 --> 00:05:11.320
just 'cause we've done it already.

98
00:05:11.320 --> 00:05:14.640
Okay, that looks good.

99
00:05:14.640 --> 00:05:16.320
Why is this yelling at me?

100
00:05:16.320 --> 00:05:19.233
Pizza is already declared in the upper scope.

101
00:05:25.135 --> 00:05:26.570
Oh, yeah, yeah, yeah.

102
00:05:26.570 --> 00:05:29.770
I see, it's 'cause we have pizza here

103
00:05:29.770 --> 00:05:31.220
and we have pizza here.

104
00:05:31.220 --> 00:05:34.483
Maybe we should name this singlePizza.

105
00:05:40.890 --> 00:05:44.450
All right, so we've got our values being shown up here.

106
00:05:44.450 --> 00:05:47.560
Next, what we need to do is go back to our order

107
00:05:47.560 --> 00:05:49.440
and simply just wrap that sucker

108
00:05:49.440 --> 00:05:52.033
in our format money function.

109
00:05:53.360 --> 00:05:56.190
And I believe the format money function's already imported

110
00:05:56.190 --> 00:05:57.663
into this file, there we go.

111
00:05:58.619 --> 00:06:01.440
Add, there we go,

112
00:06:01.440 --> 00:06:03.190
it's all being added up.

113
00:06:03.190 --> 00:06:04.433
Okay, cool.

114
00:06:05.850 --> 00:06:08.980
The next one we're going to persist these values.

115
00:06:08.980 --> 00:06:12.210
So if I were to go to Pizza Menu and come back to my order,

116
00:06:12.210 --> 00:06:15.330
it will stay there instead of being gone.

