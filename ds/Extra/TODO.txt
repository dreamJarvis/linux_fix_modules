///////////////////////////////////// GFG ////////////////////////////////

Maximum size square sub-matrix with all 1s
Maximum size rectangle binary sub-matrix with all 1s
Building Heap from Array
Connect n ropes with minimum cost

////////////////////////////////////// leetcode ////////////////////////////////////

https://leetcode.com/problems/target-sum/
https://leetcode.com/problems/minimum-cost-to-merge-stones/
https://leetcode.com/problems/kth-largest-element-in-an-array/
https://leetcode.com/problems/merge-k-sorted-lists/
https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array/
Maximum XOR of Two Numbers in an Array
https://leetcode.com/problems/house-robber/
https://leetcode.com/problems/edit-distance/
https://leetcode.com/problems/longest-consecutive-sequence/
410. Split Array Largest Sum
https://www.spoj.com/problems/AGGRCOW/


 Q ) Balanced BST (questions)
 Q ) Merge 2 BST (space complexity : O(1))
 Q ) Questions based on sub-strings and sub-sequence
 Q ) To find if the given LL is palindrome or not

//////////////////////////////////////// H.W. /////////////////////////////////////

Adv ds â€“
Edit Distance Edit distance is a way of quantifying how dissimilar two strings are, i.e., how many operations (add, delete or replace character) it would take to transform one string to the other. This is one of the most common variants of edit distance, also called Levenshtein distance, named after Soviet computer scientist, Vladimir Levenshtein. There are 3 operations which can be applied to either string, namely: insertion, deletion and replacement.

Homework-
https://www.hackerearth.com/practice/algorithms/dynamic-programming/2-dimensional/practice-problems/algorithm/next-lucky-number/
https://www.hackerearth.com/practice/algorithms/dynamic-programming/2-dimensional/practice-problems/algorithm/partitioning-binary-strings-857646e9/
